/**
 * array-includes-with-glob
 * Like _.includes but with wildcards
 * Version: 3.0.11
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://codsen.com/os/array-includes-with-glob/
 */

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).arrayIncludesWithGlob={})}(this,(function(e){"use strict";const t=new Map;function n(e,t){if(!Array.isArray(e))switch(typeof e){case"string":e=[e];break;case"undefined":e=[];break;default:throw new TypeError(`Expected '${t}' to be a string or an array, but got a type of '${typeof e}'`)}return e.filter((e=>{if("string"!=typeof e){if(void 0===e)return!1;throw new TypeError(`Expected '${t}' to be an array of strings, but found a type of '${typeof e}' in the array`)}return!0}))}function r(e,n){n={caseSensitive:!1,...n};const r=e+JSON.stringify(n);if(t.has(r))return t.get(r);const s="!"===e[0];s&&(e=e.slice(1)),e=(e=>{if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")})(e).replace(/\\\*/g,"[\\s\\S]*");const i=new RegExp(`^${e}$`,n.caseSensitive?"":"i");return i.negated=s,t.set(r,i),i}var s=(e,t,s)=>{if(e=n(e,"inputs"),0===(t=n(t,"patterns")).length)return[];const i="!"===t[0][0];t=t.map((e=>r(e,s)));const o=[];for(const n of e){let e=i;for(const r of t)r.test(n)&&(e=!r.negated);e&&o.push(n)}return o};s.isMatch=(e,t,s)=>(e=n(e,"inputs"),0!==(t=n(t,"patterns")).length&&e.some((e=>t.every((t=>{const n=r(t,s),i=n.test(e);return n.negated?!i:i})))));const i={arrayVsArrayAllMustBeFound:"any",caseSensitive:!0};e.defaults=i,e.includesWithGlob=function(e,t,n){if(!e.length||!t.length)return!1;const r={...i,...n},o="string"==typeof e?[e]:Array.from(e);return"string"==typeof t?o.some((e=>s.isMatch(e,t,{caseSensitive:r.caseSensitive}))):"any"===r.arrayVsArrayAllMustBeFound?t.some((e=>o.some((t=>s.isMatch(t,e,{caseSensitive:r.caseSensitive}))))):t.every((e=>o.some((t=>s.isMatch(t,e,{caseSensitive:r.caseSensitive})))))},e.version="3.0.11",Object.defineProperty(e,"__esModule",{value:!0})}));
