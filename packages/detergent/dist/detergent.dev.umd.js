/**
 * @name detergent
 * @fileoverview Extracts, cleans and encodes text
 * @version 7.0.12
 * @author Roy Revelt, Codsen Ltd
 * @license MIT
 * {@link https://codsen.com/os/detergent/}
 */

var detergent=(()=>{var Qn=Object.create,Zt=Object.defineProperty,Xn=Object.getPrototypeOf,Ma=Object.prototype.hasOwnProperty,eo=Object.getOwnPropertyNames,ro=Object.getOwnPropertyDescriptor,Ya=Object.getOwnPropertySymbols,to=Object.prototype.propertyIsEnumerable;var Za=(e,y,h)=>y in e?Zt(e,y,{enumerable:!0,configurable:!0,writable:!0,value:h}):e[y]=h,ye=(e,y)=>{for(var h in y||(y={}))Ma.call(y,h)&&Za(e,h,y[h]);if(Ya)for(var h of Ya(y))to.call(y,h)&&Za(e,h,y[h]);return e},ao=e=>Zt(e,"__esModule",{value:!0});var et=(e,y)=>()=>(y||e((y={exports:{}}).exports,y),y.exports),no=(e,y)=>{for(var h in y)Zt(e,h,{get:y[h],enumerable:!0})},oo=(e,y,h)=>{if(y&&typeof y=="object"||typeof y=="function")for(let a of eo(y))!Ma.call(e,a)&&a!=="default"&&Zt(e,a,{get:()=>y[a],enumerable:!(h=ro(y,a))||h.enumerable});return e},Ur=e=>oo(ao(Zt(e!=null?Qn(Xn(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e);var Ea=et((ra,Ka)=>{(function(e,y){typeof ra=="object"&&typeof Ka!="undefined"?y(ra):typeof define=="function"&&define.amd?define(["exports"],y):y((e=typeof globalThis!="undefined"?globalThis:e||self).stringLeftRight={})})(ra,function(e){"use strict";var y,h,a=Object.prototype,g=Function.prototype.toString,pe=a.hasOwnProperty,U=g.call(Object),l=a.toString,r=(y=Object.getPrototypeOf,h=Object,function(S){return y(h(S))}),o=function(S){if(!function(we){return!!we&&typeof we=="object"}(S)||l.call(S)!="[object Object]"||function(we){var E=!1;if(we!=null&&typeof we.toString!="function")try{E=!!(we+"")}catch(Ge){}return E}(S))return!1;var x=r(S);if(x===null)return!0;var X=pe.call(x,"constructor")&&x.constructor;return typeof X=="function"&&X instanceof X&&g.call(X)==U},c=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{},b=function(S){var x={exports:{}};return S(x,x.exports),x.exports}(function(S,x){var X="__lodash_hash_undefined__",we=9007199254740991,E="[object Arguments]",Ge="[object Boolean]",f="[object Date]",W="[object Function]",I="[object GeneratorFunction]",$="[object Map]",H="[object Number]",z="[object Object]",xe="[object Promise]",ue="[object RegExp]",ve="[object Set]",oe="[object String]",Ce="[object Symbol]",Te="[object WeakMap]",D="[object ArrayBuffer]",ee="[object DataView]",K="[object Float32Array]",j="[object Float64Array]",se="[object Int8Array]",Ee="[object Int16Array]",$e="[object Int32Array]",je="[object Uint8Array]",We="[object Uint8ClampedArray]",Ne="[object Uint16Array]",V="[object Uint32Array]",ze=/\w*$/,kr=/^\[object .+?Constructor\]$/,lr=/^(?:0|[1-9]\d*)$/,_e={};_e[E]=_e["[object Array]"]=_e[D]=_e[ee]=_e[Ge]=_e[f]=_e[K]=_e[j]=_e[se]=_e[Ee]=_e[$e]=_e[$]=_e[H]=_e[z]=_e[ue]=_e[ve]=_e[oe]=_e[Ce]=_e[je]=_e[We]=_e[Ne]=_e[V]=!0,_e["[object Error]"]=_e[W]=_e[Te]=!1;var A=typeof self=="object"&&self&&self.Object===Object&&self,Je=typeof c=="object"&&c&&c.Object===Object&&c||A||Function("return this")(),he=x&&!x.nodeType&&x,tr=he&&S&&!S.nodeType&&S,Ue=tr&&tr.exports===he;function Pe(T,_){return T.set(_[0],_[1]),T}function He(T,_){return T.add(_),T}function Fe(T,_,qe,ce){var d=-1,Ie=T?T.length:0;for(ce&&Ie&&(qe=T[++d]);++d<Ie;)qe=_(qe,T[d],d,T);return qe}function Me(T){var _=!1;if(T!=null&&typeof T.toString!="function")try{_=!!(T+"")}catch(qe){}return _}function ir(T){var _=-1,qe=Array(T.size);return T.forEach(function(ce,d){qe[++_]=[d,ce]}),qe}function fr(T,_){return function(qe){return T(_(qe))}}function Br(T){var _=-1,qe=Array(T.size);return T.forEach(function(ce){qe[++_]=ce}),qe}var Jr,Mr=Array.prototype,ft=Function.prototype,ut=Object.prototype,zr=Je["__core-js_shared__"],ur=(Jr=/[^.]+$/.exec(zr&&zr.keys&&zr.keys.IE_PROTO||""))?"Symbol(src)_1."+Jr:"",wt=ft.toString,Ar=ut.hasOwnProperty,ct=ut.toString,pt=RegExp("^"+wt.call(Ar).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Yr=Ue?Je.Buffer:void 0,Gr=Je.Symbol,nt=Je.Uint8Array,Rr=fr(Object.getPrototypeOf,Object),Zr=Object.create,ot=ut.propertyIsEnumerable,dt=Mr.splice,ht=Object.getOwnPropertySymbols,bt=Yr?Yr.isBuffer:void 0,qt=fr(Object.keys,Object),yt=be(Je,"DataView"),Wr=be(Je,"Map"),Kr=be(Je,"Promise"),Ir=be(Je,"Set"),xr=be(Je,"WeakMap"),wr=be(Object,"create"),Fr=fe(yt),mt=fe(Wr),st=fe(Kr),Qr=fe(Ir),rt=fe(xr),_r=Gr?Gr.prototype:void 0,w=_r?_r.valueOf:void 0;function s(T){var _=-1,qe=T?T.length:0;for(this.clear();++_<qe;){var ce=T[_];this.set(ce[0],ce[1])}}function L(T){var _=-1,qe=T?T.length:0;for(this.clear();++_<qe;){var ce=T[_];this.set(ce[0],ce[1])}}function R(T){var _=-1,qe=T?T.length:0;for(this.clear();++_<qe;){var ce=T[_];this.set(ce[0],ce[1])}}function re(T){this.__data__=new L(T)}function le(T,_){var qe=nr(T)||function(p){return function(C){return function(J){return!!J&&typeof J=="object"}(C)&&Xe(C)}(p)&&Ar.call(p,"callee")&&(!ot.call(p,"callee")||ct.call(p)==E)}(T)?function(p,C){for(var J=-1,me=Array(p);++J<p;)me[J]=C(J);return me}(T.length,String):[],ce=qe.length,d=!!ce;for(var Ie in T)!_&&!Ar.call(T,Ie)||d&&(Ie=="length"||k(Ie,ce))||qe.push(Ie);return qe}function De(T,_,qe){var ce=T[_];Ar.call(T,_)&&Se(ce,qe)&&(qe!==void 0||_ in T)||(T[_]=qe)}function ie(T,_){for(var qe=T.length;qe--;)if(Se(T[qe][0],_))return qe;return-1}function ge(T,_,qe,ce,d,Ie,p){var C;if(ce&&(C=Ie?ce(T,d,Ie,p):ce(T)),C!==void 0)return C;if(!Ae(T))return T;var J=nr(T);if(J){if(C=function(Be){var rr=Be.length,dr=Be.constructor(rr);return rr&&typeof Be[0]=="string"&&Ar.call(Be,"index")&&(dr.index=Be.index,dr.input=Be.input),dr}(T),!_)return function(Be,rr){var dr=-1,Tr=Be.length;for(rr||(rr=Array(Tr));++dr<Tr;)rr[dr]=Be[dr];return rr}(T,C)}else{var me=sr(T),Oe=me==W||me==I;if(ar(T))return function(Be,rr){if(rr)return Be.slice();var dr=new Be.constructor(Be.length);return Be.copy(dr),dr}(T,_);if(me==z||me==E||Oe&&!Ie){if(Me(T))return Ie?T:{};if(C=function(Be){return typeof Be.constructor!="function"||Y(Be)?{}:(rr=Rr(Be),Ae(rr)?Zr(rr):{});var rr}(Oe?{}:T),!_)return function(Be,rr){return Re(Be,Ye(Be),rr)}(T,function(Be,rr){return Be&&Re(rr,Dr(rr),Be)}(C,T))}else{if(!_e[me])return Ie?T:{};C=function(Be,rr,dr,Tr){var Xr=Be.constructor;switch(rr){case D:return m(Be);case Ge:case f:return new Xr(+Be);case ee:return function(N,ne){var ke=ne?m(N.buffer):N.buffer;return new N.constructor(ke,N.byteOffset,N.byteLength)}(Be,Tr);case K:case j:case se:case Ee:case $e:case je:case We:case Ne:case V:return function(N,ne){var ke=ne?m(N.buffer):N.buffer;return new N.constructor(ke,N.byteOffset,N.length)}(Be,Tr);case $:return function(N,ne,ke){return Fe(ne?ke(ir(N),!0):ir(N),Pe,new N.constructor)}(Be,Tr,dr);case H:case oe:return new Xr(Be);case ue:return function(N){var ne=new N.constructor(N.source,ze.exec(N));return ne.lastIndex=N.lastIndex,ne}(Be);case ve:return function(N,ne,ke){return Fe(ne?ke(Br(N),!0):Br(N),He,new N.constructor)}(Be,Tr,dr);case Ce:return B=Be,w?Object(w.call(B)):{}}var B}(T,me,ge,_)}}p||(p=new re);var Ke=p.get(T);if(Ke)return Ke;if(p.set(T,C),!J)var hr=qe?function(Be){return function(rr,dr,Tr){var Xr=dr(rr);return nr(rr)?Xr:function(B,N){for(var ne=-1,ke=N.length,cr=B.length;++ne<ke;)B[cr+ne]=N[ne];return B}(Xr,Tr(rr))}(Be,Dr,Ye)}(T):Dr(T);return function(Be,rr){for(var dr=-1,Tr=Be?Be.length:0;++dr<Tr&&rr(Be[dr],dr,Be)!==!1;);}(hr||T,function(Be,rr){hr&&(Be=T[rr=Be]),De(C,rr,ge(Be,_,qe,ce,rr,T,p))}),C}function ae(T){return!(!Ae(T)||function(_){return!!ur&&ur in _}(T))&&(mr(T)||Me(T)?pt:kr).test(fe(T))}function m(T){var _=new T.constructor(T.byteLength);return new nt(_).set(new nt(T)),_}function Re(T,_,qe,ce){qe||(qe={});for(var d=-1,Ie=_.length;++d<Ie;){var p=_[d],C=ce?ce(qe[p],T[p],p,qe,T):void 0;De(qe,p,C===void 0?T[p]:C)}return qe}function or(T,_){var qe,ce,d=T.__data__;return((ce=typeof(qe=_))=="string"||ce=="number"||ce=="symbol"||ce=="boolean"?qe!=="__proto__":qe===null)?d[typeof _=="string"?"string":"hash"]:d.map}function be(T,_){var qe=function(ce,d){return ce==null?void 0:ce[d]}(T,_);return ae(qe)?qe:void 0}s.prototype.clear=function(){this.__data__=wr?wr(null):{}},s.prototype.delete=function(T){return this.has(T)&&delete this.__data__[T]},s.prototype.get=function(T){var _=this.__data__;if(wr){var qe=_[T];return qe===X?void 0:qe}return Ar.call(_,T)?_[T]:void 0},s.prototype.has=function(T){var _=this.__data__;return wr?_[T]!==void 0:Ar.call(_,T)},s.prototype.set=function(T,_){return this.__data__[T]=wr&&_===void 0?X:_,this},L.prototype.clear=function(){this.__data__=[]},L.prototype.delete=function(T){var _=this.__data__,qe=ie(_,T);return!(qe<0)&&(qe==_.length-1?_.pop():dt.call(_,qe,1),!0)},L.prototype.get=function(T){var _=this.__data__,qe=ie(_,T);return qe<0?void 0:_[qe][1]},L.prototype.has=function(T){return ie(this.__data__,T)>-1},L.prototype.set=function(T,_){var qe=this.__data__,ce=ie(qe,T);return ce<0?qe.push([T,_]):qe[ce][1]=_,this},R.prototype.clear=function(){this.__data__={hash:new s,map:new(Wr||L),string:new s}},R.prototype.delete=function(T){return or(this,T).delete(T)},R.prototype.get=function(T){return or(this,T).get(T)},R.prototype.has=function(T){return or(this,T).has(T)},R.prototype.set=function(T,_){return or(this,T).set(T,_),this},re.prototype.clear=function(){this.__data__=new L},re.prototype.delete=function(T){return this.__data__.delete(T)},re.prototype.get=function(T){return this.__data__.get(T)},re.prototype.has=function(T){return this.__data__.has(T)},re.prototype.set=function(T,_){var qe=this.__data__;if(qe instanceof L){var ce=qe.__data__;if(!Wr||ce.length<199)return ce.push([T,_]),this;qe=this.__data__=new R(ce)}return qe.set(T,_),this};var Ye=ht?fr(ht,Object):function(){return[]},sr=function(T){return ct.call(T)};function k(T,_){return!!(_=_==null?we:_)&&(typeof T=="number"||lr.test(T))&&T>-1&&T%1==0&&T<_}function Y(T){var _=T&&T.constructor;return T===(typeof _=="function"&&_.prototype||ut)}function fe(T){if(T!=null){try{return wt.call(T)}catch(_){}try{return T+""}catch(_){}}return""}function Se(T,_){return T===_||T!=T&&_!=_}(yt&&sr(new yt(new ArrayBuffer(1)))!=ee||Wr&&sr(new Wr)!=$||Kr&&sr(Kr.resolve())!=xe||Ir&&sr(new Ir)!=ve||xr&&sr(new xr)!=Te)&&(sr=function(T){var _=ct.call(T),qe=_==z?T.constructor:void 0,ce=qe?fe(qe):void 0;if(ce)switch(ce){case Fr:return ee;case mt:return $;case st:return xe;case Qr:return ve;case rt:return Te}return _});var nr=Array.isArray;function Xe(T){return T!=null&&function(_){return typeof _=="number"&&_>-1&&_%1==0&&_<=we}(T.length)&&!mr(T)}var ar=bt||function(){return!1};function mr(T){var _=Ae(T)?ct.call(T):"";return _==W||_==I}function Ae(T){var _=typeof T;return!!T&&(_=="object"||_=="function")}function Dr(T){return Xe(T)?le(T):function(_){if(!Y(_))return qt(_);var qe=[];for(var ce in Object(_))Ar.call(_,ce)&&ce!="constructor"&&qe.push(ce);return qe}(T)}S.exports=function(T){return ge(T,!0,!0)}});let n="\xA0";function P(S){let x={value:S,hungry:!1,optional:!1};return(x.value.endsWith("?*")||x.value.endsWith("*?"))&&x.value.length>2?(x.value=x.value.slice(0,x.value.length-2),x.optional=!0,x.hungry=!0):x.value.endsWith("?")&&x.value.length>1?(x.value=x.value.slice(0,~-x.value.length),x.optional=!0):x.value.endsWith("*")&&x.value.length>1&&(x.value=x.value.slice(0,~-x.value.length),x.hungry=!0),x}function u(S){return typeof S=="number"}function i(S){return typeof S=="string"}function t({str:S,idx:x=0,stopAtNewlines:X=!1,stopAtRawNbsp:we=!1}){if(typeof S!="string"||!S.length||(x&&typeof x=="number"||(x=0),!S[x+1]))return null;if(S[x+1]&&(S[x+1].trim()||X&&`
\r`.includes(S[x+1])||we&&S[x+1]===n))return x+1;if(S[x+2]&&(S[x+2].trim()||X&&`
\r`.includes(S[x+2])||we&&S[x+2]===n))return x+2;for(let E=x+1,Ge=S.length;E<Ge;E++)if(S[E].trim()||X&&`
\r`.includes(S[E])||we&&S[E]===n)return E;return null}function O(S,x=0){return t({str:S,idx:x,stopAtNewlines:!1,stopAtRawNbsp:!1})}function v({str:S,idx:x,stopAtNewlines:X,stopAtRawNbsp:we}){if(typeof S!="string"||!S.length||(x&&typeof x=="number"||(x=0),x<1))return null;if(S[~-x]&&(S[~-x].trim()||X&&`
\r`.includes(S[~-x])||we&&S[~-x]===n))return~-x;if(S[x-2]&&(S[x-2].trim()||X&&`
\r`.includes(S[x-2])||we&&S[x-2]===n))return x-2;for(let E=x;E--;)if(S[E]&&(S[E].trim()||X&&`
\r`.includes(S[E])||we&&S[E]===n))return E;return null}function M(S,x=0){return v({str:S,idx:x,stopAtNewlines:!1,stopAtRawNbsp:!1})}function q(S,x,X,we,E){if(typeof x!="string"||!x.length||(typeof X!="number"&&(X=0),S==="right"&&!x[X+1]||S==="left"&&!x[~-X]))return null;let Ge=X,f=[],W,I,$,H=0;for(;H<E.length;){if(!i(E[H])||!E[H].length){H+=1;continue}let{value:z,optional:xe,hungry:ue}=P(E[H]),ve=S==="right"?O(x,Ge):M(x,Ge);if(!(we.i&&x[ve].toLowerCase()===z.toLowerCase()||!we.i&&x[ve]===z)){if(xe){H+=1;continue}if($){H+=1,$=void 0;continue}return null}{let oe=S==="right"?O(x,ve):M(x,ve);ue&&(we.i&&x[oe].toLowerCase()===z.toLowerCase()||!we.i&&x[oe]===z)?$=!0:H+=1,typeof ve=="number"&&S==="right"&&ve>Ge+1?f.push([Ge+1,ve]):S==="left"&&typeof ve=="number"&&ve<~-Ge&&f.unshift([ve+1,Ge]),Ge=ve,S==="right"?(W===void 0&&(W=ve),I=ve):(I===void 0&&(I=ve),W=ve)}}return W===void 0||I===void 0?null:{gaps:f,leftmostChar:W,rightmostChar:I}}let Q={i:!1};function Z(S,x,...X){if(!X||!X.length)throw new Error("string-left-right/leftSeq(): only two input arguments were passed! Did you intend to use left() method instead?");let we;return we=o(X[0])?ye(ye({},Q),X.shift()):Q,q("left",S,x,we,Array.from(X).reverse())}function te(S,x,...X){if(!X||!X.length)throw new Error("string-left-right/rightSeq(): only two input arguments were passed! Did you intend to use right() method instead?");let we;return we=o(X[0])?ye(ye({},Q),X.shift()):Q,q("right",S,x,we,X)}function G(S,x,X,we,E=[]){if(typeof x!="string"||!x.length||(X&&typeof X=="number"||(X=0),S==="right"&&!x[X+1]||S==="left"&&+X==0))return null;let Ge=null,f=null;do Ge=S==="right"?te(x,typeof f=="number"?f:X,...E):Z(x,typeof f=="number"?f:X,...E),Ge!==null&&(f=S==="right"?Ge.rightmostChar:Ge.leftmostChar);while(Ge);if(f!=null&&S==="right"&&(f+=1),f===null)return null;if(S==="right"){if(x[f]&&x[f].trim())return f;let I=O(x,f);if(we&&we.mode!==0){if(we.mode===1)return f;if(we.mode===2){let $=x.slice(f);if($.trim()||$.includes(`
`)||$.includes("\r")){for(let H=f,z=x.length;H<z;H++)if(x[H].trim()||`
\r`.includes(x[H]))return H}return x.length}}else{if(I===f+1)return f;if(!(x.slice(f,I||x.length).trim()||x.slice(f,I||x.length).includes(`
`)||x.slice(f,I||x.length).includes("\r")))return I?~-I:x.length;for(let $=f,H=x.length;$<H;$++)if(`
\r`.includes(x[$]))return $}return I||x.length}if(x[f]&&x[~-f]&&x[~-f].trim())return f;let W=M(x,f);if(!we||we.mode===0){if(W===f-2)return f;if(x.slice(0,f).trim()||x.slice(0,f).includes(`
`)||x.slice(0,f).includes("\r")){for(let I=f;I--;)if(`
\r`.includes(x[I])||x[I].trim())return I+1+(x[I].trim()?1:0)}return 0}if(we.mode===1)return f;if(we.mode===2){let I=x.slice(0,f);if(I.trim()||I.includes(`
`)||I.includes("\r")){for(let $=f;$--;)if(x[$].trim()||`
\r`.includes(x[$]))return $+1}return 0}return W!==null?W+1:0}e.chompLeft=function(S,x,...X){if(!X.length||X.length===1&&o(X[0]))return null;let we={mode:0};if(o(X[0])){let E=ye(ye({},we),b(X[0]));if(E.mode){if(i(E.mode)&&"0123".includes(E.mode))E.mode=Number.parseInt(E.mode,10);else if(!u(E.mode))throw new Error(`string-left-right/chompLeft(): [THROW_ID_01] the opts.mode is wrong! It should be 0, 1, 2 or 3. It was given as ${E.mode} (type ${typeof E.mode})`)}else E.mode=0;return G("left",S,x,E,b(X).slice(1))}return i(X[0])?G("left",S,x,we,b(X)):G("left",S,x,we,b(X).slice(1))},e.chompRight=function(S,x,...X){if(!X.length||X.length===1&&o(X[0]))return null;let we={mode:0};if(o(X[0])){let E=ye(ye({},we),b(X[0]));if(E.mode){if(i(E.mode)&&"0123".includes(E.mode))E.mode=Number.parseInt(E.mode,10);else if(!u(E.mode))throw new Error(`string-left-right/chompRight(): [THROW_ID_02] the opts.mode is wrong! It should be 0, 1, 2 or 3. It was given as ${E.mode} (type ${typeof E.mode})`)}else E.mode=0;return G("right",S,x,E,b(X).slice(1))}return i(X[0])?G("right",S,x,we,b(X)):G("right",S,x,we,b(X).slice(1))},e.left=M,e.leftSeq=Z,e.leftStopAtNewLines=function(S,x){return v({str:S,idx:x,stopAtNewlines:!0,stopAtRawNbsp:!1})},e.leftStopAtRawNbsp=function(S,x){return v({str:S,idx:x,stopAtNewlines:!1,stopAtRawNbsp:!0})},e.right=O,e.rightSeq=te,e.rightStopAtNewLines=function(S,x){return t({str:S,idx:x,stopAtNewlines:!0,stopAtRawNbsp:!1})},e.rightStopAtRawNbsp=function(S,x){return t({str:S,idx:x,stopAtNewlines:!1,stopAtRawNbsp:!0})},e.version="4.0.12",Object.defineProperty(e,"__esModule",{value:!0})})});var Xa=et((ta,Qa)=>{(function(e,y){typeof ta=="object"&&typeof Qa!="undefined"?y(ta):typeof define=="function"&&define.amd?define(["exports"],y):y((e=typeof globalThis!="undefined"?globalThis:e||self).stringFixBrokenNamedEntities={})})(ta,function(e){"use strict";let y=[],h=[],a=(D,ee)=>{if(D===ee)return 0;let K=D;D.length>ee.length&&(D=ee,ee=K);let j=D.length,se=ee.length;for(;j>0&&D.charCodeAt(~-j)===ee.charCodeAt(~-se);)j--,se--;let Ee,$e,je,We,Ne=0;for(;Ne<j&&D.charCodeAt(Ne)===ee.charCodeAt(Ne);)Ne++;if(j-=Ne,se-=Ne,j===0)return se;let V=0,ze=0;for(;V<j;)h[V]=D.charCodeAt(Ne+V),y[V]=++V;for(;ze<se;)for(Ee=ee.charCodeAt(Ne+ze),je=ze++,$e=ze,V=0;V<j;V++)We=Ee===h[V]?je:je+1,je=y[V],$e=y[V]=je>$e?We>$e?$e+1:We:We>je?je+1:We;return $e};var g=a;g.default=a;var pe={Aacute:"\xC1",aacute:"\xE1",Abreve:"\u0102",abreve:"\u0103",ac:"\u223E",acd:"\u223F",acE:"\u223E\u0333",Acirc:"\xC2",acirc:"\xE2",acute:"\xB4",Acy:"\u0410",acy:"\u0430",AElig:"\xC6",aelig:"\xE6",af:"\u2061",Afr:"\u{1D504}",afr:"\u{1D51E}",Agrave:"\xC0",agrave:"\xE0",alefsym:"\u2135",aleph:"\u2135",Alpha:"\u0391",alpha:"\u03B1",Amacr:"\u0100",amacr:"\u0101",amalg:"\u2A3F",AMP:"&",amp:"&",And:"\u2A53",and:"\u2227",andand:"\u2A55",andd:"\u2A5C",andslope:"\u2A58",andv:"\u2A5A",ang:"\u2220",ange:"\u29A4",angle:"\u2220",angmsd:"\u2221",angmsdaa:"\u29A8",angmsdab:"\u29A9",angmsdac:"\u29AA",angmsdad:"\u29AB",angmsdae:"\u29AC",angmsdaf:"\u29AD",angmsdag:"\u29AE",angmsdah:"\u29AF",angrt:"\u221F",angrtvb:"\u22BE",angrtvbd:"\u299D",angsph:"\u2222",angst:"\xC5",angzarr:"\u237C",Aogon:"\u0104",aogon:"\u0105",Aopf:"\u{1D538}",aopf:"\u{1D552}",ap:"\u2248",apacir:"\u2A6F",apE:"\u2A70",ape:"\u224A",apid:"\u224B",apos:"'",ApplyFunction:"\u2061",approx:"\u2248",approxeq:"\u224A",Aring:"\xC5",aring:"\xE5",Ascr:"\u{1D49C}",ascr:"\u{1D4B6}",Assign:"\u2254",ast:"*",asymp:"\u2248",asympeq:"\u224D",Atilde:"\xC3",atilde:"\xE3",Auml:"\xC4",auml:"\xE4",awconint:"\u2233",awint:"\u2A11",backcong:"\u224C",backepsilon:"\u03F6",backprime:"\u2035",backsim:"\u223D",backsimeq:"\u22CD",Backslash:"\u2216",Barv:"\u2AE7",barvee:"\u22BD",Barwed:"\u2306",barwed:"\u2305",barwedge:"\u2305",bbrk:"\u23B5",bbrktbrk:"\u23B6",bcong:"\u224C",Bcy:"\u0411",bcy:"\u0431",bdquo:"\u201E",becaus:"\u2235",Because:"\u2235",because:"\u2235",bemptyv:"\u29B0",bepsi:"\u03F6",bernou:"\u212C",Bernoullis:"\u212C",Beta:"\u0392",beta:"\u03B2",beth:"\u2136",between:"\u226C",Bfr:"\u{1D505}",bfr:"\u{1D51F}",bigcap:"\u22C2",bigcirc:"\u25EF",bigcup:"\u22C3",bigodot:"\u2A00",bigoplus:"\u2A01",bigotimes:"\u2A02",bigsqcup:"\u2A06",bigstar:"\u2605",bigtriangledown:"\u25BD",bigtriangleup:"\u25B3",biguplus:"\u2A04",bigvee:"\u22C1",bigwedge:"\u22C0",bkarow:"\u290D",blacklozenge:"\u29EB",blacksquare:"\u25AA",blacktriangle:"\u25B4",blacktriangledown:"\u25BE",blacktriangleleft:"\u25C2",blacktriangleright:"\u25B8",blank:"\u2423",blk12:"\u2592",blk14:"\u2591",blk34:"\u2593",block:"\u2588",bne:"=\u20E5",bnequiv:"\u2261\u20E5",bNot:"\u2AED",bnot:"\u2310",Bopf:"\u{1D539}",bopf:"\u{1D553}",bot:"\u22A5",bottom:"\u22A5",bowtie:"\u22C8",boxbox:"\u29C9",boxDL:"\u2557",boxDl:"\u2556",boxdL:"\u2555",boxdl:"\u2510",boxDR:"\u2554",boxDr:"\u2553",boxdR:"\u2552",boxdr:"\u250C",boxH:"\u2550",boxh:"\u2500",boxHD:"\u2566",boxHd:"\u2564",boxhD:"\u2565",boxhd:"\u252C",boxHU:"\u2569",boxHu:"\u2567",boxhU:"\u2568",boxhu:"\u2534",boxminus:"\u229F",boxplus:"\u229E",boxtimes:"\u22A0",boxUL:"\u255D",boxUl:"\u255C",boxuL:"\u255B",boxul:"\u2518",boxUR:"\u255A",boxUr:"\u2559",boxuR:"\u2558",boxur:"\u2514",boxV:"\u2551",boxv:"\u2502",boxVH:"\u256C",boxVh:"\u256B",boxvH:"\u256A",boxvh:"\u253C",boxVL:"\u2563",boxVl:"\u2562",boxvL:"\u2561",boxvl:"\u2524",boxVR:"\u2560",boxVr:"\u255F",boxvR:"\u255E",boxvr:"\u251C",bprime:"\u2035",Breve:"\u02D8",breve:"\u02D8",brvbar:"\xA6",Bscr:"\u212C",bscr:"\u{1D4B7}",bsemi:"\u204F",bsim:"\u223D",bsime:"\u22CD",bsol:"\\",bsolb:"\u29C5",bsolhsub:"\u27C8",bull:"\u2022",bullet:"\u2022",bump:"\u224E",bumpE:"\u2AAE",bumpe:"\u224F",Bumpeq:"\u224E",bumpeq:"\u224F",Cacute:"\u0106",cacute:"\u0107",Cap:"\u22D2",cap:"\u2229",capand:"\u2A44",capbrcup:"\u2A49",capcap:"\u2A4B",capcup:"\u2A47",capdot:"\u2A40",CapitalDifferentialD:"\u2145",caps:"\u2229\uFE00",caret:"\u2041",caron:"\u02C7",Cayleys:"\u212D",ccaps:"\u2A4D",Ccaron:"\u010C",ccaron:"\u010D",Ccedil:"\xC7",ccedil:"\xE7",Ccirc:"\u0108",ccirc:"\u0109",Cconint:"\u2230",ccups:"\u2A4C",ccupssm:"\u2A50",Cdot:"\u010A",cdot:"\u010B",cedil:"\xB8",Cedilla:"\xB8",cemptyv:"\u29B2",cent:"\xA2",CenterDot:"\xB7",centerdot:"\xB7",Cfr:"\u212D",cfr:"\u{1D520}",CHcy:"\u0427",chcy:"\u0447",check:"\u2713",checkmark:"\u2713",Chi:"\u03A7",chi:"\u03C7",cir:"\u25CB",circ:"\u02C6",circeq:"\u2257",circlearrowleft:"\u21BA",circlearrowright:"\u21BB",circledast:"\u229B",circledcirc:"\u229A",circleddash:"\u229D",CircleDot:"\u2299",circledR:"\xAE",circledS:"\u24C8",CircleMinus:"\u2296",CirclePlus:"\u2295",CircleTimes:"\u2297",cirE:"\u29C3",cire:"\u2257",cirfnint:"\u2A10",cirmid:"\u2AEF",cirscir:"\u29C2",ClockwiseContourIntegral:"\u2232",CloseCurlyDoubleQuote:"\u201D",CloseCurlyQuote:"\u2019",clubs:"\u2663",clubsuit:"\u2663",Colon:"\u2237",colon:":",Colone:"\u2A74",colone:"\u2254",coloneq:"\u2254",comma:",",commat:"@",comp:"\u2201",compfn:"\u2218",complement:"\u2201",complexes:"\u2102",cong:"\u2245",congdot:"\u2A6D",Congruent:"\u2261",Conint:"\u222F",conint:"\u222E",ContourIntegral:"\u222E",Copf:"\u2102",copf:"\u{1D554}",coprod:"\u2210",Coproduct:"\u2210",COPY:"\xA9",copy:"\xA9",copysr:"\u2117",CounterClockwiseContourIntegral:"\u2233",crarr:"\u21B5",Cross:"\u2A2F",cross:"\u2717",Cscr:"\u{1D49E}",cscr:"\u{1D4B8}",csub:"\u2ACF",csube:"\u2AD1",csup:"\u2AD0",csupe:"\u2AD2",ctdot:"\u22EF",cudarrl:"\u2938",cudarrr:"\u2935",cuepr:"\u22DE",cuesc:"\u22DF",cularr:"\u21B6",cularrp:"\u293D",Cup:"\u22D3",cup:"\u222A",cupbrcap:"\u2A48",CupCap:"\u224D",cupcap:"\u2A46",cupcup:"\u2A4A",cupdot:"\u228D",cupor:"\u2A45",cups:"\u222A\uFE00",curarr:"\u21B7",curarrm:"\u293C",curlyeqprec:"\u22DE",curlyeqsucc:"\u22DF",curlyvee:"\u22CE",curlywedge:"\u22CF",curren:"\xA4",curvearrowleft:"\u21B6",curvearrowright:"\u21B7",cuvee:"\u22CE",cuwed:"\u22CF",cwconint:"\u2232",cwint:"\u2231",cylcty:"\u232D",Dagger:"\u2021",dagger:"\u2020",daleth:"\u2138",Darr:"\u21A1",dArr:"\u21D3",darr:"\u2193",dash:"\u2010",Dashv:"\u2AE4",dashv:"\u22A3",dbkarow:"\u290F",dblac:"\u02DD",Dcaron:"\u010E",dcaron:"\u010F",Dcy:"\u0414",dcy:"\u0434",DD:"\u2145",dd:"\u2146",ddagger:"\u2021",ddarr:"\u21CA",DDotrahd:"\u2911",ddotseq:"\u2A77",deg:"\xB0",Del:"\u2207",Delta:"\u0394",delta:"\u03B4",demptyv:"\u29B1",dfisht:"\u297F",Dfr:"\u{1D507}",dfr:"\u{1D521}",dHar:"\u2965",dharl:"\u21C3",dharr:"\u21C2",DiacriticalAcute:"\xB4",DiacriticalDot:"\u02D9",DiacriticalDoubleAcute:"\u02DD",DiacriticalGrave:"`",DiacriticalTilde:"\u02DC",diam:"\u22C4",Diamond:"\u22C4",diamond:"\u22C4",diamondsuit:"\u2666",diams:"\u2666",die:"\xA8",DifferentialD:"\u2146",digamma:"\u03DD",disin:"\u22F2",div:"\xF7",divide:"\xF7",divideontimes:"\u22C7",divonx:"\u22C7",DJcy:"\u0402",djcy:"\u0452",dlcorn:"\u231E",dlcrop:"\u230D",dollar:"$",Dopf:"\u{1D53B}",dopf:"\u{1D555}",Dot:"\xA8",dot:"\u02D9",DotDot:"\u20DC",doteq:"\u2250",doteqdot:"\u2251",DotEqual:"\u2250",dotminus:"\u2238",dotplus:"\u2214",dotsquare:"\u22A1",doublebarwedge:"\u2306",DoubleContourIntegral:"\u222F",DoubleDot:"\xA8",DoubleDownArrow:"\u21D3",DoubleLeftArrow:"\u21D0",DoubleLeftRightArrow:"\u21D4",DoubleLeftTee:"\u2AE4",DoubleLongLeftArrow:"\u27F8",DoubleLongLeftRightArrow:"\u27FA",DoubleLongRightArrow:"\u27F9",DoubleRightArrow:"\u21D2",DoubleRightTee:"\u22A8",DoubleUpArrow:"\u21D1",DoubleUpDownArrow:"\u21D5",DoubleVerticalBar:"\u2225",DownArrow:"\u2193",Downarrow:"\u21D3",downarrow:"\u2193",DownArrowBar:"\u2913",DownArrowUpArrow:"\u21F5",DownBreve:"\u0311",downdownarrows:"\u21CA",downharpoonleft:"\u21C3",downharpoonright:"\u21C2",DownLeftRightVector:"\u2950",DownLeftTeeVector:"\u295E",DownLeftVector:"\u21BD",DownLeftVectorBar:"\u2956",DownRightTeeVector:"\u295F",DownRightVector:"\u21C1",DownRightVectorBar:"\u2957",DownTee:"\u22A4",DownTeeArrow:"\u21A7",drbkarow:"\u2910",drcorn:"\u231F",drcrop:"\u230C",Dscr:"\u{1D49F}",dscr:"\u{1D4B9}",DScy:"\u0405",dscy:"\u0455",dsol:"\u29F6",Dstrok:"\u0110",dstrok:"\u0111",dtdot:"\u22F1",dtri:"\u25BF",dtrif:"\u25BE",duarr:"\u21F5",duhar:"\u296F",dwangle:"\u29A6",DZcy:"\u040F",dzcy:"\u045F",dzigrarr:"\u27FF",Eacute:"\xC9",eacute:"\xE9",easter:"\u2A6E",Ecaron:"\u011A",ecaron:"\u011B",ecir:"\u2256",Ecirc:"\xCA",ecirc:"\xEA",ecolon:"\u2255",Ecy:"\u042D",ecy:"\u044D",eDDot:"\u2A77",Edot:"\u0116",eDot:"\u2251",edot:"\u0117",ee:"\u2147",efDot:"\u2252",Efr:"\u{1D508}",efr:"\u{1D522}",eg:"\u2A9A",Egrave:"\xC8",egrave:"\xE8",egs:"\u2A96",egsdot:"\u2A98",el:"\u2A99",Element:"\u2208",elinters:"\u23E7",ell:"\u2113",els:"\u2A95",elsdot:"\u2A97",Emacr:"\u0112",emacr:"\u0113",empty:"\u2205",emptyset:"\u2205",EmptySmallSquare:"\u25FB",emptyv:"\u2205",EmptyVerySmallSquare:"\u25AB",emsp:"\u2003",emsp13:"\u2004",emsp14:"\u2005",ENG:"\u014A",eng:"\u014B",ensp:"\u2002",Eogon:"\u0118",eogon:"\u0119",Eopf:"\u{1D53C}",eopf:"\u{1D556}",epar:"\u22D5",eparsl:"\u29E3",eplus:"\u2A71",epsi:"\u03B5",Epsilon:"\u0395",epsilon:"\u03B5",epsiv:"\u03F5",eqcirc:"\u2256",eqcolon:"\u2255",eqsim:"\u2242",eqslantgtr:"\u2A96",eqslantless:"\u2A95",Equal:"\u2A75",equals:"=",EqualTilde:"\u2242",equest:"\u225F",Equilibrium:"\u21CC",equiv:"\u2261",equivDD:"\u2A78",eqvparsl:"\u29E5",erarr:"\u2971",erDot:"\u2253",Escr:"\u2130",escr:"\u212F",esdot:"\u2250",Esim:"\u2A73",esim:"\u2242",Eta:"\u0397",eta:"\u03B7",ETH:"\xD0",eth:"\xF0",Euml:"\xCB",euml:"\xEB",euro:"\u20AC",excl:"!",exist:"\u2203",Exists:"\u2203",expectation:"\u2130",ExponentialE:"\u2147",exponentiale:"\u2147",fallingdotseq:"\u2252",Fcy:"\u0424",fcy:"\u0444",female:"\u2640",ffilig:"\uFB03",fflig:"\uFB00",ffllig:"\uFB04",Ffr:"\u{1D509}",ffr:"\u{1D523}",filig:"\uFB01",FilledSmallSquare:"\u25FC",FilledVerySmallSquare:"\u25AA",fjlig:"fj",flat:"\u266D",fllig:"\uFB02",fltns:"\u25B1",fnof:"\u0192",Fopf:"\u{1D53D}",fopf:"\u{1D557}",ForAll:"\u2200",forall:"\u2200",fork:"\u22D4",forkv:"\u2AD9",Fouriertrf:"\u2131",fpartint:"\u2A0D",frac12:"\xBD",frac13:"\u2153",frac14:"\xBC",frac15:"\u2155",frac16:"\u2159",frac18:"\u215B",frac23:"\u2154",frac25:"\u2156",frac34:"\xBE",frac35:"\u2157",frac38:"\u215C",frac45:"\u2158",frac56:"\u215A",frac58:"\u215D",frac78:"\u215E",frasl:"\u2044",frown:"\u2322",Fscr:"\u2131",fscr:"\u{1D4BB}",gacute:"\u01F5",Gamma:"\u0393",gamma:"\u03B3",Gammad:"\u03DC",gammad:"\u03DD",gap:"\u2A86",Gbreve:"\u011E",gbreve:"\u011F",Gcedil:"\u0122",Gcirc:"\u011C",gcirc:"\u011D",Gcy:"\u0413",gcy:"\u0433",Gdot:"\u0120",gdot:"\u0121",gE:"\u2267",ge:"\u2265",gEl:"\u2A8C",gel:"\u22DB",geq:"\u2265",geqq:"\u2267",geqslant:"\u2A7E",ges:"\u2A7E",gescc:"\u2AA9",gesdot:"\u2A80",gesdoto:"\u2A82",gesdotol:"\u2A84",gesl:"\u22DB\uFE00",gesles:"\u2A94",Gfr:"\u{1D50A}",gfr:"\u{1D524}",Gg:"\u22D9",gg:"\u226B",ggg:"\u22D9",gimel:"\u2137",GJcy:"\u0403",gjcy:"\u0453",gl:"\u2277",gla:"\u2AA5",glE:"\u2A92",glj:"\u2AA4",gnap:"\u2A8A",gnapprox:"\u2A8A",gnE:"\u2269",gne:"\u2A88",gneq:"\u2A88",gneqq:"\u2269",gnsim:"\u22E7",Gopf:"\u{1D53E}",gopf:"\u{1D558}",grave:"`",GreaterEqual:"\u2265",GreaterEqualLess:"\u22DB",GreaterFullEqual:"\u2267",GreaterGreater:"\u2AA2",GreaterLess:"\u2277",GreaterSlantEqual:"\u2A7E",GreaterTilde:"\u2273",Gscr:"\u{1D4A2}",gscr:"\u210A",gsim:"\u2273",gsime:"\u2A8E",gsiml:"\u2A90",GT:">",Gt:"\u226B",gt:">",gtcc:"\u2AA7",gtcir:"\u2A7A",gtdot:"\u22D7",gtlPar:"\u2995",gtquest:"\u2A7C",gtrapprox:"\u2A86",gtrarr:"\u2978",gtrdot:"\u22D7",gtreqless:"\u22DB",gtreqqless:"\u2A8C",gtrless:"\u2277",gtrsim:"\u2273",gvertneqq:"\u2269\uFE00",gvnE:"\u2269\uFE00",Hacek:"\u02C7",hairsp:"\u200A",half:"\xBD",hamilt:"\u210B",HARDcy:"\u042A",hardcy:"\u044A",hArr:"\u21D4",harr:"\u2194",harrcir:"\u2948",harrw:"\u21AD",Hat:"^",hbar:"\u210F",Hcirc:"\u0124",hcirc:"\u0125",hearts:"\u2665",heartsuit:"\u2665",hellip:"\u2026",hercon:"\u22B9",Hfr:"\u210C",hfr:"\u{1D525}",HilbertSpace:"\u210B",hksearow:"\u2925",hkswarow:"\u2926",hoarr:"\u21FF",homtht:"\u223B",hookleftarrow:"\u21A9",hookrightarrow:"\u21AA",Hopf:"\u210D",hopf:"\u{1D559}",horbar:"\u2015",HorizontalLine:"\u2500",Hscr:"\u210B",hscr:"\u{1D4BD}",hslash:"\u210F",Hstrok:"\u0126",hstrok:"\u0127",HumpDownHump:"\u224E",HumpEqual:"\u224F",hybull:"\u2043",hyphen:"\u2010",Iacute:"\xCD",iacute:"\xED",ic:"\u2063",Icirc:"\xCE",icirc:"\xEE",Icy:"\u0418",icy:"\u0438",Idot:"\u0130",IEcy:"\u0415",iecy:"\u0435",iexcl:"\xA1",iff:"\u21D4",Ifr:"\u2111",ifr:"\u{1D526}",Igrave:"\xCC",igrave:"\xEC",ii:"\u2148",iiiint:"\u2A0C",iiint:"\u222D",iinfin:"\u29DC",iiota:"\u2129",IJlig:"\u0132",ijlig:"\u0133",Im:"\u2111",Imacr:"\u012A",imacr:"\u012B",image:"\u2111",ImaginaryI:"\u2148",imagline:"\u2110",imagpart:"\u2111",imath:"\u0131",imof:"\u22B7",imped:"\u01B5",Implies:"\u21D2",in:"\u2208",incare:"\u2105",infin:"\u221E",infintie:"\u29DD",inodot:"\u0131",Int:"\u222C",int:"\u222B",intcal:"\u22BA",integers:"\u2124",Integral:"\u222B",intercal:"\u22BA",Intersection:"\u22C2",intlarhk:"\u2A17",intprod:"\u2A3C",InvisibleComma:"\u2063",InvisibleTimes:"\u2062",IOcy:"\u0401",iocy:"\u0451",Iogon:"\u012E",iogon:"\u012F",Iopf:"\u{1D540}",iopf:"\u{1D55A}",Iota:"\u0399",iota:"\u03B9",iprod:"\u2A3C",iquest:"\xBF",Iscr:"\u2110",iscr:"\u{1D4BE}",isin:"\u2208",isindot:"\u22F5",isinE:"\u22F9",isins:"\u22F4",isinsv:"\u22F3",isinv:"\u2208",it:"\u2062",Itilde:"\u0128",itilde:"\u0129",Iukcy:"\u0406",iukcy:"\u0456",Iuml:"\xCF",iuml:"\xEF",Jcirc:"\u0134",jcirc:"\u0135",Jcy:"\u0419",jcy:"\u0439",Jfr:"\u{1D50D}",jfr:"\u{1D527}",jmath:"\u0237",Jopf:"\u{1D541}",jopf:"\u{1D55B}",Jscr:"\u{1D4A5}",jscr:"\u{1D4BF}",Jsercy:"\u0408",jsercy:"\u0458",Jukcy:"\u0404",jukcy:"\u0454",Kappa:"\u039A",kappa:"\u03BA",kappav:"\u03F0",Kcedil:"\u0136",kcedil:"\u0137",Kcy:"\u041A",kcy:"\u043A",Kfr:"\u{1D50E}",kfr:"\u{1D528}",kgreen:"\u0138",KHcy:"\u0425",khcy:"\u0445",KJcy:"\u040C",kjcy:"\u045C",Kopf:"\u{1D542}",kopf:"\u{1D55C}",Kscr:"\u{1D4A6}",kscr:"\u{1D4C0}",lAarr:"\u21DA",Lacute:"\u0139",lacute:"\u013A",laemptyv:"\u29B4",lagran:"\u2112",Lambda:"\u039B",lambda:"\u03BB",Lang:"\u27EA",lang:"\u27E8",langd:"\u2991",langle:"\u27E8",lap:"\u2A85",Laplacetrf:"\u2112",laquo:"\xAB",Larr:"\u219E",lArr:"\u21D0",larr:"\u2190",larrb:"\u21E4",larrbfs:"\u291F",larrfs:"\u291D",larrhk:"\u21A9",larrlp:"\u21AB",larrpl:"\u2939",larrsim:"\u2973",larrtl:"\u21A2",lat:"\u2AAB",lAtail:"\u291B",latail:"\u2919",late:"\u2AAD",lates:"\u2AAD\uFE00",lBarr:"\u290E",lbarr:"\u290C",lbbrk:"\u2772",lbrace:"{",lbrack:"[",lbrke:"\u298B",lbrksld:"\u298F",lbrkslu:"\u298D",Lcaron:"\u013D",lcaron:"\u013E",Lcedil:"\u013B",lcedil:"\u013C",lceil:"\u2308",lcub:"{",Lcy:"\u041B",lcy:"\u043B",ldca:"\u2936",ldquo:"\u201C",ldquor:"\u201E",ldrdhar:"\u2967",ldrushar:"\u294B",ldsh:"\u21B2",lE:"\u2266",le:"\u2264",LeftAngleBracket:"\u27E8",LeftArrow:"\u2190",Leftarrow:"\u21D0",leftarrow:"\u2190",LeftArrowBar:"\u21E4",LeftArrowRightArrow:"\u21C6",leftarrowtail:"\u21A2",LeftCeiling:"\u2308",LeftDoubleBracket:"\u27E6",LeftDownTeeVector:"\u2961",LeftDownVector:"\u21C3",LeftDownVectorBar:"\u2959",LeftFloor:"\u230A",leftharpoondown:"\u21BD",leftharpoonup:"\u21BC",leftleftarrows:"\u21C7",LeftRightArrow:"\u2194",Leftrightarrow:"\u21D4",leftrightarrow:"\u2194",leftrightarrows:"\u21C6",leftrightharpoons:"\u21CB",leftrightsquigarrow:"\u21AD",LeftRightVector:"\u294E",LeftTee:"\u22A3",LeftTeeArrow:"\u21A4",LeftTeeVector:"\u295A",leftthreetimes:"\u22CB",LeftTriangle:"\u22B2",LeftTriangleBar:"\u29CF",LeftTriangleEqual:"\u22B4",LeftUpDownVector:"\u2951",LeftUpTeeVector:"\u2960",LeftUpVector:"\u21BF",LeftUpVectorBar:"\u2958",LeftVector:"\u21BC",LeftVectorBar:"\u2952",lEg:"\u2A8B",leg:"\u22DA",leq:"\u2264",leqq:"\u2266",leqslant:"\u2A7D",les:"\u2A7D",lescc:"\u2AA8",lesdot:"\u2A7F",lesdoto:"\u2A81",lesdotor:"\u2A83",lesg:"\u22DA\uFE00",lesges:"\u2A93",lessapprox:"\u2A85",lessdot:"\u22D6",lesseqgtr:"\u22DA",lesseqqgtr:"\u2A8B",LessEqualGreater:"\u22DA",LessFullEqual:"\u2266",LessGreater:"\u2276",lessgtr:"\u2276",LessLess:"\u2AA1",lesssim:"\u2272",LessSlantEqual:"\u2A7D",LessTilde:"\u2272",lfisht:"\u297C",lfloor:"\u230A",Lfr:"\u{1D50F}",lfr:"\u{1D529}",lg:"\u2276",lgE:"\u2A91",lHar:"\u2962",lhard:"\u21BD",lharu:"\u21BC",lharul:"\u296A",lhblk:"\u2584",LJcy:"\u0409",ljcy:"\u0459",Ll:"\u22D8",ll:"\u226A",llarr:"\u21C7",llcorner:"\u231E",Lleftarrow:"\u21DA",llhard:"\u296B",lltri:"\u25FA",Lmidot:"\u013F",lmidot:"\u0140",lmoust:"\u23B0",lmoustache:"\u23B0",lnap:"\u2A89",lnapprox:"\u2A89",lnE:"\u2268",lne:"\u2A87",lneq:"\u2A87",lneqq:"\u2268",lnsim:"\u22E6",loang:"\u27EC",loarr:"\u21FD",lobrk:"\u27E6",LongLeftArrow:"\u27F5",Longleftarrow:"\u27F8",longleftarrow:"\u27F5",LongLeftRightArrow:"\u27F7",Longleftrightarrow:"\u27FA",longleftrightarrow:"\u27F7",longmapsto:"\u27FC",LongRightArrow:"\u27F6",Longrightarrow:"\u27F9",longrightarrow:"\u27F6",looparrowleft:"\u21AB",looparrowright:"\u21AC",lopar:"\u2985",Lopf:"\u{1D543}",lopf:"\u{1D55D}",loplus:"\u2A2D",lotimes:"\u2A34",lowast:"\u2217",lowbar:"_",LowerLeftArrow:"\u2199",LowerRightArrow:"\u2198",loz:"\u25CA",lozenge:"\u25CA",lozf:"\u29EB",lpar:"(",lparlt:"\u2993",lrarr:"\u21C6",lrcorner:"\u231F",lrhar:"\u21CB",lrhard:"\u296D",lrm:"\u200E",lrtri:"\u22BF",lsaquo:"\u2039",Lscr:"\u2112",lscr:"\u{1D4C1}",Lsh:"\u21B0",lsh:"\u21B0",lsim:"\u2272",lsime:"\u2A8D",lsimg:"\u2A8F",lsqb:"[",lsquo:"\u2018",lsquor:"\u201A",Lstrok:"\u0141",lstrok:"\u0142",LT:"<",Lt:"\u226A",lt:"<",ltcc:"\u2AA6",ltcir:"\u2A79",ltdot:"\u22D6",lthree:"\u22CB",ltimes:"\u22C9",ltlarr:"\u2976",ltquest:"\u2A7B",ltri:"\u25C3",ltrie:"\u22B4",ltrif:"\u25C2",ltrPar:"\u2996",lurdshar:"\u294A",luruhar:"\u2966",lvertneqq:"\u2268\uFE00",lvnE:"\u2268\uFE00",macr:"\xAF",male:"\u2642",malt:"\u2720",maltese:"\u2720",Map:"\u2905",map:"\u21A6",mapsto:"\u21A6",mapstodown:"\u21A7",mapstoleft:"\u21A4",mapstoup:"\u21A5",marker:"\u25AE",mcomma:"\u2A29",Mcy:"\u041C",mcy:"\u043C",mdash:"\u2014",mDDot:"\u223A",measuredangle:"\u2221",MediumSpace:"\u205F",Mellintrf:"\u2133",Mfr:"\u{1D510}",mfr:"\u{1D52A}",mho:"\u2127",micro:"\xB5",mid:"\u2223",midast:"*",midcir:"\u2AF0",middot:"\xB7",minus:"\u2212",minusb:"\u229F",minusd:"\u2238",minusdu:"\u2A2A",MinusPlus:"\u2213",mlcp:"\u2ADB",mldr:"\u2026",mnplus:"\u2213",models:"\u22A7",Mopf:"\u{1D544}",mopf:"\u{1D55E}",mp:"\u2213",Mscr:"\u2133",mscr:"\u{1D4C2}",mstpos:"\u223E",Mu:"\u039C",mu:"\u03BC",multimap:"\u22B8",mumap:"\u22B8",nabla:"\u2207",Nacute:"\u0143",nacute:"\u0144",nang:"\u2220\u20D2",nap:"\u2249",napE:"\u2A70\u0338",napid:"\u224B\u0338",napos:"\u0149",napprox:"\u2249",natur:"\u266E",natural:"\u266E",naturals:"\u2115",nbsp:"\xA0",nbump:"\u224E\u0338",nbumpe:"\u224F\u0338",ncap:"\u2A43",Ncaron:"\u0147",ncaron:"\u0148",Ncedil:"\u0145",ncedil:"\u0146",ncong:"\u2247",ncongdot:"\u2A6D\u0338",ncup:"\u2A42",Ncy:"\u041D",ncy:"\u043D",ndash:"\u2013",ne:"\u2260",nearhk:"\u2924",neArr:"\u21D7",nearr:"\u2197",nearrow:"\u2197",nedot:"\u2250\u0338",NegativeMediumSpace:"\u200B",NegativeThickSpace:"\u200B",NegativeThinSpace:"\u200B",NegativeVeryThinSpace:"\u200B",nequiv:"\u2262",nesear:"\u2928",nesim:"\u2242\u0338",NestedGreaterGreater:"\u226B",NestedLessLess:"\u226A",NewLine:`
`,nexist:"\u2204",nexists:"\u2204",Nfr:"\u{1D511}",nfr:"\u{1D52B}",ngE:"\u2267\u0338",nge:"\u2271",ngeq:"\u2271",ngeqq:"\u2267\u0338",ngeqslant:"\u2A7E\u0338",nges:"\u2A7E\u0338",nGg:"\u22D9\u0338",ngsim:"\u2275",nGt:"\u226B\u20D2",ngt:"\u226F",ngtr:"\u226F",nGtv:"\u226B\u0338",nhArr:"\u21CE",nharr:"\u21AE",nhpar:"\u2AF2",ni:"\u220B",nis:"\u22FC",nisd:"\u22FA",niv:"\u220B",NJcy:"\u040A",njcy:"\u045A",nlArr:"\u21CD",nlarr:"\u219A",nldr:"\u2025",nlE:"\u2266\u0338",nle:"\u2270",nLeftarrow:"\u21CD",nleftarrow:"\u219A",nLeftrightarrow:"\u21CE",nleftrightarrow:"\u21AE",nleq:"\u2270",nleqq:"\u2266\u0338",nleqslant:"\u2A7D\u0338",nles:"\u2A7D\u0338",nless:"\u226E",nLl:"\u22D8\u0338",nlsim:"\u2274",nLt:"\u226A\u20D2",nlt:"\u226E",nltri:"\u22EA",nltrie:"\u22EC",nLtv:"\u226A\u0338",nmid:"\u2224",NoBreak:"\u2060",NonBreakingSpace:"\xA0",Nopf:"\u2115",nopf:"\u{1D55F}",Not:"\u2AEC",not:"\xAC",NotCongruent:"\u2262",NotCupCap:"\u226D",NotDoubleVerticalBar:"\u2226",NotElement:"\u2209",NotEqual:"\u2260",NotEqualTilde:"\u2242\u0338",NotExists:"\u2204",NotGreater:"\u226F",NotGreaterEqual:"\u2271",NotGreaterFullEqual:"\u2267\u0338",NotGreaterGreater:"\u226B\u0338",NotGreaterLess:"\u2279",NotGreaterSlantEqual:"\u2A7E\u0338",NotGreaterTilde:"\u2275",NotHumpDownHump:"\u224E\u0338",NotHumpEqual:"\u224F\u0338",notin:"\u2209",notindot:"\u22F5\u0338",notinE:"\u22F9\u0338",notinva:"\u2209",notinvb:"\u22F7",notinvc:"\u22F6",NotLeftTriangle:"\u22EA",NotLeftTriangleBar:"\u29CF\u0338",NotLeftTriangleEqual:"\u22EC",NotLess:"\u226E",NotLessEqual:"\u2270",NotLessGreater:"\u2278",NotLessLess:"\u226A\u0338",NotLessSlantEqual:"\u2A7D\u0338",NotLessTilde:"\u2274",NotNestedGreaterGreater:"\u2AA2\u0338",NotNestedLessLess:"\u2AA1\u0338",notni:"\u220C",notniva:"\u220C",notnivb:"\u22FE",notnivc:"\u22FD",NotPrecedes:"\u2280",NotPrecedesEqual:"\u2AAF\u0338",NotPrecedesSlantEqual:"\u22E0",NotReverseElement:"\u220C",NotRightTriangle:"\u22EB",NotRightTriangleBar:"\u29D0\u0338",NotRightTriangleEqual:"\u22ED",NotSquareSubset:"\u228F\u0338",NotSquareSubsetEqual:"\u22E2",NotSquareSuperset:"\u2290\u0338",NotSquareSupersetEqual:"\u22E3",NotSubset:"\u2282\u20D2",NotSubsetEqual:"\u2288",NotSucceeds:"\u2281",NotSucceedsEqual:"\u2AB0\u0338",NotSucceedsSlantEqual:"\u22E1",NotSucceedsTilde:"\u227F\u0338",NotSuperset:"\u2283\u20D2",NotSupersetEqual:"\u2289",NotTilde:"\u2241",NotTildeEqual:"\u2244",NotTildeFullEqual:"\u2247",NotTildeTilde:"\u2249",NotVerticalBar:"\u2224",npar:"\u2226",nparallel:"\u2226",nparsl:"\u2AFD\u20E5",npart:"\u2202\u0338",npolint:"\u2A14",npr:"\u2280",nprcue:"\u22E0",npre:"\u2AAF\u0338",nprec:"\u2280",npreceq:"\u2AAF\u0338",nrArr:"\u21CF",nrarr:"\u219B",nrarrc:"\u2933\u0338",nrarrw:"\u219D\u0338",nRightarrow:"\u21CF",nrightarrow:"\u219B",nrtri:"\u22EB",nrtrie:"\u22ED",nsc:"\u2281",nsccue:"\u22E1",nsce:"\u2AB0\u0338",Nscr:"\u{1D4A9}",nscr:"\u{1D4C3}",nshortmid:"\u2224",nshortparallel:"\u2226",nsim:"\u2241",nsime:"\u2244",nsimeq:"\u2244",nsmid:"\u2224",nspar:"\u2226",nsqsube:"\u22E2",nsqsupe:"\u22E3",nsub:"\u2284",nsubE:"\u2AC5\u0338",nsube:"\u2288",nsubset:"\u2282\u20D2",nsubseteq:"\u2288",nsubseteqq:"\u2AC5\u0338",nsucc:"\u2281",nsucceq:"\u2AB0\u0338",nsup:"\u2285",nsupE:"\u2AC6\u0338",nsupe:"\u2289",nsupset:"\u2283\u20D2",nsupseteq:"\u2289",nsupseteqq:"\u2AC6\u0338",ntgl:"\u2279",Ntilde:"\xD1",ntilde:"\xF1",ntlg:"\u2278",ntriangleleft:"\u22EA",ntrianglelefteq:"\u22EC",ntriangleright:"\u22EB",ntrianglerighteq:"\u22ED",Nu:"\u039D",nu:"\u03BD",num:"#",numero:"\u2116",numsp:"\u2007",nvap:"\u224D\u20D2",nVDash:"\u22AF",nVdash:"\u22AE",nvDash:"\u22AD",nvdash:"\u22AC",nvge:"\u2265\u20D2",nvgt:">\u20D2",nvHarr:"\u2904",nvinfin:"\u29DE",nvlArr:"\u2902",nvle:"\u2264\u20D2",nvlt:"<\u20D2",nvltrie:"\u22B4\u20D2",nvrArr:"\u2903",nvrtrie:"\u22B5\u20D2",nvsim:"\u223C\u20D2",nwarhk:"\u2923",nwArr:"\u21D6",nwarr:"\u2196",nwarrow:"\u2196",nwnear:"\u2927",Oacute:"\xD3",oacute:"\xF3",oast:"\u229B",ocir:"\u229A",Ocirc:"\xD4",ocirc:"\xF4",Ocy:"\u041E",ocy:"\u043E",odash:"\u229D",Odblac:"\u0150",odblac:"\u0151",odiv:"\u2A38",odot:"\u2299",odsold:"\u29BC",OElig:"\u0152",oelig:"\u0153",ofcir:"\u29BF",Ofr:"\u{1D512}",ofr:"\u{1D52C}",ogon:"\u02DB",Ograve:"\xD2",ograve:"\xF2",ogt:"\u29C1",ohbar:"\u29B5",ohm:"\u03A9",oint:"\u222E",olarr:"\u21BA",olcir:"\u29BE",olcross:"\u29BB",oline:"\u203E",olt:"\u29C0",Omacr:"\u014C",omacr:"\u014D",Omega:"\u03A9",omega:"\u03C9",Omicron:"\u039F",omicron:"\u03BF",omid:"\u29B6",ominus:"\u2296",Oopf:"\u{1D546}",oopf:"\u{1D560}",opar:"\u29B7",OpenCurlyDoubleQuote:"\u201C",OpenCurlyQuote:"\u2018",operp:"\u29B9",oplus:"\u2295",Or:"\u2A54",or:"\u2228",orarr:"\u21BB",ord:"\u2A5D",order:"\u2134",orderof:"\u2134",ordf:"\xAA",ordm:"\xBA",origof:"\u22B6",oror:"\u2A56",orslope:"\u2A57",orv:"\u2A5B",oS:"\u24C8",Oscr:"\u{1D4AA}",oscr:"\u2134",Oslash:"\xD8",oslash:"\xF8",osol:"\u2298",Otilde:"\xD5",otilde:"\xF5",Otimes:"\u2A37",otimes:"\u2297",otimesas:"\u2A36",Ouml:"\xD6",ouml:"\xF6",ovbar:"\u233D",OverBar:"\u203E",OverBrace:"\u23DE",OverBracket:"\u23B4",OverParenthesis:"\u23DC",par:"\u2225",para:"\xB6",parallel:"\u2225",parsim:"\u2AF3",parsl:"\u2AFD",part:"\u2202",PartialD:"\u2202",Pcy:"\u041F",pcy:"\u043F",percnt:"%",period:".",permil:"\u2030",perp:"\u22A5",pertenk:"\u2031",Pfr:"\u{1D513}",pfr:"\u{1D52D}",Phi:"\u03A6",phi:"\u03C6",phiv:"\u03D5",phmmat:"\u2133",phone:"\u260E",Pi:"\u03A0",pi:"\u03C0",pitchfork:"\u22D4",piv:"\u03D6",planck:"\u210F",planckh:"\u210E",plankv:"\u210F",plus:"+",plusacir:"\u2A23",plusb:"\u229E",pluscir:"\u2A22",plusdo:"\u2214",plusdu:"\u2A25",pluse:"\u2A72",PlusMinus:"\xB1",plusmn:"\xB1",plussim:"\u2A26",plustwo:"\u2A27",pm:"\xB1",Poincareplane:"\u210C",pointint:"\u2A15",Popf:"\u2119",popf:"\u{1D561}",pound:"\xA3",Pr:"\u2ABB",pr:"\u227A",prap:"\u2AB7",prcue:"\u227C",prE:"\u2AB3",pre:"\u2AAF",prec:"\u227A",precapprox:"\u2AB7",preccurlyeq:"\u227C",Precedes:"\u227A",PrecedesEqual:"\u2AAF",PrecedesSlantEqual:"\u227C",PrecedesTilde:"\u227E",preceq:"\u2AAF",precnapprox:"\u2AB9",precneqq:"\u2AB5",precnsim:"\u22E8",precsim:"\u227E",Prime:"\u2033",prime:"\u2032",primes:"\u2119",prnap:"\u2AB9",prnE:"\u2AB5",prnsim:"\u22E8",prod:"\u220F",Product:"\u220F",profalar:"\u232E",profline:"\u2312",profsurf:"\u2313",prop:"\u221D",Proportion:"\u2237",Proportional:"\u221D",propto:"\u221D",prsim:"\u227E",prurel:"\u22B0",Pscr:"\u{1D4AB}",pscr:"\u{1D4C5}",Psi:"\u03A8",psi:"\u03C8",puncsp:"\u2008",Qfr:"\u{1D514}",qfr:"\u{1D52E}",qint:"\u2A0C",Qopf:"\u211A",qopf:"\u{1D562}",qprime:"\u2057",Qscr:"\u{1D4AC}",qscr:"\u{1D4C6}",quaternions:"\u210D",quatint:"\u2A16",quest:"?",questeq:"\u225F",QUOT:'"',quot:'"',rAarr:"\u21DB",race:"\u223D\u0331",Racute:"\u0154",racute:"\u0155",radic:"\u221A",raemptyv:"\u29B3",Rang:"\u27EB",rang:"\u27E9",rangd:"\u2992",range:"\u29A5",rangle:"\u27E9",raquo:"\xBB",Rarr:"\u21A0",rArr:"\u21D2",rarr:"\u2192",rarrap:"\u2975",rarrb:"\u21E5",rarrbfs:"\u2920",rarrc:"\u2933",rarrfs:"\u291E",rarrhk:"\u21AA",rarrlp:"\u21AC",rarrpl:"\u2945",rarrsim:"\u2974",Rarrtl:"\u2916",rarrtl:"\u21A3",rarrw:"\u219D",rAtail:"\u291C",ratail:"\u291A",ratio:"\u2236",rationals:"\u211A",RBarr:"\u2910",rBarr:"\u290F",rbarr:"\u290D",rbbrk:"\u2773",rbrace:"}",rbrack:"]",rbrke:"\u298C",rbrksld:"\u298E",rbrkslu:"\u2990",Rcaron:"\u0158",rcaron:"\u0159",Rcedil:"\u0156",rcedil:"\u0157",rceil:"\u2309",rcub:"}",Rcy:"\u0420",rcy:"\u0440",rdca:"\u2937",rdldhar:"\u2969",rdquo:"\u201D",rdquor:"\u201D",rdsh:"\u21B3",Re:"\u211C",real:"\u211C",realine:"\u211B",realpart:"\u211C",reals:"\u211D",rect:"\u25AD",REG:"\xAE",reg:"\xAE",ReverseElement:"\u220B",ReverseEquilibrium:"\u21CB",ReverseUpEquilibrium:"\u296F",rfisht:"\u297D",rfloor:"\u230B",Rfr:"\u211C",rfr:"\u{1D52F}",rHar:"\u2964",rhard:"\u21C1",rharu:"\u21C0",rharul:"\u296C",Rho:"\u03A1",rho:"\u03C1",rhov:"\u03F1",RightAngleBracket:"\u27E9",RightArrow:"\u2192",Rightarrow:"\u21D2",rightarrow:"\u2192",RightArrowBar:"\u21E5",RightArrowLeftArrow:"\u21C4",rightarrowtail:"\u21A3",RightCeiling:"\u2309",RightDoubleBracket:"\u27E7",RightDownTeeVector:"\u295D",RightDownVector:"\u21C2",RightDownVectorBar:"\u2955",RightFloor:"\u230B",rightharpoondown:"\u21C1",rightharpoonup:"\u21C0",rightleftarrows:"\u21C4",rightleftharpoons:"\u21CC",rightrightarrows:"\u21C9",rightsquigarrow:"\u219D",RightTee:"\u22A2",RightTeeArrow:"\u21A6",RightTeeVector:"\u295B",rightthreetimes:"\u22CC",RightTriangle:"\u22B3",RightTriangleBar:"\u29D0",RightTriangleEqual:"\u22B5",RightUpDownVector:"\u294F",RightUpTeeVector:"\u295C",RightUpVector:"\u21BE",RightUpVectorBar:"\u2954",RightVector:"\u21C0",RightVectorBar:"\u2953",ring:"\u02DA",risingdotseq:"\u2253",rlarr:"\u21C4",rlhar:"\u21CC",rlm:"\u200F",rmoust:"\u23B1",rmoustache:"\u23B1",rnmid:"\u2AEE",roang:"\u27ED",roarr:"\u21FE",robrk:"\u27E7",ropar:"\u2986",Ropf:"\u211D",ropf:"\u{1D563}",roplus:"\u2A2E",rotimes:"\u2A35",RoundImplies:"\u2970",rpar:")",rpargt:"\u2994",rppolint:"\u2A12",rrarr:"\u21C9",Rrightarrow:"\u21DB",rsaquo:"\u203A",Rscr:"\u211B",rscr:"\u{1D4C7}",Rsh:"\u21B1",rsh:"\u21B1",rsqb:"]",rsquo:"\u2019",rsquor:"\u2019",rthree:"\u22CC",rtimes:"\u22CA",rtri:"\u25B9",rtrie:"\u22B5",rtrif:"\u25B8",rtriltri:"\u29CE",RuleDelayed:"\u29F4",ruluhar:"\u2968",rx:"\u211E",Sacute:"\u015A",sacute:"\u015B",sbquo:"\u201A",Sc:"\u2ABC",sc:"\u227B",scap:"\u2AB8",Scaron:"\u0160",scaron:"\u0161",sccue:"\u227D",scE:"\u2AB4",sce:"\u2AB0",Scedil:"\u015E",scedil:"\u015F",Scirc:"\u015C",scirc:"\u015D",scnap:"\u2ABA",scnE:"\u2AB6",scnsim:"\u22E9",scpolint:"\u2A13",scsim:"\u227F",Scy:"\u0421",scy:"\u0441",sdot:"\u22C5",sdotb:"\u22A1",sdote:"\u2A66",searhk:"\u2925",seArr:"\u21D8",searr:"\u2198",searrow:"\u2198",sect:"\xA7",semi:";",seswar:"\u2929",setminus:"\u2216",setmn:"\u2216",sext:"\u2736",Sfr:"\u{1D516}",sfr:"\u{1D530}",sfrown:"\u2322",sharp:"\u266F",SHCHcy:"\u0429",shchcy:"\u0449",SHcy:"\u0428",shcy:"\u0448",ShortDownArrow:"\u2193",ShortLeftArrow:"\u2190",shortmid:"\u2223",shortparallel:"\u2225",ShortRightArrow:"\u2192",ShortUpArrow:"\u2191",shy:"\xAD",Sigma:"\u03A3",sigma:"\u03C3",sigmaf:"\u03C2",sigmav:"\u03C2",sim:"\u223C",simdot:"\u2A6A",sime:"\u2243",simeq:"\u2243",simg:"\u2A9E",simgE:"\u2AA0",siml:"\u2A9D",simlE:"\u2A9F",simne:"\u2246",simplus:"\u2A24",simrarr:"\u2972",slarr:"\u2190",SmallCircle:"\u2218",smallsetminus:"\u2216",smashp:"\u2A33",smeparsl:"\u29E4",smid:"\u2223",smile:"\u2323",smt:"\u2AAA",smte:"\u2AAC",smtes:"\u2AAC\uFE00",SOFTcy:"\u042C",softcy:"\u044C",sol:"/",solb:"\u29C4",solbar:"\u233F",Sopf:"\u{1D54A}",sopf:"\u{1D564}",spades:"\u2660",spadesuit:"\u2660",spar:"\u2225",sqcap:"\u2293",sqcaps:"\u2293\uFE00",sqcup:"\u2294",sqcups:"\u2294\uFE00",Sqrt:"\u221A",sqsub:"\u228F",sqsube:"\u2291",sqsubset:"\u228F",sqsubseteq:"\u2291",sqsup:"\u2290",sqsupe:"\u2292",sqsupset:"\u2290",sqsupseteq:"\u2292",squ:"\u25A1",Square:"\u25A1",square:"\u25A1",SquareIntersection:"\u2293",SquareSubset:"\u228F",SquareSubsetEqual:"\u2291",SquareSuperset:"\u2290",SquareSupersetEqual:"\u2292",SquareUnion:"\u2294",squarf:"\u25AA",squf:"\u25AA",srarr:"\u2192",Sscr:"\u{1D4AE}",sscr:"\u{1D4C8}",ssetmn:"\u2216",ssmile:"\u2323",sstarf:"\u22C6",Star:"\u22C6",star:"\u2606",starf:"\u2605",straightepsilon:"\u03F5",straightphi:"\u03D5",strns:"\xAF",Sub:"\u22D0",sub:"\u2282",subdot:"\u2ABD",subE:"\u2AC5",sube:"\u2286",subedot:"\u2AC3",submult:"\u2AC1",subnE:"\u2ACB",subne:"\u228A",subplus:"\u2ABF",subrarr:"\u2979",Subset:"\u22D0",subset:"\u2282",subseteq:"\u2286",subseteqq:"\u2AC5",SubsetEqual:"\u2286",subsetneq:"\u228A",subsetneqq:"\u2ACB",subsim:"\u2AC7",subsub:"\u2AD5",subsup:"\u2AD3",succ:"\u227B",succapprox:"\u2AB8",succcurlyeq:"\u227D",Succeeds:"\u227B",SucceedsEqual:"\u2AB0",SucceedsSlantEqual:"\u227D",SucceedsTilde:"\u227F",succeq:"\u2AB0",succnapprox:"\u2ABA",succneqq:"\u2AB6",succnsim:"\u22E9",succsim:"\u227F",SuchThat:"\u220B",Sum:"\u2211",sum:"\u2211",sung:"\u266A",Sup:"\u22D1",sup:"\u2283",sup1:"\xB9",sup2:"\xB2",sup3:"\xB3",supdot:"\u2ABE",supdsub:"\u2AD8",supE:"\u2AC6",supe:"\u2287",supedot:"\u2AC4",Superset:"\u2283",SupersetEqual:"\u2287",suphsol:"\u27C9",suphsub:"\u2AD7",suplarr:"\u297B",supmult:"\u2AC2",supnE:"\u2ACC",supne:"\u228B",supplus:"\u2AC0",Supset:"\u22D1",supset:"\u2283",supseteq:"\u2287",supseteqq:"\u2AC6",supsetneq:"\u228B",supsetneqq:"\u2ACC",supsim:"\u2AC8",supsub:"\u2AD4",supsup:"\u2AD6",swarhk:"\u2926",swArr:"\u21D9",swarr:"\u2199",swarrow:"\u2199",swnwar:"\u292A",szlig:"\xDF",Tab:"	",target:"\u2316",Tau:"\u03A4",tau:"\u03C4",tbrk:"\u23B4",Tcaron:"\u0164",tcaron:"\u0165",Tcedil:"\u0162",tcedil:"\u0163",Tcy:"\u0422",tcy:"\u0442",tdot:"\u20DB",telrec:"\u2315",Tfr:"\u{1D517}",tfr:"\u{1D531}",there4:"\u2234",Therefore:"\u2234",therefore:"\u2234",Theta:"\u0398",theta:"\u03B8",thetasym:"\u03D1",thetav:"\u03D1",thickapprox:"\u2248",thicksim:"\u223C",ThickSpace:"\u205F\u200A",thinsp:"\u2009",ThinSpace:"\u2009",thkap:"\u2248",thksim:"\u223C",THORN:"\xDE",thorn:"\xFE",Tilde:"\u223C",tilde:"\u02DC",TildeEqual:"\u2243",TildeFullEqual:"\u2245",TildeTilde:"\u2248",times:"\xD7",timesb:"\u22A0",timesbar:"\u2A31",timesd:"\u2A30",tint:"\u222D",toea:"\u2928",top:"\u22A4",topbot:"\u2336",topcir:"\u2AF1",Topf:"\u{1D54B}",topf:"\u{1D565}",topfork:"\u2ADA",tosa:"\u2929",tprime:"\u2034",TRADE:"\u2122",trade:"\u2122",triangle:"\u25B5",triangledown:"\u25BF",triangleleft:"\u25C3",trianglelefteq:"\u22B4",triangleq:"\u225C",triangleright:"\u25B9",trianglerighteq:"\u22B5",tridot:"\u25EC",trie:"\u225C",triminus:"\u2A3A",TripleDot:"\u20DB",triplus:"\u2A39",trisb:"\u29CD",tritime:"\u2A3B",trpezium:"\u23E2",Tscr:"\u{1D4AF}",tscr:"\u{1D4C9}",TScy:"\u0426",tscy:"\u0446",TSHcy:"\u040B",tshcy:"\u045B",Tstrok:"\u0166",tstrok:"\u0167",twixt:"\u226C",twoheadleftarrow:"\u219E",twoheadrightarrow:"\u21A0",Uacute:"\xDA",uacute:"\xFA",Uarr:"\u219F",uArr:"\u21D1",uarr:"\u2191",Uarrocir:"\u2949",Ubrcy:"\u040E",ubrcy:"\u045E",Ubreve:"\u016C",ubreve:"\u016D",Ucirc:"\xDB",ucirc:"\xFB",Ucy:"\u0423",ucy:"\u0443",udarr:"\u21C5",Udblac:"\u0170",udblac:"\u0171",udhar:"\u296E",ufisht:"\u297E",Ufr:"\u{1D518}",ufr:"\u{1D532}",Ugrave:"\xD9",ugrave:"\xF9",uHar:"\u2963",uharl:"\u21BF",uharr:"\u21BE",uhblk:"\u2580",ulcorn:"\u231C",ulcorner:"\u231C",ulcrop:"\u230F",ultri:"\u25F8",Umacr:"\u016A",umacr:"\u016B",uml:"\xA8",UnderBar:"_",UnderBrace:"\u23DF",UnderBracket:"\u23B5",UnderParenthesis:"\u23DD",Union:"\u22C3",UnionPlus:"\u228E",Uogon:"\u0172",uogon:"\u0173",Uopf:"\u{1D54C}",uopf:"\u{1D566}",UpArrow:"\u2191",Uparrow:"\u21D1",uparrow:"\u2191",UpArrowBar:"\u2912",UpArrowDownArrow:"\u21C5",UpDownArrow:"\u2195",Updownarrow:"\u21D5",updownarrow:"\u2195",UpEquilibrium:"\u296E",upharpoonleft:"\u21BF",upharpoonright:"\u21BE",uplus:"\u228E",UpperLeftArrow:"\u2196",UpperRightArrow:"\u2197",Upsi:"\u03D2",upsi:"\u03C5",upsih:"\u03D2",Upsilon:"\u03A5",upsilon:"\u03C5",UpTee:"\u22A5",UpTeeArrow:"\u21A5",upuparrows:"\u21C8",urcorn:"\u231D",urcorner:"\u231D",urcrop:"\u230E",Uring:"\u016E",uring:"\u016F",urtri:"\u25F9",Uscr:"\u{1D4B0}",uscr:"\u{1D4CA}",utdot:"\u22F0",Utilde:"\u0168",utilde:"\u0169",utri:"\u25B5",utrif:"\u25B4",uuarr:"\u21C8",Uuml:"\xDC",uuml:"\xFC",uwangle:"\u29A7",vangrt:"\u299C",varepsilon:"\u03F5",varkappa:"\u03F0",varnothing:"\u2205",varphi:"\u03D5",varpi:"\u03D6",varpropto:"\u221D",vArr:"\u21D5",varr:"\u2195",varrho:"\u03F1",varsigma:"\u03C2",varsubsetneq:"\u228A\uFE00",varsubsetneqq:"\u2ACB\uFE00",varsupsetneq:"\u228B\uFE00",varsupsetneqq:"\u2ACC\uFE00",vartheta:"\u03D1",vartriangleleft:"\u22B2",vartriangleright:"\u22B3",Vbar:"\u2AEB",vBar:"\u2AE8",vBarv:"\u2AE9",Vcy:"\u0412",vcy:"\u0432",VDash:"\u22AB",Vdash:"\u22A9",vDash:"\u22A8",vdash:"\u22A2",Vdashl:"\u2AE6",Vee:"\u22C1",vee:"\u2228",veebar:"\u22BB",veeeq:"\u225A",vellip:"\u22EE",Verbar:"\u2016",verbar:"|",Vert:"\u2016",vert:"|",VerticalBar:"\u2223",VerticalLine:"|",VerticalSeparator:"\u2758",VerticalTilde:"\u2240",VeryThinSpace:"\u200A",Vfr:"\u{1D519}",vfr:"\u{1D533}",vltri:"\u22B2",vnsub:"\u2282\u20D2",vnsup:"\u2283\u20D2",Vopf:"\u{1D54D}",vopf:"\u{1D567}",vprop:"\u221D",vrtri:"\u22B3",Vscr:"\u{1D4B1}",vscr:"\u{1D4CB}",vsubnE:"\u2ACB\uFE00",vsubne:"\u228A\uFE00",vsupnE:"\u2ACC\uFE00",vsupne:"\u228B\uFE00",Vvdash:"\u22AA",vzigzag:"\u299A",Wcirc:"\u0174",wcirc:"\u0175",wedbar:"\u2A5F",Wedge:"\u22C0",wedge:"\u2227",wedgeq:"\u2259",weierp:"\u2118",Wfr:"\u{1D51A}",wfr:"\u{1D534}",Wopf:"\u{1D54E}",wopf:"\u{1D568}",wp:"\u2118",wr:"\u2240",wreath:"\u2240",Wscr:"\u{1D4B2}",wscr:"\u{1D4CC}",xcap:"\u22C2",xcirc:"\u25EF",xcup:"\u22C3",xdtri:"\u25BD",Xfr:"\u{1D51B}",xfr:"\u{1D535}",xhArr:"\u27FA",xharr:"\u27F7",Xi:"\u039E",xi:"\u03BE",xlArr:"\u27F8",xlarr:"\u27F5",xmap:"\u27FC",xnis:"\u22FB",xodot:"\u2A00",Xopf:"\u{1D54F}",xopf:"\u{1D569}",xoplus:"\u2A01",xotime:"\u2A02",xrArr:"\u27F9",xrarr:"\u27F6",Xscr:"\u{1D4B3}",xscr:"\u{1D4CD}",xsqcup:"\u2A06",xuplus:"\u2A04",xutri:"\u25B3",xvee:"\u22C1",xwedge:"\u22C0",Yacute:"\xDD",yacute:"\xFD",YAcy:"\u042F",yacy:"\u044F",Ycirc:"\u0176",ycirc:"\u0177",Ycy:"\u042B",ycy:"\u044B",yen:"\xA5",Yfr:"\u{1D51C}",yfr:"\u{1D536}",YIcy:"\u0407",yicy:"\u0457",Yopf:"\u{1D550}",yopf:"\u{1D56A}",Yscr:"\u{1D4B4}",yscr:"\u{1D4CE}",YUcy:"\u042E",yucy:"\u044E",Yuml:"\u0178",yuml:"\xFF",Zacute:"\u0179",zacute:"\u017A",Zcaron:"\u017D",zcaron:"\u017E",Zcy:"\u0417",zcy:"\u0437",Zdot:"\u017B",zdot:"\u017C",zeetrf:"\u2128",ZeroWidthSpace:"\u200B",Zeta:"\u0396",zeta:"\u03B6",Zfr:"\u2128",zfr:"\u{1D537}",ZHcy:"\u0416",zhcy:"\u0436",zigrarr:"\u21DD",Zopf:"\u2124",zopf:"\u{1D56B}",Zscr:"\u{1D4B5}",zscr:"\u{1D4CF}",zwj:"\u200D",zwnj:"\u200C"},U={ound:"pound",pond:"pound",poubd:"pound",poud:"pound",poumd:"pound",poun:"pound",pund:"pound",zvbj:"zwnj",zvhj:"zwnj",zvjb:"zwnj",zvjh:"zwnj",zvjm:"zwnj",zvjn:"zwnj",zvmj:"zwnj",zvng:"zwnj",zvnh:"zwnj",zvnj:"zwnj",zvnk:"zwnj",zvnm:"zwnj",zwbj:"zwnj",zwhj:"zwnj",zwjb:"zwnj",zwjh:"zwnj",zwjm:"zwnj",zwjn:"zwnj",zwmj:"zwnj",zwng:"zwnj",zwnh:"zwnj",zwnk:"zwnj",zwnm:"zwnj",bsp:"nbsp",nsp:"nbsp",nbp:"nbsp",nbs:"nbsp"},l={A:{a:["Aacute"],b:["Abreve"],c:["Acirc","Acy"],E:["AElig"],f:["Afr"],g:["Agrave"],l:["Alpha"],m:["Amacr"],M:["AMP"],n:["And"],o:["Aogon","Aopf"],p:["ApplyFunction"],r:["Aring"],s:["Ascr","Assign"],t:["Atilde"],u:["Auml"]},a:{a:["aacute"],b:["abreve"],c:["ac","acd","acE","acirc","acute","acy"],e:["aelig"],f:["af","afr"],g:["agrave"],l:["alefsym","aleph","alpha"],m:["amacr","amalg","amp"],n:["and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr"],o:["aogon","aopf"],p:["ap","apacir","apE","ape","apid","apos","approx","approxeq"],r:["aring"],s:["ascr","ast","asymp","asympeq"],t:["atilde"],u:["auml"],w:["awconint","awint"]},b:{a:["backcong","backepsilon","backprime","backsim","backsimeq","barvee","barwed","barwedge"],b:["bbrk","bbrktbrk"],c:["bcong","bcy"],d:["bdquo"],e:["becaus","because","bemptyv","bepsi","bernou","beta","beth","between"],f:["bfr"],i:["bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge"],k:["bkarow"],l:["blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block"],n:["bne","bnequiv","bnot"],N:["bNot"],o:["bopf","bot","bottom","bowtie","boxbox","boxDL","boxDl","boxdL","boxdl","boxDR","boxDr","boxdR","boxdr","boxH","boxh","boxHD","boxHd","boxhD","boxhd","boxHU","boxHu","boxhU","boxhu","boxminus","boxplus","boxtimes","boxUL","boxUl","boxuL","boxul","boxUR","boxUr","boxuR","boxur","boxV","boxv","boxVH","boxVh","boxvH","boxvh","boxVL","boxVl","boxvL","boxvl","boxVR","boxVr","boxvR","boxvr"],p:["bprime"],r:["breve","brvbar"],s:["bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub"],u:["bull","bullet","bump","bumpE","bumpe","bumpeq"]},B:{a:["Backslash","Barv","Barwed"],c:["Bcy"],e:["Because","Bernoullis","Beta"],f:["Bfr"],o:["Bopf"],r:["Breve"],s:["Bscr"],u:["Bumpeq"]},C:{a:["Cacute","Cap","CapitalDifferentialD","Cayleys"],c:["Ccaron","Ccedil","Ccirc","Cconint"],d:["Cdot"],e:["Cedilla","CenterDot"],f:["Cfr"],H:["CHcy"],h:["Chi"],i:["CircleDot","CircleMinus","CirclePlus","CircleTimes"],l:["ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote"],o:["Colon","Colone","Congruent","Conint","ContourIntegral","Copf","Coproduct","CounterClockwiseContourIntegral"],O:["COPY"],r:["Cross"],s:["Cscr"],u:["Cup","CupCap"]},c:{a:["cacute","cap","capand","capbrcup","capcap","capcup","capdot","caps","caret","caron"],c:["ccaps","ccaron","ccedil","ccirc","ccups","ccupssm"],d:["cdot"],e:["cedil","cemptyv","cent","centerdot"],f:["cfr"],h:["chcy","check","checkmark","chi"],i:["cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","circledR","circledS","cirE","cire","cirfnint","cirmid","cirscir"],l:["clubs","clubsuit"],o:["colon","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","conint","copf","coprod","copy","copysr"],r:["crarr","cross"],s:["cscr","csub","csube","csup","csupe"],t:["ctdot"],u:["cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","cupbrcap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed"],w:["cwconint","cwint"],y:["cylcty"]},D:{a:["Dagger","Darr","Dashv"],c:["Dcaron","Dcy"],D:["DD","DDotrahd"],e:["Del","Delta"],f:["Dfr"],i:["DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","Diamond","DifferentialD"],J:["DJcy"],o:["Dopf","Dot","DotDot","DotEqual","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","Downarrow","DownArrowBar","DownArrowUpArrow","DownBreve","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow"],s:["Dscr","Dstrok"],S:["DScy"],Z:["DZcy"]},d:{a:["dagger","daleth","darr","dash","dashv"],A:["dArr"],b:["dbkarow","dblac"],c:["dcaron","dcy"],d:["dd","ddagger","ddarr","ddotseq"],e:["deg","delta","demptyv"],f:["dfisht","dfr"],H:["dHar"],h:["dharl","dharr"],i:["diam","diamond","diamondsuit","diams","die","digamma","disin","div","divide","divideontimes","divonx"],j:["djcy"],l:["dlcorn","dlcrop"],o:["dollar","dopf","dot","doteq","doteqdot","dotminus","dotplus","dotsquare","doublebarwedge","downarrow","downdownarrows","downharpoonleft","downharpoonright"],r:["drbkarow","drcorn","drcrop"],s:["dscr","dscy","dsol","dstrok"],t:["dtdot","dtri","dtrif"],u:["duarr","duhar"],w:["dwangle"],z:["dzcy","dzigrarr"]},E:{a:["Eacute"],c:["Ecaron","Ecirc","Ecy"],d:["Edot"],f:["Efr"],g:["Egrave"],l:["Element"],m:["Emacr","EmptySmallSquare","EmptyVerySmallSquare"],N:["ENG"],o:["Eogon","Eopf"],p:["Epsilon"],q:["Equal","EqualTilde","Equilibrium"],s:["Escr","Esim"],t:["Eta"],T:["ETH"],u:["Euml"],x:["Exists","ExponentialE"]},e:{a:["eacute","easter"],c:["ecaron","ecir","ecirc","ecolon","ecy"],D:["eDDot","eDot"],d:["edot"],e:["ee"],f:["efDot","efr"],g:["eg","egrave","egs","egsdot"],l:["el","elinters","ell","els","elsdot"],m:["emacr","empty","emptyset","emptyv","emsp","emsp13","emsp14"],n:["eng","ensp"],o:["eogon","eopf"],p:["epar","eparsl","eplus","epsi","epsilon","epsiv"],q:["eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","equals","equest","equiv","equivDD","eqvparsl"],r:["erarr","erDot"],s:["escr","esdot","esim"],t:["eta","eth"],u:["euml","euro"],x:["excl","exist","expectation","exponentiale"]},f:{a:["fallingdotseq"],c:["fcy"],e:["female"],f:["ffilig","fflig","ffllig","ffr"],i:["filig"],j:["fjlig"],l:["flat","fllig","fltns"],n:["fnof"],o:["fopf","forall","fork","forkv"],p:["fpartint"],r:["frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown"],s:["fscr"]},F:{c:["Fcy"],f:["Ffr"],i:["FilledSmallSquare","FilledVerySmallSquare"],o:["Fopf","ForAll","Fouriertrf"],s:["Fscr"]},g:{a:["gacute","gamma","gammad","gap"],b:["gbreve"],c:["gcirc","gcy"],d:["gdot"],E:["gE","gEl"],e:["ge","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles"],f:["gfr"],g:["gg","ggg"],i:["gimel"],j:["gjcy"],l:["gl","gla","glE","glj"],n:["gnap","gnapprox","gnE","gne","gneq","gneqq","gnsim"],o:["gopf"],r:["grave"],s:["gscr","gsim","gsime","gsiml"],t:["gt","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim"],v:["gvertneqq","gvnE"]},G:{a:["Gamma","Gammad"],b:["Gbreve"],c:["Gcedil","Gcirc","Gcy"],d:["Gdot"],f:["Gfr"],g:["Gg"],J:["GJcy"],o:["Gopf"],r:["GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde"],s:["Gscr"],T:["GT"],t:["Gt"]},H:{a:["Hacek","Hat"],A:["HARDcy"],c:["Hcirc"],f:["Hfr"],i:["HilbertSpace"],o:["Hopf","HorizontalLine"],s:["Hscr","Hstrok"],u:["HumpDownHump","HumpEqual"]},h:{a:["hairsp","half","hamilt","hardcy","harr","harrcir","harrw"],A:["hArr"],b:["hbar"],c:["hcirc"],e:["hearts","heartsuit","hellip","hercon"],f:["hfr"],k:["hksearow","hkswarow"],o:["hoarr","homtht","hookleftarrow","hookrightarrow","hopf","horbar"],s:["hscr","hslash","hstrok"],y:["hybull","hyphen"]},I:{a:["Iacute"],c:["Icirc","Icy"],d:["Idot"],E:["IEcy"],f:["Ifr"],g:["Igrave"],J:["IJlig"],m:["Im","Imacr","ImaginaryI","Implies"],n:["Int","Integral","Intersection","InvisibleComma","InvisibleTimes"],O:["IOcy"],o:["Iogon","Iopf","Iota"],s:["Iscr"],t:["Itilde"],u:["Iukcy","Iuml"]},i:{a:["iacute"],c:["ic","icirc","icy"],e:["iecy","iexcl"],f:["iff","ifr"],g:["igrave"],i:["ii","iiiint","iiint","iinfin","iiota"],j:["ijlig"],m:["imacr","image","imagline","imagpart","imath","imof","imped"],n:["in","incare","infin","infintie","inodot","int","intcal","integers","intercal","intlarhk","intprod"],o:["iocy","iogon","iopf","iota"],p:["iprod"],q:["iquest"],s:["iscr","isin","isindot","isinE","isins","isinsv","isinv"],t:["it","itilde"],u:["iukcy","iuml"]},J:{c:["Jcirc","Jcy"],f:["Jfr"],o:["Jopf"],s:["Jscr","Jsercy"],u:["Jukcy"]},j:{c:["jcirc","jcy"],f:["jfr"],m:["jmath"],o:["jopf"],s:["jscr","jsercy"],u:["jukcy"]},K:{a:["Kappa"],c:["Kcedil","Kcy"],f:["Kfr"],H:["KHcy"],J:["KJcy"],o:["Kopf"],s:["Kscr"]},k:{a:["kappa","kappav"],c:["kcedil","kcy"],f:["kfr"],g:["kgreen"],h:["khcy"],j:["kjcy"],o:["kopf"],s:["kscr"]},l:{A:["lAarr","lArr","lAtail"],a:["lacute","laemptyv","lagran","lambda","lang","langd","langle","lap","laquo","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","late","lates"],B:["lBarr"],b:["lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu"],c:["lcaron","lcedil","lceil","lcub","lcy"],d:["ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh"],E:["lE","lEg"],e:["le","leftarrow","leftarrowtail","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leftthreetimes","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","lessgtr","lesssim"],f:["lfisht","lfloor","lfr"],g:["lg","lgE"],H:["lHar"],h:["lhard","lharu","lharul","lhblk"],j:["ljcy"],l:["ll","llarr","llcorner","llhard","lltri"],m:["lmidot","lmoust","lmoustache"],n:["lnap","lnapprox","lnE","lne","lneq","lneqq","lnsim"],o:["loang","loarr","lobrk","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lopar","lopf","loplus","lotimes","lowast","lowbar","loz","lozenge","lozf"],p:["lpar","lparlt"],r:["lrarr","lrcorner","lrhar","lrhard","lrm","lrtri"],s:["lsaquo","lscr","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","lstrok"],t:["lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrPar"],u:["lurdshar","luruhar"],v:["lvertneqq","lvnE"]},L:{a:["Lacute","Lambda","Lang","Laplacetrf","Larr"],c:["Lcaron","Lcedil","Lcy"],e:["LeftAngleBracket","LeftArrow","Leftarrow","LeftArrowBar","LeftArrowRightArrow","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","LeftRightArrow","Leftrightarrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","LessEqualGreater","LessFullEqual","LessGreater","LessLess","LessSlantEqual","LessTilde"],f:["Lfr"],J:["LJcy"],l:["Ll","Lleftarrow"],m:["Lmidot"],o:["LongLeftArrow","Longleftarrow","LongLeftRightArrow","Longleftrightarrow","LongRightArrow","Longrightarrow","Lopf","LowerLeftArrow","LowerRightArrow"],s:["Lscr","Lsh","Lstrok"],T:["LT"],t:["Lt"]},m:{a:["macr","male","malt","maltese","map","mapsto","mapstodown","mapstoleft","mapstoup","marker"],c:["mcomma","mcy"],d:["mdash"],D:["mDDot"],e:["measuredangle"],f:["mfr"],h:["mho"],i:["micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu"],l:["mlcp","mldr"],n:["mnplus"],o:["models","mopf"],p:["mp"],s:["mscr","mstpos"],u:["mu","multimap","mumap"]},M:{a:["Map"],c:["Mcy"],e:["MediumSpace","Mellintrf"],f:["Mfr"],i:["MinusPlus"],o:["Mopf"],s:["Mscr"],u:["Mu"]},n:{a:["nabla","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals"],b:["nbsp","nbump","nbumpe"],c:["ncap","ncaron","ncedil","ncong","ncongdot","ncup","ncy"],d:["ndash"],e:["ne","nearhk","neArr","nearr","nearrow","nedot","nequiv","nesear","nesim","nexist","nexists"],f:["nfr"],g:["ngE","nge","ngeq","ngeqq","ngeqslant","nges","ngsim","ngt","ngtr"],G:["nGg","nGt","nGtv"],h:["nhArr","nharr","nhpar"],i:["ni","nis","nisd","niv"],j:["njcy"],l:["nlArr","nlarr","nldr","nlE","nle","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nlsim","nlt","nltri","nltrie"],L:["nLeftarrow","nLeftrightarrow","nLl","nLt","nLtv"],m:["nmid"],o:["nopf","not","notin","notindot","notinE","notinva","notinvb","notinvc","notni","notniva","notnivb","notnivc"],p:["npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq"],r:["nrArr","nrarr","nrarrc","nrarrw","nrightarrow","nrtri","nrtrie"],R:["nRightarrow"],s:["nsc","nsccue","nsce","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq"],t:["ntgl","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq"],u:["nu","num","numero","numsp"],v:["nvap","nvDash","nvdash","nvge","nvgt","nvHarr","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim"],V:["nVDash","nVdash"],w:["nwarhk","nwArr","nwarr","nwarrow","nwnear"]},N:{a:["Nacute"],c:["Ncaron","Ncedil","Ncy"],e:["NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","NestedGreaterGreater","NestedLessLess","NewLine"],f:["Nfr"],J:["NJcy"],o:["NoBreak","NonBreakingSpace","Nopf","Not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar"],s:["Nscr"],t:["Ntilde"],u:["Nu"]},O:{a:["Oacute"],c:["Ocirc","Ocy"],d:["Odblac"],E:["OElig"],f:["Ofr"],g:["Ograve"],m:["Omacr","Omega","Omicron"],o:["Oopf"],p:["OpenCurlyDoubleQuote","OpenCurlyQuote"],r:["Or"],s:["Oscr","Oslash"],t:["Otilde","Otimes"],u:["Ouml"],v:["OverBar","OverBrace","OverBracket","OverParenthesis"]},o:{a:["oacute","oast"],c:["ocir","ocirc","ocy"],d:["odash","odblac","odiv","odot","odsold"],e:["oelig"],f:["ofcir","ofr"],g:["ogon","ograve","ogt"],h:["ohbar","ohm"],i:["oint"],l:["olarr","olcir","olcross","oline","olt"],m:["omacr","omega","omicron","omid","ominus"],o:["oopf"],p:["opar","operp","oplus"],r:["or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv"],S:["oS"],s:["oscr","oslash","osol"],t:["otilde","otimes","otimesas"],u:["ouml"],v:["ovbar"]},p:{a:["par","para","parallel","parsim","parsl","part"],c:["pcy"],e:["percnt","period","permil","perp","pertenk"],f:["pfr"],h:["phi","phiv","phmmat","phone"],i:["pi","pitchfork","piv"],l:["planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","plusmn","plussim","plustwo"],m:["pm"],o:["pointint","popf","pound"],r:["pr","prap","prcue","prE","pre","prec","precapprox","preccurlyeq","preceq","precnapprox","precneqq","precnsim","precsim","prime","primes","prnap","prnE","prnsim","prod","profalar","profline","profsurf","prop","propto","prsim","prurel"],s:["pscr","psi"],u:["puncsp"]},P:{a:["PartialD"],c:["Pcy"],f:["Pfr"],h:["Phi"],i:["Pi"],l:["PlusMinus"],o:["Poincareplane","Popf"],r:["Pr","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","Prime","Product","Proportion","Proportional"],s:["Pscr","Psi"]},Q:{f:["Qfr"],o:["Qopf"],s:["Qscr"],U:["QUOT"]},q:{f:["qfr"],i:["qint"],o:["qopf"],p:["qprime"],s:["qscr"],u:["quaternions","quatint","quest","questeq","quot"]},r:{A:["rAarr","rArr","rAtail"],a:["race","racute","radic","raemptyv","rang","rangd","range","rangle","raquo","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","rarrw","ratail","ratio","rationals"],B:["rBarr"],b:["rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu"],c:["rcaron","rcedil","rceil","rcub","rcy"],d:["rdca","rdldhar","rdquo","rdquor","rdsh"],e:["real","realine","realpart","reals","rect","reg"],f:["rfisht","rfloor","rfr"],H:["rHar"],h:["rhard","rharu","rharul","rho","rhov"],i:["rightarrow","rightarrowtail","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","rightthreetimes","ring","risingdotseq"],l:["rlarr","rlhar","rlm"],m:["rmoust","rmoustache"],n:["rnmid"],o:["roang","roarr","robrk","ropar","ropf","roplus","rotimes"],p:["rpar","rpargt","rppolint"],r:["rrarr"],s:["rsaquo","rscr","rsh","rsqb","rsquo","rsquor"],t:["rthree","rtimes","rtri","rtrie","rtrif","rtriltri"],u:["ruluhar"],x:["rx"]},R:{a:["Racute","Rang","Rarr","Rarrtl"],B:["RBarr"],c:["Rcaron","Rcedil","Rcy"],e:["Re","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium"],E:["REG"],f:["Rfr"],h:["Rho"],i:["RightAngleBracket","RightArrow","Rightarrow","RightArrowBar","RightArrowLeftArrow","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","RightTee","RightTeeArrow","RightTeeVector","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar"],o:["Ropf","RoundImplies"],r:["Rrightarrow"],s:["Rscr","Rsh"],u:["RuleDelayed"]},S:{a:["Sacute"],c:["Sc","Scaron","Scedil","Scirc","Scy"],f:["Sfr"],H:["SHCHcy","SHcy"],h:["ShortDownArrow","ShortLeftArrow","ShortRightArrow","ShortUpArrow"],i:["Sigma"],m:["SmallCircle"],O:["SOFTcy"],o:["Sopf"],q:["Sqrt","Square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion"],s:["Sscr"],t:["Star"],u:["Sub","Subset","SubsetEqual","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","SuchThat","Sum","Sup","Superset","SupersetEqual","Supset"]},s:{a:["sacute"],b:["sbquo"],c:["sc","scap","scaron","sccue","scE","sce","scedil","scirc","scnap","scnE","scnsim","scpolint","scsim","scy"],d:["sdot","sdotb","sdote"],e:["searhk","seArr","searr","searrow","sect","semi","seswar","setminus","setmn","sext"],f:["sfr","sfrown"],h:["sharp","shchcy","shcy","shortmid","shortparallel","shy"],i:["sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr"],l:["slarr"],m:["smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes"],o:["softcy","sol","solb","solbar","sopf"],p:["spades","spadesuit","spar"],q:["sqcap","sqcaps","sqcup","sqcups","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","squarf","squf"],r:["srarr"],s:["sscr","ssetmn","ssmile","sstarf"],t:["star","starf","straightepsilon","straightphi","strns"],u:["sub","subdot","subE","sube","subedot","submult","subnE","subne","subplus","subrarr","subset","subseteq","subseteqq","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","succeq","succnapprox","succneqq","succnsim","succsim","sum","sung","sup","sup1","sup2","sup3","supdot","supdsub","supE","supe","supedot","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup"],w:["swarhk","swArr","swarr","swarrow","swnwar"],z:["szlig"]},T:{a:["Tab","Tau"],c:["Tcaron","Tcedil","Tcy"],f:["Tfr"],h:["Therefore","Theta","ThickSpace","ThinSpace"],H:["THORN"],i:["Tilde","TildeEqual","TildeFullEqual","TildeTilde"],o:["Topf"],R:["TRADE"],r:["TripleDot"],s:["Tscr","Tstrok"],S:["TScy","TSHcy"]},t:{a:["target","tau"],b:["tbrk"],c:["tcaron","tcedil","tcy"],d:["tdot"],e:["telrec"],f:["tfr"],h:["there4","therefore","theta","thetasym","thetav","thickapprox","thicksim","thinsp","thkap","thksim","thorn"],i:["tilde","times","timesb","timesbar","timesd","tint"],o:["toea","top","topbot","topcir","topf","topfork","tosa"],p:["tprime"],r:["trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","triplus","trisb","tritime","trpezium"],s:["tscr","tscy","tshcy","tstrok"],w:["twixt","twoheadleftarrow","twoheadrightarrow"]},U:{a:["Uacute","Uarr","Uarrocir"],b:["Ubrcy","Ubreve"],c:["Ucirc","Ucy"],d:["Udblac"],f:["Ufr"],g:["Ugrave"],m:["Umacr"],n:["UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus"],o:["Uogon","Uopf"],p:["UpArrow","Uparrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","Updownarrow","UpEquilibrium","UpperLeftArrow","UpperRightArrow","Upsi","Upsilon","UpTee","UpTeeArrow"],r:["Uring"],s:["Uscr"],t:["Utilde"],u:["Uuml"]},u:{a:["uacute","uarr"],A:["uArr"],b:["ubrcy","ubreve"],c:["ucirc","ucy"],d:["udarr","udblac","udhar"],f:["ufisht","ufr"],g:["ugrave"],H:["uHar"],h:["uharl","uharr","uhblk"],l:["ulcorn","ulcorner","ulcrop","ultri"],m:["umacr","uml"],o:["uogon","uopf"],p:["uparrow","updownarrow","upharpoonleft","upharpoonright","uplus","upsi","upsih","upsilon","upuparrows"],r:["urcorn","urcorner","urcrop","uring","urtri"],s:["uscr"],t:["utdot","utilde","utri","utrif"],u:["uuarr","uuml"],w:["uwangle"]},v:{a:["vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright"],A:["vArr"],B:["vBar","vBarv"],c:["vcy"],D:["vDash"],d:["vdash"],e:["vee","veebar","veeeq","vellip","verbar","vert"],f:["vfr"],l:["vltri"],n:["vnsub","vnsup"],o:["vopf"],p:["vprop"],r:["vrtri"],s:["vscr","vsubnE","vsubne","vsupnE","vsupne"],z:["vzigzag"]},V:{b:["Vbar"],c:["Vcy"],D:["VDash"],d:["Vdash","Vdashl"],e:["Vee","Verbar","Vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace"],f:["Vfr"],o:["Vopf"],s:["Vscr"],v:["Vvdash"]},W:{c:["Wcirc"],e:["Wedge"],f:["Wfr"],o:["Wopf"],s:["Wscr"]},w:{c:["wcirc"],e:["wedbar","wedge","wedgeq","weierp"],f:["wfr"],o:["wopf"],p:["wp"],r:["wr","wreath"],s:["wscr"]},x:{c:["xcap","xcirc","xcup"],d:["xdtri"],f:["xfr"],h:["xhArr","xharr"],i:["xi"],l:["xlArr","xlarr"],m:["xmap"],n:["xnis"],o:["xodot","xopf","xoplus","xotime"],r:["xrArr","xrarr"],s:["xscr","xsqcup"],u:["xuplus","xutri"],v:["xvee"],w:["xwedge"]},X:{f:["Xfr"],i:["Xi"],o:["Xopf"],s:["Xscr"]},Y:{a:["Yacute"],A:["YAcy"],c:["Ycirc","Ycy"],f:["Yfr"],I:["YIcy"],o:["Yopf"],s:["Yscr"],U:["YUcy"],u:["Yuml"]},y:{a:["yacute","yacy"],c:["ycirc","ycy"],e:["yen"],f:["yfr"],i:["yicy"],o:["yopf"],s:["yscr"],u:["yucy","yuml"]},Z:{a:["Zacute"],c:["Zcaron","Zcy"],d:["Zdot"],e:["ZeroWidthSpace","Zeta"],f:["Zfr"],H:["ZHcy"],o:["Zopf"],s:["Zscr"]},z:{a:["zacute"],c:["zcaron","zcy"],d:["zdot"],e:["zeetrf","zeta"],f:["zfr"],h:["zhcy"],i:["zigrarr"],o:["zopf"],s:["zscr"],w:["zwj","zwnj"]}},r={1:{p:["sup1"]},2:{1:["blk12","frac12"],p:["sup2"]},3:{1:["emsp13","frac13"],2:["frac23"],p:["sup3"]},4:{1:["blk14","emsp14","frac14"],3:["blk34","frac34"],e:["there4"]},5:{1:["frac15"],2:["frac25"],3:["frac35"],4:["frac45"]},6:{1:["frac16"],5:["frac56"]},8:{1:["frac18"],3:["frac38"],5:["frac58"],7:["frac78"]},e:{t:["Aacute","aacute","acute","Cacute","cacute","CloseCurlyDoubleQuote","CloseCurlyQuote","DiacriticalAcute","DiacriticalDoubleAcute","Eacute","eacute","gacute","Iacute","iacute","Lacute","lacute","late","Nacute","nacute","Oacute","oacute","OpenCurlyDoubleQuote","OpenCurlyQuote","Racute","racute","Sacute","sacute","sdote","smte","Uacute","uacute","Yacute","yacute","Zacute","zacute"],v:["Abreve","abreve","Agrave","agrave","Breve","breve","DiacriticalGrave","DownBreve","Egrave","egrave","Gbreve","gbreve","grave","Igrave","igrave","Ograve","ograve","Ubreve","ubreve","Ugrave","ugrave"],p:["andslope","ape","bumpe","csupe","nbumpe","nsqsupe","nsupe","orslope","sqsupe","supe"],g:["ange","barwedge","bigwedge","blacklozenge","curlywedge","doublebarwedge","ge","image","lozenge","nge","nvge","range","Wedge","wedge","xwedge"],l:["angle","blacktriangle","dwangle","exponentiale","female","langle","le","LeftTriangle","male","measuredangle","nle","NotLeftTriangle","NotRightTriangle","nvle","rangle","RightTriangle","SmallCircle","smile","ssmile","triangle","uwangle"],a:["angmsdae"],d:["Atilde","atilde","DiacriticalTilde","divide","EqualTilde","GreaterTilde","Itilde","itilde","LessTilde","NotEqualTilde","NotGreaterTilde","NotLessTilde","NotSucceedsTilde","NotTilde","NotTildeTilde","Ntilde","ntilde","Otilde","otilde","PrecedesTilde","SucceedsTilde","Tilde","tilde","TildeTilde","trade","Utilde","utilde","VerticalTilde"],m:["backprime","bprime","bsime","gsime","lsime","nsime","Prime","prime","qprime","sime","tprime","tritime","xotime"],e:["barvee","bigvee","curlyvee","cuvee","DoubleLeftTee","DoubleRightTee","DownTee","ee","LeftTee","lthree","RightTee","rthree","UpTee","Vee","vee","xvee"],s:["Because","because","maltese","pluse"],r:["blacksquare","cire","dotsquare","EmptySmallSquare","EmptyVerySmallSquare","FilledSmallSquare","FilledVerySmallSquare","incare","npre","pre","Square","square","Therefore","therefore"],n:["bne","Colone","colone","gne","HorizontalLine","imagline","lne","ne","NewLine","oline","phone","Poincareplane","profline","realine","simne","subne","supne","VerticalLine","vsubne","vsupne"],i:["bowtie","die","infintie","ltrie","nltrie","nrtrie","nvltrie","nvrtrie","rtrie","trie"],b:["csube","nsqsube","nsube","sqsube","sube"],c:["HilbertSpace","lbrace","MediumSpace","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","NonBreakingSpace","nsce","OverBrace","race","rbrace","sce","ThickSpace","ThinSpace","UnderBrace","VeryThinSpace","ZeroWidthSpace"],k:["lbrke","rbrke"],h:["lmoustache","rmoustache"],u:["nprcue","nsccue","prcue","sccue"],R:["Re"]},c:{a:["ac","angmsdac","dblac","Odblac","odblac","Udblac","udblac"],r:["Acirc","acirc","bigcirc","Ccirc","ccirc","circ","circledcirc","Ecirc","ecirc","eqcirc","Gcirc","gcirc","Hcirc","hcirc","Icirc","icirc","Jcirc","jcirc","nrarrc","Ocirc","ocirc","rarrc","Scirc","scirc","Ucirc","ucirc","Wcirc","wcirc","xcirc","Ycirc","ycirc"],s:["cuesc","nsc","sc"],e:["curlyeqprec","nprec","prec","telrec"],c:["curlyeqsucc","gescc","gtcc","lescc","ltcc","nsucc","succ"],i:["ic","radic"],v:["notinvc","notnivc"],S:["Sc"]},d:{c:["acd"],n:["And","and","andand","capand","Diamond","diamond","pound"],d:["andd","dd"],s:["angmsd","minusd","nisd","timesd"],a:["angmsdad","Gammad","gammad"],b:["angrtvbd"],i:["apid","cirmid","mid","napid","nmid","nshortmid","nsmid","omid","rnmid","shortmid","smid"],e:["Barwed","barwed","cuwed","imped","RuleDelayed"],H:["boxHd"],h:["boxhd","DDotrahd"],o:["coprod","intprod","iprod","period","prod"],g:["langd","rangd"],l:["lbrksld","odsold","rbrksld"],r:["lhard","llhard","lrhard","ord","rhard"]},E:{c:["acE","scE"],p:["apE","bumpE","napE","nsupE","supE"],r:["cirE","prE"],l:["ExponentialE","glE","lE","nlE","simlE"],g:["gE","lgE","ngE","simgE"],n:["gnE","gvnE","isinE","lnE","lvnE","notinE","prnE","scnE","subnE","supnE","vsubnE","vsupnE"],b:["nsubE","subE"],D:["TRADE"]},y:{c:["Acy","acy","Bcy","bcy","CHcy","chcy","Dcy","dcy","DJcy","djcy","DScy","dscy","DZcy","dzcy","Ecy","ecy","Fcy","fcy","Gcy","gcy","GJcy","gjcy","HARDcy","hardcy","Icy","icy","IEcy","iecy","IOcy","iocy","Iukcy","iukcy","Jcy","jcy","Jsercy","jsercy","Jukcy","jukcy","Kcy","kcy","KHcy","khcy","KJcy","kjcy","Lcy","lcy","LJcy","ljcy","Mcy","mcy","Ncy","ncy","NJcy","njcy","Ocy","ocy","Pcy","pcy","Rcy","rcy","Scy","scy","SHCHcy","shchcy","SHcy","shcy","SOFTcy","softcy","Tcy","tcy","TScy","tscy","TSHcy","tshcy","Ubrcy","ubrcy","Ucy","ucy","Vcy","vcy","YAcy","yacy","Ycy","ycy","YIcy","yicy","YUcy","yucy","Zcy","zcy","ZHcy","zhcy"],p:["copy"],t:["cylcty","empty"],h:["shy"]},g:{i:["AElig","aelig","ffilig","fflig","ffllig","filig","fjlig","fllig","IJlig","ijlig","OElig","oelig","szlig"],l:["amalg","lg","ntlg"],n:["ang","Aring","aring","backcong","bcong","cong","eng","Lang","lang","LeftCeiling","loang","nang","ncong","Rang","rang","RightCeiling","ring","roang","sung","Uring","uring","varnothing"],a:["angmsdag","vzigzag"],e:["deg","eg","leg","reg"],G:["Gg","nGg"],g:["gg","ggg"],E:["lEg"],s:["lesg"],m:["lsimg","simg"]},f:{a:["af","angmsdaf","sigmaf"],p:["Aopf","aopf","Bopf","bopf","Copf","copf","Dopf","dopf","Eopf","eopf","Fopf","fopf","Gopf","gopf","Hopf","hopf","Iopf","iopf","Jopf","jopf","Kopf","kopf","Lopf","lopf","Mopf","mopf","Nopf","nopf","Oopf","oopf","Popf","popf","Qopf","qopf","Ropf","ropf","Sopf","sopf","Topf","topf","Uopf","uopf","Vopf","vopf","Wopf","wopf","Xopf","xopf","Yopf","yopf","Zopf","zopf"],i:["dtrif","ltrif","rtrif","utrif"],o:["fnof","imof","orderof","origof"],r:["Fouriertrf","Laplacetrf","Mellintrf","profsurf","squarf","sstarf","starf","zeetrf"],l:["half"],f:["iff"],z:["lozf"],d:["ordf"],u:["squf"]},r:{f:["Afr","afr","Bfr","bfr","Cfr","cfr","Dfr","dfr","Efr","efr","Ffr","ffr","Gfr","gfr","Hfr","hfr","Ifr","ifr","Jfr","jfr","Kfr","kfr","Lfr","lfr","Mfr","mfr","Nfr","nfr","Ofr","ofr","Pfr","pfr","Qfr","qfr","Rfr","rfr","Sfr","sfr","Tfr","tfr","Ufr","ufr","Vfr","vfr","Wfr","wfr","Xfr","xfr","Yfr","yfr","Zfr","zfr"],c:["Amacr","amacr","Ascr","ascr","Bscr","bscr","Cscr","cscr","Dscr","dscr","Emacr","emacr","Escr","escr","Fscr","fscr","Gscr","gscr","Hscr","hscr","Imacr","imacr","Iscr","iscr","Jscr","jscr","Kscr","kscr","Lscr","lscr","macr","Mscr","mscr","Nscr","nscr","Omacr","omacr","Oscr","oscr","Pscr","pscr","Qscr","qscr","Rscr","rscr","Sscr","sscr","Tscr","tscr","Umacr","umacr","Uscr","uscr","Vscr","vscr","Wscr","wscr","Xscr","xscr","Yscr","yscr","Zscr","zscr"],r:["angzarr","crarr","cudarrr","cularr","curarr","Darr","dArr","darr","ddarr","dharr","duarr","dzigrarr","erarr","gtrarr","hArr","harr","hoarr","lAarr","Larr","lArr","larr","lBarr","lbarr","llarr","loarr","lrarr","ltlarr","neArr","nearr","nhArr","nharr","nlArr","nlarr","nrArr","nrarr","nvHarr","nvlArr","nvrArr","nwArr","nwarr","olarr","orarr","rAarr","Rarr","rArr","rarr","RBarr","rBarr","rbarr","rlarr","roarr","rrarr","seArr","searr","simrarr","slarr","srarr","subrarr","suplarr","swArr","swarr","Uarr","uArr","uarr","udarr","uharr","uuarr","vArr","varr","xhArr","xharr","xlArr","xlarr","xrArr","xrarr","zigrarr"],i:["apacir","cir","cirscir","ecir","gtcir","harrcir","ltcir","midcir","ocir","ofcir","olcir","plusacir","pluscir","topcir","Uarrocir"],a:["bigstar","brvbar","dHar","dollar","DoubleVerticalBar","DownArrowBar","DownLeftVectorBar","DownRightVectorBar","duhar","epar","gtlPar","hbar","horbar","ldrdhar","ldrushar","LeftArrowBar","LeftDownVectorBar","LeftTriangleBar","LeftUpVectorBar","LeftVectorBar","lHar","lopar","lowbar","lpar","lrhar","ltrPar","lurdshar","luruhar","nesear","nhpar","NotDoubleVerticalBar","NotLeftTriangleBar","NotRightTriangleBar","NotVerticalBar","npar","nspar","nwnear","ohbar","opar","ovbar","OverBar","par","profalar","rdldhar","rHar","RightArrowBar","RightDownVectorBar","RightTriangleBar","RightUpVectorBar","RightVectorBar","rlhar","ropar","rpar","ruluhar","seswar","solbar","spar","Star","star","swnwar","timesbar","udhar","uHar","UnderBar","UpArrowBar","Vbar","vBar","veebar","Verbar","verbar","VerticalBar","wedbar"],D:["boxDr"],d:["boxdr","mldr","nldr"],U:["boxUr"],u:["boxur","natur"],V:["boxVr"],v:["boxvr"],s:["copysr"],p:["cuepr","npr","pr"],o:["cupor","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownRightTeeVector","DownRightVector","ldquor","LeftDownTeeVector","LeftDownVector","LeftFloor","LeftRightVector","LeftTeeVector","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftVector","lesdotor","lfloor","lsquor","or","oror","rdquor","rfloor","RightDownTeeVector","RightDownVector","RightFloor","RightTeeVector","RightUpDownVector","RightUpTeeVector","RightUpVector","RightVector","rsquor","VerticalSeparator"],e:["Dagger","dagger","ddagger","easter","GreaterGreater","LessEqualGreater","LessGreater","llcorner","lrcorner","marker","NestedGreaterGreater","NotGreater","NotGreaterGreater","NotLessGreater","NotNestedGreaterGreater","order","ulcorner","urcorner"],t:["eqslantgtr","lesseqgtr","lesseqqgtr","lessgtr","ngtr"],O:["Or"],P:["Pr"],w:["wr"]},m:{y:["alefsym","thetasym"],i:["backsim","bsim","eqsim","Esim","esim","gnsim","gsim","gtrsim","larrsim","lesssim","lnsim","lsim","nesim","ngsim","nlsim","nsim","nvsim","parsim","plussim","precnsim","precsim","prnsim","prsim","rarrsim","scnsim","scsim","sim","subsim","succnsim","succsim","supsim","thicksim","thksim"],o:["bottom"],s:["ccupssm"],r:["curarrm","lrm"],a:["diam"],u:["Equilibrium","num","ReverseEquilibrium","ReverseUpEquilibrium","Sum","sum","trpezium","UpEquilibrium"],I:["Im"],h:["ohm"],d:["ordm"],p:["pm"],l:["rlm"]},h:{p:["aleph","angsph"],a:["angmsdah"],s:["Backslash","circleddash","dash","hslash","ldsh","Lsh","lsh","mdash","ndash","nVDash","nVdash","nvDash","nvdash","odash","Oslash","oslash","rdsh","Rsh","rsh","VDash","Vdash","vDash","vdash","Vvdash"],t:["beth","daleth","eth","imath","jmath","wreath"],x:["boxh"],V:["boxVh"],v:["boxvh"],k:["planckh"],i:["upsih"]},a:{h:["Alpha","alpha"],a:["angmsdaa"],t:["Beta","beta","Delta","delta","Eta","eta","iiota","Iota","iota","Theta","theta","vartheta","Zeta","zeta"],l:["Cedilla","gla","nabla"],m:["comma","digamma","Gamma","gamma","InvisibleComma","mcomma","Sigma","sigma","varsigma"],p:["Kappa","kappa","varkappa"],d:["Lambda","lambda"],c:["ldca","rdca"],v:["notinva","notniva"],g:["Omega","omega"],r:["para"],e:["toea"],s:["tosa"]},P:{M:["AMP"]},p:{m:["amp","asymp","bump","comp","HumpDownHump","mp","nbump","NotHumpDownHump"],a:["ap","bigcap","Cap","cap","capcap","cupbrcap","CupCap","cupcap","gap","gnap","lap","lnap","Map","map","multimap","mumap","nap","ncap","NotCupCap","nvap","prap","prnap","rarrap","scap","scnap","sqcap","thkap","xcap","xmap"],u:["bigcup","bigsqcup","bigtriangleup","capbrcup","capcup","csup","Cup","cup","cupcup","leftharpoonup","mapstoup","ncup","nsup","rightharpoonup","sqcup","sqsup","subsup","Sup","sup","supsup","vnsup","xcup","xsqcup"],r:["cularrp","operp","perp","sharp","weierp"],o:["dlcrop","drcrop","prop","top","ulcrop","urcrop","vprop"],s:["emsp","ensp","hairsp","nbsp","numsp","puncsp","thinsp"],i:["hellip","vellip"],l:["larrlp","rarrlp"],c:["mlcp"],h:["smashp"],w:["wp"]},v:{d:["andv"],r:["Barv","orv","vBarv"],y:["bemptyv","cemptyv","demptyv","emptyv","laemptyv","raemptyv"],i:["bnequiv","div","epsiv","equiv","nequiv","niv","odiv","phiv","piv"],x:["boxv"],h:["Dashv","dashv"],k:["forkv","plankv"],s:["isinsv"],n:["isinv"],a:["kappav","sigmav","thetav"],t:["nGtv","nLtv"],o:["rhov"]},b:{a:["angmsdab","Tab"],v:["angrtvb","notinvb","notnivb"],l:["bsolb","solb"],u:["bsolhsub","csub","lcub","nsub","rcub","sqsub","Sub","sub","subsub","supdsub","suphsub","supsub","vnsub"],r:["larrb","rarrb"],q:["lsqb","rsqb"],s:["minusb","plusb","timesb","trisb"],t:["sdotb"]},t:{r:["angrt","imagpart","npart","part","realpart","Sqrt","vangrt","Vert","vert"],s:["angst","ast","circledast","equest","exist","gtquest","iquest","lmoust","lowast","ltquest","midast","nexist","oast","quest","rmoust"],n:["awconint","awint","Cconint","cent","cirfnint","complement","Congruent","Conint","conint","cwconint","cwint","Element","fpartint","geqslant","iiiint","iiint","Int","int","leqslant","ngeqslant","nleqslant","NotCongruent","NotElement","NotReverseElement","npolint","oint","percnt","pointint","qint","quatint","ReverseElement","rppolint","scpolint","tint"],o:["bigodot","bNot","bnot","bot","capdot","Cdot","cdot","CenterDot","centerdot","CircleDot","congdot","ctdot","cupdot","DiacriticalDot","Dot","dot","DotDot","doteqdot","DoubleDot","dtdot","eDDot","Edot","eDot","edot","efDot","egsdot","elsdot","erDot","esdot","Gdot","gdot","gesdot","gtdot","gtrdot","Idot","inodot","isindot","lesdot","lessdot","Lmidot","lmidot","ltdot","mDDot","middot","ncongdot","nedot","Not","not","notindot","odot","quot","sdot","simdot","subdot","subedot","supdot","supedot","tdot","topbot","tridot","TripleDot","utdot","xodot","Zdot","zdot"],f:["blacktriangleleft","circlearrowleft","curvearrowleft","downharpoonleft","looparrowleft","mapstoleft","ntriangleleft","triangleleft","upharpoonleft","vartriangleleft"],h:["blacktriangleright","circlearrowright","curvearrowright","dfisht","downharpoonright","homtht","lfisht","looparrowright","ntriangleright","rfisht","triangleright","ufisht","upharpoonright","vartriangleright"],e:["bullet","caret","emptyset","LeftAngleBracket","LeftDoubleBracket","NotSquareSubset","NotSquareSuperset","NotSubset","NotSuperset","nsubset","nsupset","OverBracket","RightAngleBracket","RightDoubleBracket","sqsubset","sqsupset","SquareSubset","SquareSuperset","Subset","subset","Superset","Supset","supset","target","UnderBracket"],i:["clubsuit","diamondsuit","heartsuit","it","spadesuit"],a:["commat","flat","Hat","lat","phmmat","SuchThat"],c:["Coproduct","Product","rect","sect"],G:["Gt","nGt"],g:["gt","ngt","nvgt","ogt","rpargt"],l:["hamilt","lparlt","lt","malt","nlt","nvlt","olt","submult","supmult"],L:["Lt","nLt"],x:["sext","twixt"],m:["smt"]},n:{o:["Aogon","aogon","ApplyFunction","backepsilon","caron","Ccaron","ccaron","Colon","colon","Dcaron","dcaron","Ecaron","ecaron","ecolon","Eogon","eogon","Epsilon","epsilon","eqcolon","expectation","hercon","Intersection","Iogon","iogon","Lcaron","lcaron","Ncaron","ncaron","ogon","Omicron","omicron","Proportion","Rcaron","rcaron","Scaron","scaron","SquareIntersection","SquareUnion","straightepsilon","Tcaron","tcaron","Union","Uogon","uogon","Upsilon","upsilon","varepsilon","Zcaron","zcaron"],g:["Assign"],e:["between","curren","hyphen","kgreen","yen"],w:["bigtriangledown","blacktriangledown","frown","leftharpoondown","mapstodown","rightharpoondown","sfrown","triangledown"],f:["compfn"],i:["disin","iinfin","in","infin","isin","notin","nvinfin"],r:["dlcorn","drcorn","thorn","ulcorn","urcorn"],a:["lagran"],m:["plusmn","setmn","ssetmn"]},s:{o:["apos","mstpos","napos"],u:["becaus","bigoplus","biguplus","boxminus","boxplus","CircleMinus","CirclePlus","dotminus","dotplus","eplus","loplus","minus","MinusPlus","mnplus","ominus","oplus","plus","PlusMinus","roplus","setminus","simplus","smallsetminus","subplus","supplus","triminus","triplus","UnionPlus","uplus","xoplus","xuplus"],i:["Bernoullis","nis","OverParenthesis","UnderParenthesis","xnis"],e:["bigotimes","boxtimes","CircleTimes","complexes","divideontimes","ges","gesles","Implies","InvisibleTimes","lates","leftthreetimes","les","lesges","lotimes","ltimes","nges","nles","NotPrecedes","Otimes","otimes","Precedes","primes","rightthreetimes","rotimes","RoundImplies","rtimes","smtes","spades","times"],p:["caps","ccaps","ccups","cups","sqcaps","sqcups"],y:["Cayleys"],b:["clubs"],s:["Cross","cross","eqslantless","GreaterEqualLess","GreaterLess","gtreqless","gtreqqless","gtrless","LessLess","NestedLessLess","nless","NotGreaterLess","NotLess","NotLessLess","NotNestedLessLess","olcross"],m:["diams"],w:["downdownarrows","leftleftarrows","leftrightarrows","rightleftarrows","rightrightarrows","upuparrows"],g:["egs"],r:["elinters","integers"],l:["els","equals","models","naturals","rationals","reals"],t:["Exists","hearts","nexists","NotExists"],n:["fltns","isins","leftrightharpoons","quaternions","rightleftharpoons","strns"],f:["larrbfs","larrfs","rarrbfs","rarrfs"],d:["NotSucceeds","Succeeds"],a:["otimesas"]},x:{o:["approx","boxbox","gnapprox","gtrapprox","lessapprox","lnapprox","napprox","precapprox","precnapprox","succapprox","succnapprox","thickapprox"],n:["divonx"],r:["rx"]},q:{e:["approxeq","asympeq","backsimeq","Bumpeq","bumpeq","circeq","coloneq","ddotseq","doteq","fallingdotseq","geq","gneq","leq","lneq","ngeq","nleq","npreceq","nsimeq","nsubseteq","nsucceq","nsupseteq","ntrianglelefteq","ntrianglerighteq","preccurlyeq","preceq","questeq","risingdotseq","simeq","sqsubseteq","sqsupseteq","subseteq","subsetneq","succcurlyeq","succeq","supseteq","supsetneq","trianglelefteq","triangleq","trianglerighteq","varsubsetneq","varsupsetneq","veeeq","wedgeq"],q:["geqq","gneqq","gvertneqq","leqq","lneqq","lvertneqq","ngeqq","nleqq","nsubseteqq","nsupseteqq","precneqq","subseteqq","subsetneqq","succneqq","supseteqq","supsetneqq","varsubsetneqq","varsupsetneqq"]},l:{m:["Auml","auml","Euml","euml","gsiml","Iuml","iuml","Ouml","ouml","siml","uml","Uuml","uuml","Yuml","yuml"],D:["boxDl"],d:["boxdl"],U:["boxUl"],u:["boxul","lharul","rharul"],V:["boxVl"],v:["boxvl"],o:["bsol","dsol","gesdotol","osol","sol","suphsol"],l:["bull","ell","ForAll","forall","hybull","ll"],i:["Ccedil","ccedil","cedil","Gcedil","Kcedil","kcedil","lAtail","latail","Lcedil","lcedil","lceil","leftarrowtail","Ncedil","ncedil","permil","rAtail","ratail","Rcedil","rcedil","rceil","rightarrowtail","Scedil","scedil","Tcedil","tcedil"],a:["ClockwiseContourIntegral","ContourIntegral","CounterClockwiseContourIntegral","DotEqual","DoubleContourIntegral","Equal","GreaterEqual","GreaterFullEqual","GreaterSlantEqual","HumpEqual","intcal","Integral","intercal","LeftTriangleEqual","LessFullEqual","LessSlantEqual","natural","NotEqual","NotGreaterEqual","NotGreaterFullEqual","NotGreaterSlantEqual","NotHumpEqual","NotLeftTriangleEqual","NotLessEqual","NotLessSlantEqual","NotPrecedesEqual","NotPrecedesSlantEqual","NotRightTriangleEqual","NotSquareSubsetEqual","NotSquareSupersetEqual","NotSubsetEqual","NotSucceedsEqual","NotSucceedsSlantEqual","NotSupersetEqual","NotTildeEqual","NotTildeFullEqual","PrecedesEqual","PrecedesSlantEqual","Proportional","real","RightTriangleEqual","SquareSubsetEqual","SquareSupersetEqual","SubsetEqual","SucceedsEqual","SucceedsSlantEqual","SupersetEqual","TildeEqual","TildeFullEqual"],r:["cudarrl","dharl","uharl"],e:["Del","el","gel","gimel","nparallel","nshortparallel","parallel","prurel","shortparallel"],s:["eparsl","eqvparsl","frasl","gesl","nparsl","parsl","smeparsl"],c:["excl","iexcl"],E:["gEl"],g:["gl","ntgl"],p:["larrpl","rarrpl"],t:["larrtl","Rarrtl","rarrtl"],L:["Ll","nLl"],h:["Vdashl"]},k:{r:["bbrk","bbrktbrk","checkmark","fork","lbbrk","lobrk","pitchfork","rbbrk","robrk","tbrk","topfork"],n:["blank","pertenk"],c:["block","check","lbrack","planck","rbrack"],o:["Dstrok","dstrok","Hstrok","hstrok","Lstrok","lstrok","Tstrok","tstrok"],e:["Hacek"],h:["intlarhk","larrhk","nearhk","nwarhk","rarrhk","searhk","swarhk"],l:["lhblk","uhblk"],a:["NoBreak"]},o:{u:["bdquo","laquo","ldquo","lsaquo","lsquo","raquo","rdquo","rsaquo","rsquo","sbquo"],r:["euro","micro","numero"],t:["gesdoto","lesdoto","longmapsto","mapsto","propto","varpropto"],h:["mho","Rho","rho","varrho"],d:["plusdo"],w:["plustwo"],i:["ratio"]},i:{s:["bepsi","epsi","Psi","psi","Upsi","upsi"],m:["bsemi","semi"],h:["Chi","chi","Phi","phi","straightphi","varphi"],r:["dtri","lltri","lrtri","ltri","nltri","nrtri","rtri","rtriltri","ultri","urtri","utri","vltri","vrtri","xdtri","xutri"],i:["ii"],n:["ni","notni"],P:["Pi"],p:["pi","varpi"],X:["Xi"],x:["xi"]},u:{o:["bernou"],H:["boxHu"],h:["boxhu"],l:["lbrkslu","rbrkslu"],r:["lharu","rharu"],d:["minusdu","plusdu"],M:["Mu"],m:["mu"],N:["Nu"],n:["nu"],q:["squ"],a:["Tau","tau"]},w:{o:["bkarow","dbkarow","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleUpArrow","DoubleUpDownArrow","DownArrow","Downarrow","downarrow","DownArrowUpArrow","DownTeeArrow","drbkarow","hksearow","hkswarow","hookleftarrow","hookrightarrow","LeftArrow","Leftarrow","leftarrow","LeftArrowRightArrow","LeftRightArrow","Leftrightarrow","leftrightarrow","leftrightsquigarrow","LeftTeeArrow","Lleftarrow","LongLeftArrow","Longleftarrow","longleftarrow","LongLeftRightArrow","Longleftrightarrow","longleftrightarrow","LongRightArrow","Longrightarrow","longrightarrow","LowerLeftArrow","LowerRightArrow","nearrow","nLeftarrow","nleftarrow","nLeftrightarrow","nleftrightarrow","nRightarrow","nrightarrow","nwarrow","RightArrow","Rightarrow","rightarrow","RightArrowLeftArrow","rightsquigarrow","RightTeeArrow","Rrightarrow","searrow","ShortDownArrow","ShortLeftArrow","ShortRightArrow","ShortUpArrow","swarrow","twoheadleftarrow","twoheadrightarrow","UpArrow","Uparrow","uparrow","UpArrowDownArrow","UpDownArrow","Updownarrow","updownarrow","UpperLeftArrow","UpperRightArrow","UpTeeArrow"],r:["harrw","nrarrw","rarrw"]},L:{D:["boxDL"],d:["boxdL"],U:["boxUL"],u:["boxuL"],V:["boxVL"],v:["boxvL"]},R:{D:["boxDR"],d:["boxdR","circledR"],U:["boxUR"],u:["boxuR"],V:["boxVR"],v:["boxvR"]},H:{x:["boxH"],V:["boxVH"],v:["boxvH"],T:["ETH"]},D:{H:["boxHD"],h:["boxhD"],l:["CapitalDifferentialD","DifferentialD","PartialD"],D:["DD","equivDD"]},U:{H:["boxHU"],h:["boxhU"]},V:{x:["boxV"]},S:{d:["circledS"],o:["oS"]},Y:{P:["COPY"]},G:{N:["ENG"],E:["REG"]},j:{l:["glj"],w:["zwj"],n:["zwnj"]},T:{G:["GT"],L:["LT"],O:["QUOT"]},I:{y:["ImaginaryI"]},z:{o:["loz"]},N:{R:["THORN"]}};let o=pe,c=U,b=l,n=r,P={ac:{addAmpIfSemiPresent:"edge only",addSemiIfAmpPresent:!1},acute:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Alpha:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},alpha:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},amp:{addAmpIfSemiPresent:"edge only",addSemiIfAmpPresent:!0},And:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},and:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},ange:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},angle:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},angst:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},ap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ape:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},approx:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Aring:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},aring:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},Ascr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ascr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Assign:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ast:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},atilde:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},Backslash:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},barwedge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},becaus:{addAmpIfSemiPresent:!0,addSemiIfAmpPresent:"edge only"},Because:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},because:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bepsi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Bernoullis:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Beta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},beta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},beth:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},between:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},blank:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},block:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bottom:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bowtie:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},breve:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bull:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bullet:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bump:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cacute:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Cap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},cap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},capand:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},caps:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},caret:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},caron:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cedil:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Cedilla:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},cent:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},check:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},checkmark:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Chi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},chi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cir:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},circ:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},clubs:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},clubsuit:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Colon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},colon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Colone:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},colone:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},comma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},commat:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},comp:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},complement:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},complexes:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cong:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Congruent:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},conint:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},copf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},coprod:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},COPY:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},copy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Cross:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},cross:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Cup:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cup:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cups:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Dagger:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},dagger:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},daleth:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},darr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},dash:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},DD:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},dd:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},deg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Del:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Delta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},delta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},dharr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},diam:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Diamond:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},diamond:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},diams:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},die:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},digamma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},disin:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},div:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},divide:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},dollar:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},dopf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Dot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},dot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},dsol:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},dtri:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},easter:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ecir:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ecolon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ecy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},edot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ee:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},efr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},eg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},egrave:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},egs:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},el:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ell:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},els:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},empty:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ENG:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},eng:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},epsi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Epsilon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},epsilon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Equal:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},equals:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},equest:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Equilibrium:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},equiv:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},escr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},esim:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Eta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},eta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ETH:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},eth:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},euro:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},excl:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},exist:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Exists:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},expectation:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},female:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},flat:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},fork:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},frown:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Gamma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},gamma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},gap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},gcy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gel:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},geq:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ges:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gesl:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gl:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gla:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gne:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},grave:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},GT:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},half:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Hat:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},hearts:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},hopf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},hyphen:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ic:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},icy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},iff:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ii:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},image:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},imped:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},in:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},int:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},integers:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},iocy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},iogon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},iota:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},isin:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},it:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Kappa:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},kappa:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},kopf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Lambda:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lambda:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lang:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lat:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},late:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lates:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},le:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},leg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},leq:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},les:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ll:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},lne:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},lozenge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lsh:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},LT:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ltimes:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},male:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},malt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},map:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},marker:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},mid:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},minus:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},models:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},mp:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},mu:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},nang:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},natural:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},naturals:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ncy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ne:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ngt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ni:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nis:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nle:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nles:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nless:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nlt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nopf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Not:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},not:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},nsc:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nsce:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nu:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},num:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ogt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ohm:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},oline:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},olt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Omega:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},omega:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Omicron:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},omicron:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},oopf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},opar:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},or:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},order:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},oror:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},orv:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},osol:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},par:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},para:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},parallel:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},part:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},phi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},phone:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Pi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},pi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},pitchfork:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},plus:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},pm:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},popf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},pound:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},pr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},prime:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},primes:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},prod:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Product:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},prop:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Proportion:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Proportional:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},psi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},quest:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},QUOT:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},quot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},race:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},rang:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},range:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ratio:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Re:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},real:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},reals:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},rect:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},REG:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},reg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ring:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},rsh:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},sc:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},scap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},sce:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},scy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},sdot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},sect:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},semi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sharp:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},shy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Sigma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sigma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sim:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sol:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},spades:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},square:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Star:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},star:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Sub:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sub:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sube:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Sum:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sum:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Tab:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},target:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Tau:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},tau:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},therefore:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Theta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},theta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},THORN:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},thorn:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Tilde:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},tilde:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},times:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},tint:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},top:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},tosa:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},TRADE:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},trade:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},triangle:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},trie:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ucy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},uml:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Union:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},uplus:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Upsi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},upsi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},uring:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},vee:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Vert:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},vert:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},wedge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Wedge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},wreath:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Xi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},xi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Ycirc:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ycirc:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ycy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},yen:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Zacute:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},zacute:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Zeta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},zeta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1}},u=new Set(["Aacute","aacute","Abreve","abreve","ac","acd","acE","Acirc","acirc","acute","Acy","acy","AElig","aelig","af","Afr","afr","Agrave","agrave","alefsym","aleph","Alpha","alpha","Amacr","amacr","amalg","AMP","amp","And","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","Aogon","aogon","Aopf","aopf","ap","apacir","apE","ape","apid","apos","ApplyFunction","approx","approxeq","Aring","aring","Ascr","ascr","Assign","ast","asymp","asympeq","Atilde","atilde","Auml","auml","awconint","awint","backcong","backepsilon","backprime","backsim","backsimeq","Backslash","Barv","barvee","Barwed","barwed","barwedge","bbrk","bbrktbrk","bcong","Bcy","bcy","bdquo","becaus","Because","because","bemptyv","bepsi","bernou","Bernoullis","Beta","beta","beth","between","Bfr","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bNot","bnot","Bopf","bopf","bot","bottom","bowtie","boxbox","boxDL","boxDl","boxdL","boxdl","boxDR","boxDr","boxdR","boxdr","boxH","boxh","boxHD","boxHd","boxhD","boxhd","boxHU","boxHu","boxhU","boxhu","boxminus","boxplus","boxtimes","boxUL","boxUl","boxuL","boxul","boxUR","boxUr","boxuR","boxur","boxV","boxv","boxVH","boxVh","boxvH","boxvh","boxVL","boxVl","boxvL","boxvl","boxVR","boxVr","boxvR","boxvr","bprime","Breve","breve","brvbar","Bscr","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","Bumpeq","bumpeq","Cacute","cacute","Cap","cap","capand","capbrcup","capcap","capcup","capdot","CapitalDifferentialD","caps","caret","caron","Cayleys","ccaps","Ccaron","ccaron","Ccedil","ccedil","Ccirc","ccirc","Cconint","ccups","ccupssm","Cdot","cdot","cedil","Cedilla","cemptyv","cent","CenterDot","centerdot","Cfr","cfr","CHcy","chcy","check","checkmark","Chi","chi","cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","CircleDot","circledR","circledS","CircleMinus","CirclePlus","CircleTimes","cirE","cire","cirfnint","cirmid","cirscir","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","clubs","clubsuit","Colon","colon","Colone","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","Congruent","Conint","conint","ContourIntegral","Copf","copf","coprod","Coproduct","COPY","copy","copysr","CounterClockwiseContourIntegral","crarr","Cross","cross","Cscr","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","Cup","cup","cupbrcap","CupCap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","Dagger","dagger","daleth","Darr","dArr","darr","dash","Dashv","dashv","dbkarow","dblac","Dcaron","dcaron","Dcy","dcy","DD","dd","ddagger","ddarr","DDotrahd","ddotseq","deg","Del","Delta","delta","demptyv","dfisht","Dfr","dfr","dHar","dharl","dharr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","diam","Diamond","diamond","diamondsuit","diams","die","DifferentialD","digamma","disin","div","divide","divideontimes","divonx","DJcy","djcy","dlcorn","dlcrop","dollar","Dopf","dopf","Dot","dot","DotDot","doteq","doteqdot","DotEqual","dotminus","dotplus","dotsquare","doublebarwedge","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","Downarrow","downarrow","DownArrowBar","DownArrowUpArrow","DownBreve","downdownarrows","downharpoonleft","downharpoonright","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","drbkarow","drcorn","drcrop","Dscr","dscr","DScy","dscy","dsol","Dstrok","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","DZcy","dzcy","dzigrarr","Eacute","eacute","easter","Ecaron","ecaron","ecir","Ecirc","ecirc","ecolon","Ecy","ecy","eDDot","Edot","eDot","edot","ee","efDot","Efr","efr","eg","Egrave","egrave","egs","egsdot","el","Element","elinters","ell","els","elsdot","Emacr","emacr","empty","emptyset","EmptySmallSquare","emptyv","EmptyVerySmallSquare","emsp","emsp13","emsp14","ENG","eng","ensp","Eogon","eogon","Eopf","eopf","epar","eparsl","eplus","epsi","Epsilon","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","Equal","equals","EqualTilde","equest","Equilibrium","equiv","equivDD","eqvparsl","erarr","erDot","Escr","escr","esdot","Esim","esim","Eta","eta","ETH","eth","Euml","euml","euro","excl","exist","Exists","expectation","ExponentialE","exponentiale","fallingdotseq","Fcy","fcy","female","ffilig","fflig","ffllig","Ffr","ffr","filig","FilledSmallSquare","FilledVerySmallSquare","fjlig","flat","fllig","fltns","fnof","Fopf","fopf","ForAll","forall","fork","forkv","Fouriertrf","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","Fscr","fscr","gacute","Gamma","gamma","Gammad","gammad","gap","Gbreve","gbreve","Gcedil","Gcirc","gcirc","Gcy","gcy","Gdot","gdot","gE","ge","gEl","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","Gfr","gfr","Gg","gg","ggg","gimel","GJcy","gjcy","gl","gla","glE","glj","gnap","gnapprox","gnE","gne","gneq","gneqq","gnsim","Gopf","gopf","grave","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","gscr","gsim","gsime","gsiml","GT","Gt","gt","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","Hacek","hairsp","half","hamilt","HARDcy","hardcy","hArr","harr","harrcir","harrw","Hat","hbar","Hcirc","hcirc","hearts","heartsuit","hellip","hercon","Hfr","hfr","HilbertSpace","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","Hopf","hopf","horbar","HorizontalLine","Hscr","hscr","hslash","Hstrok","hstrok","HumpDownHump","HumpEqual","hybull","hyphen","Iacute","iacute","ic","Icirc","icirc","Icy","icy","Idot","IEcy","iecy","iexcl","iff","Ifr","ifr","Igrave","igrave","ii","iiiint","iiint","iinfin","iiota","IJlig","ijlig","Im","Imacr","imacr","image","ImaginaryI","imagline","imagpart","imath","imof","imped","Implies","in","incare","infin","infintie","inodot","Int","int","intcal","integers","Integral","intercal","Intersection","intlarhk","intprod","InvisibleComma","InvisibleTimes","IOcy","iocy","Iogon","iogon","Iopf","iopf","Iota","iota","iprod","iquest","Iscr","iscr","isin","isindot","isinE","isins","isinsv","isinv","it","Itilde","itilde","Iukcy","iukcy","Iuml","iuml","Jcirc","jcirc","Jcy","jcy","Jfr","jfr","jmath","Jopf","jopf","Jscr","jscr","Jsercy","jsercy","Jukcy","jukcy","Kappa","kappa","kappav","Kcedil","kcedil","Kcy","kcy","Kfr","kfr","kgreen","KHcy","khcy","KJcy","kjcy","Kopf","kopf","Kscr","kscr","lAarr","Lacute","lacute","laemptyv","lagran","Lambda","lambda","Lang","lang","langd","langle","lap","Laplacetrf","laquo","Larr","lArr","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","lAtail","latail","late","lates","lBarr","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","Lcaron","lcaron","Lcedil","lcedil","lceil","lcub","Lcy","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","lE","le","LeftAngleBracket","LeftArrow","Leftarrow","leftarrow","LeftArrowBar","LeftArrowRightArrow","leftarrowtail","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","leftharpoondown","leftharpoonup","leftleftarrows","LeftRightArrow","Leftrightarrow","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","leftthreetimes","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","lEg","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","LessEqualGreater","LessFullEqual","LessGreater","lessgtr","LessLess","lesssim","LessSlantEqual","LessTilde","lfisht","lfloor","Lfr","lfr","lg","lgE","lHar","lhard","lharu","lharul","lhblk","LJcy","ljcy","Ll","ll","llarr","llcorner","Lleftarrow","llhard","lltri","Lmidot","lmidot","lmoust","lmoustache","lnap","lnapprox","lnE","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","LongLeftArrow","Longleftarrow","longleftarrow","LongLeftRightArrow","Longleftrightarrow","longleftrightarrow","longmapsto","LongRightArrow","Longrightarrow","longrightarrow","looparrowleft","looparrowright","lopar","Lopf","lopf","loplus","lotimes","lowast","lowbar","LowerLeftArrow","LowerRightArrow","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","Lscr","lscr","Lsh","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","Lstrok","lstrok","LT","Lt","lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrPar","lurdshar","luruhar","lvertneqq","lvnE","macr","male","malt","maltese","Map","map","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","Mcy","mcy","mdash","mDDot","measuredangle","MediumSpace","Mellintrf","Mfr","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","MinusPlus","mlcp","mldr","mnplus","models","Mopf","mopf","mp","Mscr","mscr","mstpos","Mu","mu","multimap","mumap","nabla","Nacute","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","Ncaron","ncaron","Ncedil","ncedil","ncong","ncongdot","ncup","Ncy","ncy","ndash","ne","nearhk","neArr","nearr","nearrow","nedot","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","nequiv","nesear","nesim","NestedGreaterGreater","NestedLessLess","NewLine","nexist","nexists","Nfr","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","nGg","ngsim","nGt","ngt","ngtr","nGtv","nhArr","nharr","nhpar","ni","nis","nisd","niv","NJcy","njcy","nlArr","nlarr","nldr","nlE","nle","nLeftarrow","nleftarrow","nLeftrightarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nLl","nlsim","nLt","nlt","nltri","nltrie","nLtv","nmid","NoBreak","NonBreakingSpace","Nopf","nopf","Not","not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","notin","notindot","notinE","notinva","notinvb","notinvc","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","notni","notniva","notnivb","notnivc","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nRightarrow","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","Nscr","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","Ntilde","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","Nu","nu","num","numero","numsp","nvap","nVDash","nVdash","nvDash","nvdash","nvge","nvgt","nvHarr","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwarhk","nwArr","nwarr","nwarrow","nwnear","Oacute","oacute","oast","ocir","Ocirc","ocirc","Ocy","ocy","odash","Odblac","odblac","odiv","odot","odsold","OElig","oelig","ofcir","Ofr","ofr","ogon","Ograve","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","Omacr","omacr","Omega","omega","Omicron","omicron","omid","ominus","Oopf","oopf","opar","OpenCurlyDoubleQuote","OpenCurlyQuote","operp","oplus","Or","or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv","oS","Oscr","oscr","Oslash","oslash","osol","Otilde","otilde","Otimes","otimes","otimesas","Ouml","ouml","ovbar","OverBar","OverBrace","OverBracket","OverParenthesis","par","para","parallel","parsim","parsl","part","PartialD","Pcy","pcy","percnt","period","permil","perp","pertenk","Pfr","pfr","Phi","phi","phiv","phmmat","phone","Pi","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","PlusMinus","plusmn","plussim","plustwo","pm","Poincareplane","pointint","Popf","popf","pound","Pr","pr","prap","prcue","prE","pre","prec","precapprox","preccurlyeq","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","preceq","precnapprox","precneqq","precnsim","precsim","Prime","prime","primes","prnap","prnE","prnsim","prod","Product","profalar","profline","profsurf","prop","Proportion","Proportional","propto","prsim","prurel","Pscr","pscr","Psi","psi","puncsp","Qfr","qfr","qint","Qopf","qopf","qprime","Qscr","qscr","quaternions","quatint","quest","questeq","QUOT","quot","rAarr","race","Racute","racute","radic","raemptyv","Rang","rang","rangd","range","rangle","raquo","Rarr","rArr","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","Rarrtl","rarrtl","rarrw","rAtail","ratail","ratio","rationals","RBarr","rBarr","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","Rcaron","rcaron","Rcedil","rcedil","rceil","rcub","Rcy","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","Re","real","realine","realpart","reals","rect","REG","reg","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","rfisht","rfloor","Rfr","rfr","rHar","rhard","rharu","rharul","Rho","rho","rhov","RightAngleBracket","RightArrow","Rightarrow","rightarrow","RightArrowBar","RightArrowLeftArrow","rightarrowtail","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","RightTee","RightTeeArrow","RightTeeVector","rightthreetimes","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","Ropf","ropf","roplus","rotimes","RoundImplies","rpar","rpargt","rppolint","rrarr","Rrightarrow","rsaquo","Rscr","rscr","Rsh","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","RuleDelayed","ruluhar","rx","Sacute","sacute","sbquo","Sc","sc","scap","Scaron","scaron","sccue","scE","sce","Scedil","scedil","Scirc","scirc","scnap","scnE","scnsim","scpolint","scsim","Scy","scy","sdot","sdotb","sdote","searhk","seArr","searr","searrow","sect","semi","seswar","setminus","setmn","sext","Sfr","sfr","sfrown","sharp","SHCHcy","shchcy","SHcy","shcy","ShortDownArrow","ShortLeftArrow","shortmid","shortparallel","ShortRightArrow","ShortUpArrow","shy","Sigma","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","SmallCircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","SOFTcy","softcy","sol","solb","solbar","Sopf","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","Sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","Square","square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","squarf","squf","srarr","Sscr","sscr","ssetmn","ssmile","sstarf","Star","star","starf","straightepsilon","straightphi","strns","Sub","sub","subdot","subE","sube","subedot","submult","subnE","subne","subplus","subrarr","Subset","subset","subseteq","subseteqq","SubsetEqual","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","succeq","succnapprox","succneqq","succnsim","succsim","SuchThat","Sum","sum","sung","Sup","sup","sup1","sup2","sup3","supdot","supdsub","supE","supe","supedot","Superset","SupersetEqual","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","Supset","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swarhk","swArr","swarr","swarrow","swnwar","szlig","Tab","target","Tau","tau","tbrk","Tcaron","tcaron","Tcedil","tcedil","Tcy","tcy","tdot","telrec","Tfr","tfr","there4","Therefore","therefore","Theta","theta","thetasym","thetav","thickapprox","thicksim","ThickSpace","thinsp","ThinSpace","thkap","thksim","THORN","thorn","Tilde","tilde","TildeEqual","TildeFullEqual","TildeTilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","Topf","topf","topfork","tosa","tprime","TRADE","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","TripleDot","triplus","trisb","tritime","trpezium","Tscr","tscr","TScy","tscy","TSHcy","tshcy","Tstrok","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","Uacute","uacute","Uarr","uArr","uarr","Uarrocir","Ubrcy","ubrcy","Ubreve","ubreve","Ucirc","ucirc","Ucy","ucy","udarr","Udblac","udblac","udhar","ufisht","Ufr","ufr","Ugrave","ugrave","uHar","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","Umacr","umacr","uml","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","uogon","Uopf","uopf","UpArrow","Uparrow","uparrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","Updownarrow","updownarrow","UpEquilibrium","upharpoonleft","upharpoonright","uplus","UpperLeftArrow","UpperRightArrow","Upsi","upsi","upsih","Upsilon","upsilon","UpTee","UpTeeArrow","upuparrows","urcorn","urcorner","urcrop","Uring","uring","urtri","Uscr","uscr","utdot","Utilde","utilde","utri","utrif","uuarr","Uuml","uuml","uwangle","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","vArr","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","Vbar","vBar","vBarv","Vcy","vcy","VDash","Vdash","vDash","vdash","Vdashl","Vee","vee","veebar","veeeq","vellip","Verbar","verbar","Vert","vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","vfr","vltri","vnsub","vnsup","Vopf","vopf","vprop","vrtri","Vscr","vscr","vsubnE","vsubne","vsupnE","vsupne","Vvdash","vzigzag","Wcirc","wcirc","wedbar","Wedge","wedge","wedgeq","weierp","Wfr","wfr","Wopf","wopf","wp","wr","wreath","Wscr","wscr","xcap","xcirc","xcup","xdtri","Xfr","xfr","xhArr","xharr","Xi","xi","xlArr","xlarr","xmap","xnis","xodot","Xopf","xopf","xoplus","xotime","xrArr","xrarr","Xscr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","Yacute","yacute","YAcy","yacy","Ycirc","ycirc","Ycy","ycy","yen","Yfr","yfr","YIcy","yicy","Yopf","yopf","Yscr","yscr","YUcy","yucy","Yuml","yuml","Zacute","zacute","Zcaron","zcaron","Zcy","zcy","Zdot","zdot","zeetrf","ZeroWidthSpace","Zeta","zeta","Zfr","zfr","ZHcy","zhcy","zigrarr","Zopf","zopf","Zscr","zscr","zwj","zwnj"]),i=new Set(["aacute","abreve","ac","acd","ace","acirc","acute","acy","aelig","af","afr","agrave","alefsym","aleph","alpha","amacr","amalg","amp","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","aogon","aopf","ap","apacir","ape","apid","apos","applyfunction","approx","approxeq","aring","ascr","assign","ast","asymp","asympeq","atilde","auml","awconint","awint","backcong","backepsilon","backprime","backsim","backsimeq","backslash","barv","barvee","barwed","barwedge","bbrk","bbrktbrk","bcong","bcy","bdquo","becaus","because","bemptyv","bepsi","bernou","bernoullis","beta","beth","between","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bnot","bopf","bot","bottom","bowtie","boxbox","boxdl","boxdr","boxh","boxhd","boxhu","boxminus","boxplus","boxtimes","boxul","boxur","boxv","boxvh","boxvl","boxvr","bprime","breve","brvbar","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpe","bumpeq","cacute","cap","capand","capbrcup","capcap","capcup","capdot","capitaldifferentiald","caps","caret","caron","cayleys","ccaps","ccaron","ccedil","ccirc","cconint","ccups","ccupssm","cdot","cedil","cedilla","cemptyv","cent","centerdot","cfr","chcy","check","checkmark","chi","cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","circledot","circledr","circleds","circleminus","circleplus","circletimes","cire","cirfnint","cirmid","cirscir","clockwisecontourintegral","closecurlydoublequote","closecurlyquote","clubs","clubsuit","colon","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","congruent","conint","contourintegral","copf","coprod","coproduct","copy","copysr","counterclockwisecontourintegral","crarr","cross","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","cupbrcap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","dagger","daleth","darr","dash","dashv","dbkarow","dblac","dcaron","dcy","dd","ddagger","ddarr","ddotrahd","ddotseq","deg","del","delta","demptyv","dfisht","dfr","dhar","dharl","dharr","diacriticalacute","diacriticaldot","diacriticaldoubleacute","diacriticalgrave","diacriticaltilde","diam","diamond","diamondsuit","diams","die","differentiald","digamma","disin","div","divide","divideontimes","divonx","djcy","dlcorn","dlcrop","dollar","dopf","dot","dotdot","doteq","doteqdot","dotequal","dotminus","dotplus","dotsquare","doublebarwedge","doublecontourintegral","doubledot","doubledownarrow","doubleleftarrow","doubleleftrightarrow","doublelefttee","doublelongleftarrow","doublelongleftrightarrow","doublelongrightarrow","doublerightarrow","doublerighttee","doubleuparrow","doubleupdownarrow","doubleverticalbar","downarrow","downarrowbar","downarrowuparrow","downbreve","downdownarrows","downharpoonleft","downharpoonright","downleftrightvector","downleftteevector","downleftvector","downleftvectorbar","downrightteevector","downrightvector","downrightvectorbar","downtee","downteearrow","drbkarow","drcorn","drcrop","dscr","dscy","dsol","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","dzcy","dzigrarr","eacute","easter","ecaron","ecir","ecirc","ecolon","ecy","eddot","edot","ee","efdot","efr","eg","egrave","egs","egsdot","el","element","elinters","ell","els","elsdot","emacr","empty","emptyset","emptysmallsquare","emptyv","emptyverysmallsquare","emsp","emsp13","emsp14","eng","ensp","eogon","eopf","epar","eparsl","eplus","epsi","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","equal","equals","equaltilde","equest","equilibrium","equiv","equivdd","eqvparsl","erarr","erdot","escr","esdot","esim","eta","eth","euml","euro","excl","exist","exists","expectation","exponentiale","fallingdotseq","fcy","female","ffilig","fflig","ffllig","ffr","filig","filledsmallsquare","filledverysmallsquare","fjlig","flat","fllig","fltns","fnof","fopf","forall","fork","forkv","fouriertrf","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","fscr","gacute","gamma","gammad","gap","gbreve","gcedil","gcirc","gcy","gdot","ge","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","gfr","gg","ggg","gimel","gjcy","gl","gla","gle","glj","gnap","gnapprox","gne","gneq","gneqq","gnsim","gopf","grave","greaterequal","greaterequalless","greaterfullequal","greatergreater","greaterless","greaterslantequal","greatertilde","gscr","gsim","gsime","gsiml","gt","gtcc","gtcir","gtdot","gtlpar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvne","hacek","hairsp","half","hamilt","hardcy","harr","harrcir","harrw","hat","hbar","hcirc","hearts","heartsuit","hellip","hercon","hfr","hilbertspace","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","hopf","horbar","horizontalline","hscr","hslash","hstrok","humpdownhump","humpequal","hybull","hyphen","iacute","ic","icirc","icy","idot","iecy","iexcl","iff","ifr","igrave","ii","iiiint","iiint","iinfin","iiota","ijlig","im","imacr","image","imaginaryi","imagline","imagpart","imath","imof","imped","implies","in","incare","infin","infintie","inodot","int","intcal","integers","integral","intercal","intersection","intlarhk","intprod","invisiblecomma","invisibletimes","iocy","iogon","iopf","iota","iprod","iquest","iscr","isin","isindot","isine","isins","isinsv","isinv","it","itilde","iukcy","iuml","jcirc","jcy","jfr","jmath","jopf","jscr","jsercy","jukcy","kappa","kappav","kcedil","kcy","kfr","kgreen","khcy","kjcy","kopf","kscr","laarr","lacute","laemptyv","lagran","lambda","lang","langd","langle","lap","laplacetrf","laquo","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","late","lates","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","lcaron","lcedil","lceil","lcub","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","le","leftanglebracket","leftarrow","leftarrowbar","leftarrowrightarrow","leftarrowtail","leftceiling","leftdoublebracket","leftdownteevector","leftdownvector","leftdownvectorbar","leftfloor","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leftrightvector","lefttee","leftteearrow","leftteevector","leftthreetimes","lefttriangle","lefttrianglebar","lefttriangleequal","leftupdownvector","leftupteevector","leftupvector","leftupvectorbar","leftvector","leftvectorbar","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","lessequalgreater","lessfullequal","lessgreater","lessgtr","lessless","lesssim","lessslantequal","lesstilde","lfisht","lfloor","lfr","lg","lge","lhar","lhard","lharu","lharul","lhblk","ljcy","ll","llarr","llcorner","lleftarrow","llhard","lltri","lmidot","lmoust","lmoustache","lnap","lnapprox","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lopar","lopf","loplus","lotimes","lowast","lowbar","lowerleftarrow","lowerrightarrow","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","lscr","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","lstrok","lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrpar","lurdshar","luruhar","lvertneqq","lvne","macr","male","malt","maltese","map","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","mcy","mdash","mddot","measuredangle","mediumspace","mellintrf","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","minusplus","mlcp","mldr","mnplus","models","mopf","mp","mscr","mstpos","mu","multimap","mumap","nabla","nacute","nang","nap","nape","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","ncaron","ncedil","ncong","ncongdot","ncup","ncy","ndash","ne","nearhk","nearr","nearrow","nedot","negativemediumspace","negativethickspace","negativethinspace","negativeverythinspace","nequiv","nesear","nesim","nestedgreatergreater","nestedlessless","newline","nexist","nexists","nfr","nge","ngeq","ngeqq","ngeqslant","nges","ngg","ngsim","ngt","ngtr","ngtv","nharr","nhpar","ni","nis","nisd","niv","njcy","nlarr","nldr","nle","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nll","nlsim","nlt","nltri","nltrie","nltv","nmid","nobreak","nonbreakingspace","nopf","not","notcongruent","notcupcap","notdoubleverticalbar","notelement","notequal","notequaltilde","notexists","notgreater","notgreaterequal","notgreaterfullequal","notgreatergreater","notgreaterless","notgreaterslantequal","notgreatertilde","nothumpdownhump","nothumpequal","notin","notindot","notine","notinva","notinvb","notinvc","notlefttriangle","notlefttrianglebar","notlefttriangleequal","notless","notlessequal","notlessgreater","notlessless","notlessslantequal","notlesstilde","notnestedgreatergreater","notnestedlessless","notni","notniva","notnivb","notnivc","notprecedes","notprecedesequal","notprecedesslantequal","notreverseelement","notrighttriangle","notrighttrianglebar","notrighttriangleequal","notsquaresubset","notsquaresubsetequal","notsquaresuperset","notsquaresupersetequal","notsubset","notsubsetequal","notsucceeds","notsucceedsequal","notsucceedsslantequal","notsucceedstilde","notsuperset","notsupersetequal","nottilde","nottildeequal","nottildefullequal","nottildetilde","notverticalbar","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrarr","nrarrc","nrarrw","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","nu","num","numero","numsp","nvap","nvdash","nvge","nvgt","nvharr","nvinfin","nvlarr","nvle","nvlt","nvltrie","nvrarr","nvrtrie","nvsim","nwarhk","nwarr","nwarrow","nwnear","oacute","oast","ocir","ocirc","ocy","odash","odblac","odiv","odot","odsold","oelig","ofcir","ofr","ogon","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","omacr","omega","omicron","omid","ominus","oopf","opar","opencurlydoublequote","opencurlyquote","operp","oplus","or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv","os","oscr","oslash","osol","otilde","otimes","otimesas","ouml","ovbar","overbar","overbrace","overbracket","overparenthesis","par","para","parallel","parsim","parsl","part","partiald","pcy","percnt","period","permil","perp","pertenk","pfr","phi","phiv","phmmat","phone","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","plusminus","plusmn","plussim","plustwo","pm","poincareplane","pointint","popf","pound","pr","prap","prcue","pre","prec","precapprox","preccurlyeq","precedes","precedesequal","precedesslantequal","precedestilde","preceq","precnapprox","precneqq","precnsim","precsim","prime","primes","prnap","prne","prnsim","prod","product","profalar","profline","profsurf","prop","proportion","proportional","propto","prsim","prurel","pscr","psi","puncsp","qfr","qint","qopf","qprime","qscr","quaternions","quatint","quest","questeq","quot","raarr","race","racute","radic","raemptyv","rang","rangd","range","rangle","raquo","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","rarrw","ratail","ratio","rationals","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","rcaron","rcedil","rceil","rcub","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","re","real","realine","realpart","reals","rect","reg","reverseelement","reverseequilibrium","reverseupequilibrium","rfisht","rfloor","rfr","rhar","rhard","rharu","rharul","rho","rhov","rightanglebracket","rightarrow","rightarrowbar","rightarrowleftarrow","rightarrowtail","rightceiling","rightdoublebracket","rightdownteevector","rightdownvector","rightdownvectorbar","rightfloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","righttee","rightteearrow","rightteevector","rightthreetimes","righttriangle","righttrianglebar","righttriangleequal","rightupdownvector","rightupteevector","rightupvector","rightupvectorbar","rightvector","rightvectorbar","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","ropf","roplus","rotimes","roundimplies","rpar","rpargt","rppolint","rrarr","rrightarrow","rsaquo","rscr","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","ruledelayed","ruluhar","rx","sacute","sbquo","sc","scap","scaron","sccue","sce","scedil","scirc","scnap","scne","scnsim","scpolint","scsim","scy","sdot","sdotb","sdote","searhk","searr","searrow","sect","semi","seswar","setminus","setmn","sext","sfr","sfrown","sharp","shchcy","shcy","shortdownarrow","shortleftarrow","shortmid","shortparallel","shortrightarrow","shortuparrow","shy","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simge","siml","simle","simne","simplus","simrarr","slarr","smallcircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","softcy","sol","solb","solbar","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","squareintersection","squaresubset","squaresubsetequal","squaresuperset","squaresupersetequal","squareunion","squarf","squf","srarr","sscr","ssetmn","ssmile","sstarf","star","starf","straightepsilon","straightphi","strns","sub","subdot","sube","subedot","submult","subne","subplus","subrarr","subset","subseteq","subseteqq","subsetequal","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","succeeds","succeedsequal","succeedsslantequal","succeedstilde","succeq","succnapprox","succneqq","succnsim","succsim","suchthat","sum","sung","sup","sup1","sup2","sup3","supdot","supdsub","supe","supedot","superset","supersetequal","suphsol","suphsub","suplarr","supmult","supne","supplus","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swarhk","swarr","swarrow","swnwar","szlig","tab","target","tau","tbrk","tcaron","tcedil","tcy","tdot","telrec","tfr","there4","therefore","theta","thetasym","thetav","thickapprox","thicksim","thickspace","thinsp","thinspace","thkap","thksim","thorn","tilde","tildeequal","tildefullequal","tildetilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","topf","topfork","tosa","tprime","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","tripledot","triplus","trisb","tritime","trpezium","tscr","tscy","tshcy","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","uacute","uarr","uarrocir","ubrcy","ubreve","ucirc","ucy","udarr","udblac","udhar","ufisht","ufr","ugrave","uhar","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","umacr","uml","underbar","underbrace","underbracket","underparenthesis","union","unionplus","uogon","uopf","uparrow","uparrowbar","uparrowdownarrow","updownarrow","upequilibrium","upharpoonleft","upharpoonright","uplus","upperleftarrow","upperrightarrow","upsi","upsih","upsilon","uptee","upteearrow","upuparrows","urcorn","urcorner","urcrop","uring","urtri","uscr","utdot","utilde","utri","utrif","uuarr","uuml","uwangle","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","vbar","vbarv","vcy","vdash","vdashl","vee","veebar","veeeq","vellip","verbar","vert","verticalbar","verticalline","verticalseparator","verticaltilde","verythinspace","vfr","vltri","vnsub","vnsup","vopf","vprop","vrtri","vscr","vsubne","vsupne","vvdash","vzigzag","wcirc","wedbar","wedge","wedgeq","weierp","wfr","wopf","wp","wr","wreath","wscr","xcap","xcirc","xcup","xdtri","xfr","xharr","xi","xlarr","xmap","xnis","xodot","xopf","xoplus","xotime","xrarr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","yacute","yacy","ycirc","ycy","yen","yfr","yicy","yopf","yscr","yucy","yuml","zacute","zcaron","zcy","zdot","zeetrf","zerowidthspace","zeta","zfr","zhcy","zigrarr","zopf","zscr","zwj","zwnj"]);function t(D){if(typeof D!="string"||!D.length||!D.startsWith("&")||!D.endsWith(";"))throw new Error(`all-named-html-entities/decode(): [THROW_ID_01] Input must be an HTML entity with leading ampersand and trailing semicolon, but "${D}" was given`);let ee=D.slice(1,D.length-1);return o[ee]?o[ee]:null}var O,v,M=Object.prototype,q=Function.prototype.toString,Q=M.hasOwnProperty,Z=q.call(Object),te=M.toString,G=(O=Object.getPrototypeOf,v=Object,function(D){return O(v(D))}),S=function(D){if(!function(j){return!!j&&typeof j=="object"}(D)||te.call(D)!="[object Object]"||function(j){var se=!1;if(j!=null&&typeof j.toString!="function")try{se=!!(j+"")}catch(Ee){}return se}(D))return!1;var ee=G(D);if(ee===null)return!0;var K=Q.call(ee,"constructor")&&ee.constructor;return typeof K=="function"&&K instanceof K&&q.call(K)==Z},x=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{};(function(D){var ee={exports:{}};D(ee,ee.exports)})(function(D,ee){var K="__lodash_hash_undefined__",j=9007199254740991,se="[object Arguments]",Ee="[object Boolean]",$e="[object Date]",je="[object Function]",We="[object GeneratorFunction]",Ne="[object Map]",V="[object Number]",ze="[object Object]",kr="[object Promise]",lr="[object RegExp]",_e="[object Set]",A="[object String]",Je="[object Symbol]",he="[object WeakMap]",tr="[object ArrayBuffer]",Ue="[object DataView]",Pe="[object Float32Array]",He="[object Float64Array]",Fe="[object Int8Array]",Me="[object Int16Array]",ir="[object Int32Array]",fr="[object Uint8Array]",Br="[object Uint8ClampedArray]",Jr="[object Uint16Array]",Mr="[object Uint32Array]",ft=/\w*$/,ut=/^\[object .+?Constructor\]$/,zr=/^(?:0|[1-9]\d*)$/,ur={};ur[se]=ur["[object Array]"]=ur[tr]=ur[Ue]=ur[Ee]=ur[$e]=ur[Pe]=ur[He]=ur[Fe]=ur[Me]=ur[ir]=ur[Ne]=ur[V]=ur[ze]=ur[lr]=ur[_e]=ur[A]=ur[Je]=ur[fr]=ur[Br]=ur[Jr]=ur[Mr]=!0,ur["[object Error]"]=ur[je]=ur[he]=!1;var wt=typeof self=="object"&&self&&self.Object===Object&&self,Ar=typeof x=="object"&&x&&x.Object===Object&&x||wt||Function("return this")(),ct=ee&&!ee.nodeType&&ee,pt=ct&&D&&!D.nodeType&&D,Yr=pt&&pt.exports===ct;function Gr(B,N){return B.set(N[0],N[1]),B}function nt(B,N){return B.add(N),B}function Rr(B,N,ne,ke){var cr=-1,Cr=B?B.length:0;for(ke&&Cr&&(ne=B[++cr]);++cr<Cr;)ne=N(ne,B[cr],cr,B);return ne}function Zr(B){var N=!1;if(B!=null&&typeof B.toString!="function")try{N=!!(B+"")}catch(ne){}return N}function ot(B){var N=-1,ne=Array(B.size);return B.forEach(function(ke,cr){ne[++N]=[cr,ke]}),ne}function dt(B,N){return function(ne){return B(N(ne))}}function ht(B){var N=-1,ne=Array(B.size);return B.forEach(function(ke){ne[++N]=ke}),ne}var bt,qt=Array.prototype,yt=Function.prototype,Wr=Object.prototype,Kr=Ar["__core-js_shared__"],Ir=(bt=/[^.]+$/.exec(Kr&&Kr.keys&&Kr.keys.IE_PROTO||""))?"Symbol(src)_1."+bt:"",xr=yt.toString,wr=Wr.hasOwnProperty,Fr=Wr.toString,mt=RegExp("^"+xr.call(wr).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),st=Yr?Ar.Buffer:void 0,Qr=Ar.Symbol,rt=Ar.Uint8Array,_r=dt(Object.getPrototypeOf,Object),w=Object.create,s=Wr.propertyIsEnumerable,L=qt.splice,R=Object.getOwnPropertySymbols,re=st?st.isBuffer:void 0,le=dt(Object.keys,Object),De=Ie(Ar,"DataView"),ie=Ie(Ar,"Map"),ge=Ie(Ar,"Promise"),ae=Ie(Ar,"Set"),m=Ie(Ar,"WeakMap"),Re=Ie(Object,"create"),or=Oe(De),be=Oe(ie),Ye=Oe(ge),sr=Oe(ae),k=Oe(m),Y=Qr?Qr.prototype:void 0,fe=Y?Y.valueOf:void 0;function Se(B){var N=-1,ne=B?B.length:0;for(this.clear();++N<ne;){var ke=B[N];this.set(ke[0],ke[1])}}function nr(B){var N=-1,ne=B?B.length:0;for(this.clear();++N<ne;){var ke=B[N];this.set(ke[0],ke[1])}}function Xe(B){var N=-1,ne=B?B.length:0;for(this.clear();++N<ne;){var ke=B[N];this.set(ke[0],ke[1])}}function ar(B){this.__data__=new nr(B)}function mr(B,N){var ne=hr(B)||function(br){return function(Ve){return function(vr){return!!vr&&typeof vr=="object"}(Ve)&&Be(Ve)}(br)&&wr.call(br,"callee")&&(!s.call(br,"callee")||Fr.call(br)==se)}(B)?function(br,Ve){for(var vr=-1,Pr=Array(br);++vr<br;)Pr[vr]=Ve(vr);return Pr}(B.length,String):[],ke=ne.length,cr=!!ke;for(var Cr in B)!N&&!wr.call(B,Cr)||cr&&(Cr=="length"||J(Cr,ke))||ne.push(Cr);return ne}function Ae(B,N,ne){var ke=B[N];wr.call(B,N)&&Ke(ke,ne)&&(ne!==void 0||N in B)||(B[N]=ne)}function Dr(B,N){for(var ne=B.length;ne--;)if(Ke(B[ne][0],N))return ne;return-1}function T(B,N,ne,ke,cr,Cr,br){var Ve;if(ke&&(Ve=Cr?ke(B,cr,Cr,br):ke(B)),Ve!==void 0)return Ve;if(!Tr(B))return B;var vr=hr(B);if(vr){if(Ve=function(Qe){var gr=Qe.length,Lr=Qe.constructor(gr);return gr&&typeof Qe[0]=="string"&&wr.call(Qe,"index")&&(Lr.index=Qe.index,Lr.input=Qe.input),Lr}(B),!N)return function(Qe,gr){var Lr=-1,gt=Qe.length;for(gr||(gr=Array(gt));++Lr<gt;)gr[Lr]=Qe[Lr];return gr}(B,Ve)}else{var Pr=C(B),Pt=Pr==je||Pr==We;if(rr(B))return function(Qe,gr){if(gr)return Qe.slice();var Lr=new Qe.constructor(Qe.length);return Qe.copy(Lr),Lr}(B,N);if(Pr==ze||Pr==se||Pt&&!Cr){if(Zr(B))return Cr?B:{};if(Ve=function(Qe){return typeof Qe.constructor!="function"||me(Qe)?{}:(gr=_r(Qe),Tr(gr)?w(gr):{});var gr}(Pt?{}:B),!N)return function(Qe,gr){return ce(Qe,p(Qe),gr)}(B,function(Qe,gr){return Qe&&ce(gr,Xr(gr),Qe)}(Ve,B))}else{if(!ur[Pr])return Cr?B:{};Ve=function(Qe,gr,Lr,gt){var kt=Qe.constructor;switch(gr){case tr:return qe(Qe);case Ee:case $e:return new kt(+Qe);case Ue:return function(qr,Hr){var tt=Hr?qe(qr.buffer):qr.buffer;return new qr.constructor(tt,qr.byteOffset,qr.byteLength)}(Qe,gt);case Pe:case He:case Fe:case Me:case ir:case fr:case Br:case Jr:case Mr:return function(qr,Hr){var tt=Hr?qe(qr.buffer):qr.buffer;return new qr.constructor(tt,qr.byteOffset,qr.length)}(Qe,gt);case Ne:return function(qr,Hr,tt){return Rr(Hr?tt(ot(qr),!0):ot(qr),Gr,new qr.constructor)}(Qe,gt,Lr);case V:case A:return new kt(Qe);case lr:return function(qr){var Hr=new qr.constructor(qr.source,ft.exec(qr));return Hr.lastIndex=qr.lastIndex,Hr}(Qe);case _e:return function(qr,Hr,tt){return Rr(Hr?tt(ht(qr),!0):ht(qr),nt,new qr.constructor)}(Qe,gt,Lr);case Je:return Ct=Qe,fe?Object(fe.call(Ct)):{}}var Ct}(B,Pr,T,N)}}br||(br=new ar);var Gt=br.get(B);if(Gt)return Gt;if(br.set(B,Ve),!vr)var Wt=ne?function(Qe){return function(gr,Lr,gt){var kt=Lr(gr);return hr(gr)?kt:function(Ct,qr){for(var Hr=-1,tt=qr.length,Jt=Ct.length;++Hr<tt;)Ct[Jt+Hr]=qr[Hr];return Ct}(kt,gt(gr))}(Qe,Xr,p)}(B):Xr(B);return function(Qe,gr){for(var Lr=-1,gt=Qe?Qe.length:0;++Lr<gt&&gr(Qe[Lr],Lr,Qe)!==!1;);}(Wt||B,function(Qe,gr){Wt&&(Qe=B[gr=Qe]),Ae(Ve,gr,T(Qe,N,ne,ke,gr,B,br))}),Ve}function _(B){return!(!Tr(B)||function(N){return!!Ir&&Ir in N}(B))&&(dr(B)||Zr(B)?mt:ut).test(Oe(B))}function qe(B){var N=new B.constructor(B.byteLength);return new rt(N).set(new rt(B)),N}function ce(B,N,ne,ke){ne||(ne={});for(var cr=-1,Cr=N.length;++cr<Cr;){var br=N[cr],Ve=ke?ke(ne[br],B[br],br,ne,B):void 0;Ae(ne,br,Ve===void 0?B[br]:Ve)}return ne}function d(B,N){var ne,ke,cr=B.__data__;return((ke=typeof(ne=N))=="string"||ke=="number"||ke=="symbol"||ke=="boolean"?ne!=="__proto__":ne===null)?cr[typeof N=="string"?"string":"hash"]:cr.map}function Ie(B,N){var ne=function(ke,cr){return ke==null?void 0:ke[cr]}(B,N);return _(ne)?ne:void 0}Se.prototype.clear=function(){this.__data__=Re?Re(null):{}},Se.prototype.delete=function(B){return this.has(B)&&delete this.__data__[B]},Se.prototype.get=function(B){var N=this.__data__;if(Re){var ne=N[B];return ne===K?void 0:ne}return wr.call(N,B)?N[B]:void 0},Se.prototype.has=function(B){var N=this.__data__;return Re?N[B]!==void 0:wr.call(N,B)},Se.prototype.set=function(B,N){return this.__data__[B]=Re&&N===void 0?K:N,this},nr.prototype.clear=function(){this.__data__=[]},nr.prototype.delete=function(B){var N=this.__data__,ne=Dr(N,B);return!(ne<0)&&(ne==N.length-1?N.pop():L.call(N,ne,1),!0)},nr.prototype.get=function(B){var N=this.__data__,ne=Dr(N,B);return ne<0?void 0:N[ne][1]},nr.prototype.has=function(B){return Dr(this.__data__,B)>-1},nr.prototype.set=function(B,N){var ne=this.__data__,ke=Dr(ne,B);return ke<0?ne.push([B,N]):ne[ke][1]=N,this},Xe.prototype.clear=function(){this.__data__={hash:new Se,map:new(ie||nr),string:new Se}},Xe.prototype.delete=function(B){return d(this,B).delete(B)},Xe.prototype.get=function(B){return d(this,B).get(B)},Xe.prototype.has=function(B){return d(this,B).has(B)},Xe.prototype.set=function(B,N){return d(this,B).set(B,N),this},ar.prototype.clear=function(){this.__data__=new nr},ar.prototype.delete=function(B){return this.__data__.delete(B)},ar.prototype.get=function(B){return this.__data__.get(B)},ar.prototype.has=function(B){return this.__data__.has(B)},ar.prototype.set=function(B,N){var ne=this.__data__;if(ne instanceof nr){var ke=ne.__data__;if(!ie||ke.length<199)return ke.push([B,N]),this;ne=this.__data__=new Xe(ke)}return ne.set(B,N),this};var p=R?dt(R,Object):function(){return[]},C=function(B){return Fr.call(B)};function J(B,N){return!!(N=N==null?j:N)&&(typeof B=="number"||zr.test(B))&&B>-1&&B%1==0&&B<N}function me(B){var N=B&&B.constructor;return B===(typeof N=="function"&&N.prototype||Wr)}function Oe(B){if(B!=null){try{return xr.call(B)}catch(N){}try{return B+""}catch(N){}}return""}function Ke(B,N){return B===N||B!=B&&N!=N}(De&&C(new De(new ArrayBuffer(1)))!=Ue||ie&&C(new ie)!=Ne||ge&&C(ge.resolve())!=kr||ae&&C(new ae)!=_e||m&&C(new m)!=he)&&(C=function(B){var N=Fr.call(B),ne=N==ze?B.constructor:void 0,ke=ne?Oe(ne):void 0;if(ke)switch(ke){case or:return Ue;case be:return Ne;case Ye:return kr;case sr:return _e;case k:return he}return N});var hr=Array.isArray;function Be(B){return B!=null&&function(N){return typeof N=="number"&&N>-1&&N%1==0&&N<=j}(B.length)&&!dr(B)}var rr=re||function(){return!1};function dr(B){var N=Tr(B)?Fr.call(B):"";return N==je||N==We}function Tr(B){var N=typeof B;return!!B&&(N=="object"||N=="function")}function Xr(B){return Be(B)?mr(B):function(N){if(!me(N))return le(N);var ne=[];for(var ke in Object(N))wr.call(N,ke)&&ke!="constructor"&&ne.push(ke);return ne}(B)}D.exports=function(B){return T(B,!0,!0)}});let X="\xA0";function we(D){let ee={value:D,hungry:!1,optional:!1};return(ee.value.endsWith("?*")||ee.value.endsWith("*?"))&&ee.value.length>2?(ee.value=ee.value.slice(0,ee.value.length-2),ee.optional=!0,ee.hungry=!0):ee.value.endsWith("?")&&ee.value.length>1?(ee.value=ee.value.slice(0,~-ee.value.length),ee.optional=!0):ee.value.endsWith("*")&&ee.value.length>1&&(ee.value=ee.value.slice(0,~-ee.value.length),ee.hungry=!0),ee}function E(D,ee=0){return function({str:K,idx:j=0,stopAtNewlines:se=!1,stopAtRawNbsp:Ee=!1}){if(typeof K!="string"||!K.length||(j&&typeof j=="number"||(j=0),!K[j+1]))return null;if(K[j+1]&&(K[j+1].trim()||se&&`
\r`.includes(K[j+1])||Ee&&K[j+1]===X))return j+1;if(K[j+2]&&(K[j+2].trim()||se&&`
\r`.includes(K[j+2])||Ee&&K[j+2]===X))return j+2;for(let $e=j+1,je=K.length;$e<je;$e++)if(K[$e].trim()||se&&`
\r`.includes(K[$e])||Ee&&K[$e]===X)return $e;return null}({str:D,idx:ee,stopAtNewlines:!1,stopAtRawNbsp:!1})}function Ge(D,ee=0){return function({str:K,idx:j,stopAtNewlines:se,stopAtRawNbsp:Ee}){if(typeof K!="string"||!K.length||(j&&typeof j=="number"||(j=0),j<1))return null;if(K[~-j]&&(K[~-j].trim()||se&&`
\r`.includes(K[~-j])||Ee&&K[~-j]===X))return~-j;if(K[j-2]&&(K[j-2].trim()||se&&`
\r`.includes(K[j-2])||Ee&&K[j-2]===X))return j-2;for(let $e=j;$e--;)if(K[$e]&&(K[$e].trim()||se&&`
\r`.includes(K[$e])||Ee&&K[$e]===X))return $e;return null}({str:D,idx:ee,stopAtNewlines:!1,stopAtRawNbsp:!1})}function f(D,ee,K,j,se){if(typeof ee!="string"||!ee.length||(typeof K!="number"&&(K=0),D==="right"&&!ee[K+1]||D==="left"&&!ee[~-K]))return null;let Ee=K,$e=[],je,We,Ne,V=0;for(;V<se.length;){if(typeof se[V]!="string"||!se[V].length){V+=1;continue}let{value:ze,optional:kr,hungry:lr}=we(se[V]),_e=D==="right"?E(ee,Ee):Ge(ee,Ee);if(!(j.i&&ee[_e].toLowerCase()===ze.toLowerCase()||!j.i&&ee[_e]===ze)){if(kr){V+=1;continue}if(Ne){V+=1,Ne=void 0;continue}return null}{let A=D==="right"?E(ee,_e):Ge(ee,_e);lr&&(j.i&&ee[A].toLowerCase()===ze.toLowerCase()||!j.i&&ee[A]===ze)?Ne=!0:V+=1,typeof _e=="number"&&D==="right"&&_e>Ee+1?$e.push([Ee+1,_e]):D==="left"&&typeof _e=="number"&&_e<~-Ee&&$e.unshift([_e+1,Ee]),Ee=_e,D==="right"?(je===void 0&&(je=_e),We=_e):(We===void 0&&(We=_e),je=_e)}}return je===void 0||We===void 0?null:{gaps:$e,leftmostChar:je,rightmostChar:We}}let W={i:!1};function I(D,ee,...K){if(!K||!K.length)throw new Error("string-left-right/leftSeq(): only two input arguments were passed! Did you intend to use left() method instead?");let j;return j=S(K[0])?ye(ye({},W),K.shift()):W,f("left",D,ee,j,Array.from(K).reverse())}function $(D,ee,...K){if(!K||!K.length)throw new Error("string-left-right/rightSeq(): only two input arguments were passed! Did you intend to use right() method instead?");let j;return j=S(K[0])?ye(ye({},W),K.shift()):W,f("right",D,ee,j,K)}function H(D){return D&&typeof D=="object"&&!Array.isArray(D)}function z(D){return ue(D)&&D.length===1&&(D.charCodeAt(0)>96&&D.charCodeAt(0)<123||D.charCodeAt(0)>47&&D.charCodeAt(0)<58||D.charCodeAt(0)>64&&D.charCodeAt(0)<91||D.charCodeAt(0)===35)}function xe(D){return ue(D)&&D.charCodeAt(0)>47&&D.charCodeAt(0)<58}function ue(D){return typeof D=="string"}function ve(D){return typeof D=="string"&&(D.charCodeAt(0)>96&&D.charCodeAt(0)<123||D.charCodeAt(0)>64&&D.charCodeAt(0)<91)}function oe(D,ee,K){let j=0,se=0,Ee=0,$e=0,je=0,We="",Ne="";for(let ze=ee;ze<K;ze++)D[ze].trim().length?Ne+=D[ze]:je+=1,ve(D[ze])?j+=1:xe(D[ze])?(se+=1,We+=String(D[ze])):D[ze]==="#"?$e+=1:Ee+=1;let V=!1;return!j&&se>Ee?V="deci":(se||j)&&(Ne[0]==="#"&&Ne[1].toLowerCase()==="x"&&(xe(Ne[2])||ve(Ne[2]))||Ne[0].toLowerCase()==="x"&&se&&!Ee)&&(V="hexi"),{probablyNumeric:V,lettersCount:j,numbersCount:se,numbersValue:We,hashesCount:$e,othersCount:Ee,charTrimmed:Ne,whitespaceCount:je}}function Ce(D){return Array.isArray(D)&&D.length?D.length===1?D[0]:D.reduce((ee,K)=>K.tempEnt.length>ee.tempEnt.length?K:ee):D}function Te(D,ee){if(arguments.length!==2)throw new Error("removeGappedFromMixedCases(): wrong amount of inputs!");let K;return Array.isArray(ee)&&ee.length&&(K=Array.from(ee),K.length>1&&K.some(j=>D[E(D,j.tempRes.rightmostChar)]===";")&&K.some(j=>D[E(D,j.tempRes.rightmostChar)]!==";")&&(K=K.filter(j=>D[E(D,j.tempRes.rightmostChar)]===";")),!K.every(j=>!(j&&j.tempRes&&j.tempRes.gaps&&Array.isArray(j.tempRes.gaps)&&j.tempRes.gaps.length))&&!K.every(j=>j&&j.tempRes&&j.tempRes.gaps&&Array.isArray(j.tempRes.gaps)&&j.tempRes.gaps.length))?Ce(K.filter(j=>!j.tempRes.gaps||!Array.isArray(j.tempRes.gaps)||!j.tempRes.gaps.length)):Ce(ee)}e.fixEnt=function(D,ee){if(typeof D!="string")throw new Error(`string-fix-broken-named-entities: [THROW_ID_01] the first input argument must be string! It was given as:
${JSON.stringify(D,null,4)} (${typeof D}-type)`);let K={decode:!1,cb:({rangeFrom:A,rangeTo:Je,rangeValEncoded:he,rangeValDecoded:tr})=>tr||he?[A,Je,H(ee)&&ee.decode?tr:he]:[A,Je],textAmpersandCatcherCb:null,progressFn:null,entityCatcherCb:null};if(ee&&!H(ee))throw new Error(`string-fix-broken-named-entities: [THROW_ID_02] the second input argument must be a plain object! I was given as:
${JSON.stringify(ee,null,4)} (${typeof ee}-type)`);let j=ye(ye({},K),ee);if(j.cb&&typeof j.cb!="function")throw new TypeError(`string-fix-broken-named-entities: [THROW_ID_03] opts.cb must be a function (or falsey)! Currently it's: ${typeof j.cb}, equal to: ${JSON.stringify(j.cb,null,4)}`);if(j.entityCatcherCb&&typeof j.entityCatcherCb!="function")throw new TypeError(`string-fix-broken-named-entities: [THROW_ID_04] opts.entityCatcherCb must be a function (or falsey)! Currently it's: ${typeof j.entityCatcherCb}, equal to: ${JSON.stringify(j.entityCatcherCb,null,4)}`);if(j.progressFn&&typeof j.progressFn!="function")throw new TypeError(`string-fix-broken-named-entities: [THROW_ID_05] opts.progressFn must be a function (or falsey)! Currently it's: ${typeof j.progressFn}, equal to: ${JSON.stringify(j.progressFn,null,4)}`);if(j.textAmpersandCatcherCb&&typeof j.textAmpersandCatcherCb!="function")throw new TypeError(`string-fix-broken-named-entities: [THROW_ID_06] opts.textAmpersandCatcherCb must be a function (or falsey)! Currently it's: ${typeof j.textAmpersandCatcherCb}, equal to: ${JSON.stringify(j.textAmpersandCatcherCb,null,4)}`);let se=[],Ee,$e,je=D.length+1,We=0,Ne=null,V=null,ze=null,kr=[];function lr(A,Je){if(typeof j.textAmpersandCatcherCb=="function"&&kr.length)for(;kr.length;){let he=kr.shift();(A===void 0||he<A||he===Je)&&j.textAmpersandCatcherCb(he)}}for(let A=0;A<=je;A++){if(j.progressFn&&(Ee=Math.floor(We/je*100),Ee!==$e&&($e=Ee,j.progressFn(Ee))),Ne){if(!(typeof Ne=="number"&&A>=Ne)){We+=1;continue}Ne=null}if(V!==null&&A-V>50&&(V=null),V!==null&&(!D[A]||D[A].trim().length&&!z(D[A]))){if(A>V+1){let Je=D.slice(V,A),he=Ge(D,V),tr=he?Ge(D,he):null;if(D[he]!=="&"||D[A]&&D[A]===";"){if(D[he]!=="&"&&D[tr]!=="&"&&D[A]===";"){let Ue=Ge(D,A),Pe=Ge(D,Ue);if(Pe!==null&&Object.prototype.hasOwnProperty.call(n,D[Ue])&&Object.prototype.hasOwnProperty.call(n[D[Ue]],D[Pe])){let He,Fe="",Me=n[D[Ue]][D[Pe]].reduce((ir,fr)=>(He=I(D,A,...fr.split("")),!He||fr==="block"&&D[Ge(D,V)]===":"?ir:ir.concat([{tempEnt:fr,tempRes:He}])),[]);if(Me=Te(D,Me),Me&&({tempEnt:Fe,tempRes:He}=Me),Fe&&(!Object.keys(P).includes(Fe)||P[Fe].addAmpIfSemiPresent===!0||P[Fe].addAmpIfSemiPresent&&(!He.leftmostChar||ue(D[He.leftmostChar-1])&&!D[He.leftmostChar-1].trim().length))){let ir=t(`&${Fe};`);se.push({ruleName:`bad-html-entity-malformed-${Fe}`,entityName:Fe,rangeFrom:He.leftmostChar,rangeTo:A+1,rangeValEncoded:`&${Fe};`,rangeValDecoded:ir}),lr(He.leftmostChar,A)}}else ze!==null&&(se.push({ruleName:"bad-html-entity-malformed-numeric",entityName:null,rangeFrom:ze,rangeTo:A+1,rangeValEncoded:null,rangeValDecoded:null}),lr(ze,A),ze=null)}else if(D[A]===";"&&(D[he]==="&"||D[he]===";"&&D[tr]==="&")){if(D[V-1].trim(),D.slice(he+1,A).trim().length>1){let Ue=oe(D,he+1,A);if(Ue.probablyNumeric){if(Ue.probablyNumeric&&Ue.charTrimmed[0]==="#"&&!Ue.whitespaceCount&&(!Ue.lettersCount&&Ue.numbersCount>0&&!Ue.othersCount||(Ue.numbersCount||Ue.lettersCount)&&Ue.charTrimmed[1]==="x"&&!Ue.othersCount)){let Pe=String.fromCharCode(parseInt(Ue.charTrimmed.slice(Ue.probablyNumeric==="deci"?1:2),Ue.probablyNumeric==="deci"?10:16));Ue.probablyNumeric==="deci"&&parseInt(Ue.numbersValue,10)>918015?se.push({ruleName:"bad-html-entity-malformed-numeric",entityName:null,rangeFrom:he||0,rangeTo:A+1,rangeValEncoded:null,rangeValDecoded:null}):j.decode&&se.push({ruleName:"bad-html-entity-encoded-numeric",entityName:Ue.charTrimmed,rangeFrom:he||0,rangeTo:A+1,rangeValEncoded:`&${Ue.charTrimmed};`,rangeValDecoded:Pe}),lr(he||0,A)}else se.push({ruleName:"bad-html-entity-malformed-numeric",entityName:null,rangeFrom:he||0,rangeTo:A+1,rangeValEncoded:null,rangeValDecoded:null}),lr(he||0,A);j.entityCatcherCb&&j.entityCatcherCb(he,A+1)}else{let Pe=Array.from(Je).filter(Me=>Me.trim().length).join("");if(Pe.length<=31&&i.has(Pe.toLowerCase())){if(typeof Pe!="string"||u.has(Pe))if(A-he-1!==Pe.length||D[he]!=="&"){let Me=D[he]==="&"?he:tr;if(Object.keys(P).includes(Pe)&&!D[Me+1].trim().length){V=null;continue}se.push({ruleName:`bad-html-entity-malformed-${Pe}`,entityName:Pe,rangeFrom:Me,rangeTo:A+1,rangeValEncoded:`&${Pe};`,rangeValDecoded:t(`&${Pe};`)}),lr(Me,A)}else j.decode?(se.push({ruleName:`bad-html-entity-encoded-${Pe}`,entityName:Pe,rangeFrom:he,rangeTo:A+1,rangeValEncoded:`&${Pe};`,rangeValDecoded:t(`&${Pe};`)}),lr(he,A)):(j.entityCatcherCb||j.textAmpersandCatcherCb)&&(j.entityCatcherCb&&j.entityCatcherCb(he,A+1),j.textAmpersandCatcherCb&&lr(he,A));else{let Me=[...u].filter(ir=>ir.toLowerCase()===Pe.toLowerCase());Me.length===1?(se.push({ruleName:`bad-html-entity-malformed-${Me[0]}`,entityName:Me[0],rangeFrom:he,rangeTo:A+1,rangeValEncoded:`&${Me[0]};`,rangeValDecoded:t(`&${Me[0]};`)}),lr(he,A)):(se.push({ruleName:"bad-html-entity-unrecognised",entityName:null,rangeFrom:he,rangeTo:A+1,rangeValEncoded:null,rangeValDecoded:null}),lr(he,A))}V=null;continue}V&&E(D,V);let He,Fe="";if(Object.prototype.hasOwnProperty.call(c,Ue.charTrimmed.toLowerCase())){Fe=Ue.charTrimmed;let Me=t(`&${c[Ue.charTrimmed.toLowerCase()]};`);se.push({ruleName:`bad-html-entity-malformed-${c[Ue.charTrimmed.toLowerCase()]}`,entityName:c[Ue.charTrimmed.toLowerCase()],rangeFrom:he,rangeTo:A+1,rangeValEncoded:`&${c[Ue.charTrimmed.toLowerCase()]};`,rangeValDecoded:Me}),lr(he,A)}else if(Je.length<33&&((He=[...u].filter(Me=>g(Me,Je)===1))&&He.length||(He=[...u].filter(Me=>g(Me,Je)===2&&Je.length>3))&&He.length)){if(He.length===1)[Fe]=He,se.push({ruleName:`bad-html-entity-malformed-${Fe}`,entityName:Fe,rangeFrom:he,rangeTo:A+1,rangeValEncoded:`&${Fe};`,rangeValDecoded:t(`&${Fe};`)}),lr(he,A);else if(He){let Me=He.map(fr=>{let Br=D.split("");return fr.split("").reduce((Jr,Mr)=>Br.includes(Mr)?(Br.splice(Br.indexOf(Mr),1),Jr+1):Jr,0)}),ir=Math.max(...Me);if(ir&&Me.filter(fr=>fr===ir).length===1){for(let fr=0,Br=Me.length;fr<Br;fr++)if(Me[fr]===ir){Fe=He[fr],se.push({ruleName:`bad-html-entity-malformed-${Fe}`,entityName:Fe,rangeFrom:he,rangeTo:A+1,rangeValEncoded:`&${Fe};`,rangeValDecoded:t(`&${Fe};`)}),lr(he,A);break}}}}Fe||(se.push({ruleName:"bad-html-entity-unrecognised",entityName:null,rangeFrom:he,rangeTo:A+1,rangeValEncoded:null,rangeValDecoded:null}),lr(he,A))}}}else if(D[tr]==="&"&&D[A]===";"&&A-tr<31){let Ue=oe(D,tr+1,A);se.push({ruleName:""+(Ue.probablyNumeric?"bad-html-entity-malformed-numeric":"bad-html-entity-unrecognised"),entityName:null,rangeFrom:tr,rangeTo:A+1,rangeValEncoded:null,rangeValDecoded:null}),lr(tr,A)}}else{let Ue=V,Pe=V?E(D,V):null;if(Object.prototype.hasOwnProperty.call(b,D[Ue])&&Object.prototype.hasOwnProperty.call(b[D[Ue]],D[Pe])){let He,Fe="",Me=b[D[Ue]][D[Pe]].reduce((ir,fr)=>(He=$(D,V-1,...fr.split("")),He?ir.concat([{tempEnt:fr,tempRes:He}]):ir),[]);if(Me=Te(D,Me),Me&&({tempEnt:Fe,tempRes:He}=Me),Fe&&(!Object.keys(P).includes(Fe)||!D[He.rightmostChar+1]||["&"].includes(D[He.rightmostChar+1])||(P[Fe].addSemiIfAmpPresent===!0||P[Fe].addSemiIfAmpPresent&&(!D[He.rightmostChar+1]||!D[He.rightmostChar+1].trim().length))&&D[He.leftmostChar-1]==="&")){let ir=t(`&${Fe};`);se.push({ruleName:`bad-html-entity-malformed-${Fe}`,entityName:Fe,rangeFrom:he||0,rangeTo:He.rightmostChar+1,rangeValEncoded:`&${Fe};`,rangeValDecoded:ir}),lr(he||0,A)}}}}V=null}if(V===null&&z(D[A])&&D[A+1]&&(V=A),D[A]==="a"){let Je=$(D,A,"m","p",";");if(Je){let he=Je.rightmostChar+1,tr=$(D,Je.rightmostChar,"a","m","p",";");if(tr){let Fe;he=tr.rightmostChar+1;do Fe=$(D,he-1,"a","m","p",";"),Fe&&(he=Fe.rightmostChar+1);while(Fe)}let Ue=E(D,he-1),Pe=Ue?E(D,Ue):null,He="";if(Pe&&Object.prototype.hasOwnProperty.call(b,D[Ue])&&Object.prototype.hasOwnProperty.call(b[D[Ue]],D[Pe])&&b[D[Ue]][D[Pe]].some(Fe=>{if($(D,he-1,...Fe.split("")))return He=Fe,!0})){Ne=Ue+He.length+1;let Fe=Ge(D,A)||0;if(D[Fe]==="&")se.push({ruleName:"bad-html-entity-multiple-encoding",entityName:He,rangeFrom:Fe,rangeTo:Ne,rangeValEncoded:`&${He};`,rangeValDecoded:t(`&${He};`)}),lr(Fe,A);else if(Fe){let Me=A,ir="";typeof j.cb=="function"&&(se.push({ruleName:"bad-html-entity-multiple-encoding",entityName:He,rangeFrom:Me,rangeTo:Ne,rangeValEncoded:`${ir}&${He};`,rangeValDecoded:`${ir}${t(`&${He};`)}`}),lr(Me,A))}}}}D[A]!=="#"||!E(D,A)||D[E(D,A)].toLowerCase()!=="x"||D[A-1]&&Ge(D,A)&&D[Ge(D,A)]==="&"||xe(D[E(D,E(D,A))])&&(ze=A),D[A]==="&"&&kr.push(A),!D[A]&&typeof j.textAmpersandCatcherCb=="function"&&kr.length&&lr(),We+=1}if(!se.length)return[];let _e=se.filter((A,Je)=>se.every((he,tr)=>Je===tr||!(A.rangeFrom>=he.rangeFrom&&A.rangeTo<he.rangeTo)));return typeof j.cb=="function"?_e.map(j.cb):_e},e.version="5.2.2",Object.defineProperty(e,"__esModule",{value:!0})})});var rn=et((aa,en)=>{(function(e,y){typeof aa=="object"&&typeof en!="undefined"?y(aa):typeof define=="function"&&define.amd?define(["exports"],y):y((e=typeof globalThis!="undefined"?globalThis:e||self).stringRemoveWidows={})})(aa,function(e){"use strict";function y(f){return f&&typeof f=="object"&&!Array.isArray(f)}function h(f){return typeof f=="string"}let a={cb:void 0,i:!1,trimBeforeMatching:!1,trimCharsBeforeMatching:[],maxMismatches:0,firstMustMatch:!1,lastMustMatch:!1,hungry:!1},g=f=>f+1;function pe(f,W,I,$,H=!1,z=g){let xe=typeof I=="function"?I():I;if(+W<0&&H&&xe==="EOL")return xe;let ue=ye(ye({},a),$);if(W>=f.length&&!H)return!1;let ve=H?1:I.length,oe=0,Ce=!1,Te=!1,D=!1,ee=ue.maxMismatches,K=W,j=!1,se=!1,Ee=!1;function $e(){return oe===1&&ee<ue.maxMismatches-1}for(;f[K];){let je=z(K);if(ue.trimBeforeMatching&&f[K].trim()===""){if(!f[je]&&H&&I==="EOL")return!0;K=z(K);continue}if(ue&&!ue.i&&ue.trimCharsBeforeMatching&&ue.trimCharsBeforeMatching.includes(f[K])||ue&&ue.i&&ue.trimCharsBeforeMatching&&ue.trimCharsBeforeMatching.map(Ne=>Ne.toLowerCase()).includes(f[K].toLowerCase())){if(H&&I==="EOL"&&!f[je])return!0;K=z(K);continue}let We=je>K?I[I.length-ve]:I[ve-1];if(!ue.i&&f[K]===We||ue.i&&f[K].toLowerCase()===We.toLowerCase()){if(j||(j=!0),D||(D=!0),ve===I.length){if(se=!0,ee!==ue.maxMismatches)return!1}else ve===1&&(Ee=!0);if(ve-=1,oe++,$e())return!1;if(!ve)return(oe!==I.length||ee===ue.maxMismatches||!Ce)&&K}else{if(Ce||oe||(Ce=!0),!(ue.maxMismatches&&ee&&K))return!(K!==0||ve!==1||ue.lastMustMatch||!D)&&0;ee-=1;for(let Ne=0;Ne<=ee;Ne++){let V=je>K?I[I.length-ve+1+Ne]:I[ve-2-Ne],ze=f[z(K)];if(V&&(!ue.i&&f[K]===V||ue.i&&f[K].toLowerCase()===V.toLowerCase())&&(!ue.firstMustMatch||ve!==I.length)){if(oe++,$e())return!1;ve-=2,j=!0;break}if(ze&&V&&(!ue.i&&ze===V||ue.i&&ze.toLowerCase()===V.toLowerCase())&&(!ue.firstMustMatch||ve!==I.length)){if(!oe&&!ue.hungry)return!1;ve-=1,j=!0;break}if(V===void 0&&ee>=0&&j&&(!ue.firstMustMatch||se)&&(!ue.lastMustMatch||Ee))return K}j||(Te=K)}if(Te!==!1&&Te!==K&&(Te=!1),ve<1)return K;K=z(K)}return ve>0?!(!H||xe!=="EOL")||!!(ue&&ue.maxMismatches>=ve&&D)&&(Te||0):void 0}function U(f,W,I,$){return function(H,z,xe,ue,ve){if(y(ve)&&Object.prototype.hasOwnProperty.call(ve,"trimBeforeMatching")&&typeof ve.trimBeforeMatching!="boolean")throw new Error(`string-match-left-right/${H}(): [THROW_ID_09] opts.trimBeforeMatching should be boolean!${Array.isArray(ve.trimBeforeMatching)?" Did you mean to use opts.trimCharsBeforeMatching?":""}`);let oe=ye(ye({},a),ve);var Ce;if(typeof oe.trimCharsBeforeMatching=="string"&&(oe.trimCharsBeforeMatching=typeof(Ce=oe.trimCharsBeforeMatching)=="string"?Ce.length?[Ce]:[]:Ce),oe.trimCharsBeforeMatching=oe.trimCharsBeforeMatching.map(j=>h(j)?j:String(j)),!h(z)||!z.length)return!1;if(!Number.isInteger(xe)||xe<0)throw new Error(`string-match-left-right/${H}(): [THROW_ID_03] the second argument should be a natural number. Currently it's of a type: ${typeof xe}, equal to:
${JSON.stringify(xe,null,4)}`);let Te,D;if(h(ue))Te=[ue];else if(Array.isArray(ue))Te=ue;else if(ue){if(typeof ue!="function")throw new Error(`string-match-left-right/${H}(): [THROW_ID_05] the third argument, whatToMatch, is neither string nor array of strings! It's ${typeof ue}, equal to:
${JSON.stringify(ue,null,4)}`);Te=[],Te.push(ue)}else Te=ue;if(ve&&!y(ve))throw new Error(`string-match-left-right/${H}(): [THROW_ID_06] the fourth argument, options object, should be a plain object. Currently it's of a type "${typeof ve}", and equal to:
${JSON.stringify(ve,null,4)}`);let ee=0,K="";if(oe&&oe.trimCharsBeforeMatching&&oe.trimCharsBeforeMatching.some((j,se)=>j.length>1&&(ee=se,K=j,!0)))throw new Error(`string-match-left-right/${H}(): [THROW_ID_07] the fourth argument, options object contains trimCharsBeforeMatching. It was meant to list the single characters but one of the entries at index ${ee} is longer than 1 character, ${K.length} (equals to ${K}). Please split it into separate characters and put into array as separate elements.`);if(!Te||!Array.isArray(Te)||Array.isArray(Te)&&!Te.length||Array.isArray(Te)&&Te.length===1&&h(Te[0])&&!Te[0].trim()){if(typeof oe.cb=="function"){let se,Ee=xe;if(H!=="matchLeftIncl"&&H!=="matchRight"||(Ee+=1),H[5]==="L")for(let Ne=Ee;Ne--;){let V=z[Ne];if((!oe.trimBeforeMatching||oe.trimBeforeMatching&&V!==void 0&&V.trim())&&(!oe.trimCharsBeforeMatching||!oe.trimCharsBeforeMatching.length||V!==void 0&&!oe.trimCharsBeforeMatching.includes(V))){se=Ne;break}}else if(H.startsWith("matchRight"))for(let Ne=Ee;Ne<z.length;Ne++){let V=z[Ne];if((!oe.trimBeforeMatching||oe.trimBeforeMatching&&V.trim())&&(!oe.trimCharsBeforeMatching||!oe.trimCharsBeforeMatching.length||!oe.trimCharsBeforeMatching.includes(V))){se=Ne;break}}if(se===void 0)return!1;let $e=z[se],je=se+1,We="";return je&&je>0&&(We=z.slice(0,je)),H[5]==="L"||se&&se>0&&(We=z.slice(se)),oe.cb($e,We,se)}let j="";throw ve||(j=" More so, the whole options object, the fourth input argument, is missing!"),new Error(`string-match-left-right/${H}(): [THROW_ID_08] the third argument, "whatToMatch", was given as an empty string. This means, you intend to match purely by a callback. The callback was not set though, the opts key "cb" is not set!${j}`)}for(let j=0,se=Te.length;j<se;j++){D=typeof Te[j]=="function";let Ee=Te[j],$e,je,We="",Ne=xe;H==="matchRight"?Ne+=1:H==="matchLeft"&&(Ne-=1);let V=pe(z,Ne,Ee,oe,D,ze=>H[5]==="L"?ze-1:ze+1);if(V&&D&&typeof Ee=="function"&&Ee()==="EOL")return!(!Ee()||oe.cb&&!oe.cb($e,We,je))&&Ee();if(Number.isInteger(V)&&(je=H.startsWith("matchLeft")?V-1:V+1,We=H[5]==="L"?z.slice(0,V):z.slice(je)),je<0&&(je=void 0),z[je]&&($e=z[je]),Number.isInteger(V)&&(!oe.cb||oe.cb($e,We,je)))return Ee}return!1}("matchRightIncl",f,W,I,$)}Function.prototype.toString.call(Object);var l=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{};(function(f){var W={exports:{}};f(W,W.exports)})(function(f,W){var I="__lodash_hash_undefined__",$=9007199254740991,H="[object Arguments]",z="[object Boolean]",xe="[object Date]",ue="[object Function]",ve="[object GeneratorFunction]",oe="[object Map]",Ce="[object Number]",Te="[object Object]",D="[object Promise]",ee="[object RegExp]",K="[object Set]",j="[object String]",se="[object Symbol]",Ee="[object WeakMap]",$e="[object ArrayBuffer]",je="[object DataView]",We="[object Float32Array]",Ne="[object Float64Array]",V="[object Int8Array]",ze="[object Int16Array]",kr="[object Int32Array]",lr="[object Uint8Array]",_e="[object Uint8ClampedArray]",A="[object Uint16Array]",Je="[object Uint32Array]",he=/\w*$/,tr=/^\[object .+?Constructor\]$/,Ue=/^(?:0|[1-9]\d*)$/,Pe={};Pe[H]=Pe["[object Array]"]=Pe[$e]=Pe[je]=Pe[z]=Pe[xe]=Pe[We]=Pe[Ne]=Pe[V]=Pe[ze]=Pe[kr]=Pe[oe]=Pe[Ce]=Pe[Te]=Pe[ee]=Pe[K]=Pe[j]=Pe[se]=Pe[lr]=Pe[_e]=Pe[A]=Pe[Je]=!0,Pe["[object Error]"]=Pe[ue]=Pe[Ee]=!1;var He=typeof self=="object"&&self&&self.Object===Object&&self,Fe=typeof l=="object"&&l&&l.Object===Object&&l||He||Function("return this")(),Me=W&&!W.nodeType&&W,ir=Me&&f&&!f.nodeType&&f,fr=ir&&ir.exports===Me;function Br(p,C){return p.set(C[0],C[1]),p}function Jr(p,C){return p.add(C),p}function Mr(p,C,J,me){var Oe=-1,Ke=p?p.length:0;for(me&&Ke&&(J=p[++Oe]);++Oe<Ke;)J=C(J,p[Oe],Oe,p);return J}function ft(p){var C=!1;if(p!=null&&typeof p.toString!="function")try{C=!!(p+"")}catch(J){}return C}function ut(p){var C=-1,J=Array(p.size);return p.forEach(function(me,Oe){J[++C]=[Oe,me]}),J}function zr(p,C){return function(J){return p(C(J))}}function ur(p){var C=-1,J=Array(p.size);return p.forEach(function(me){J[++C]=me}),J}var wt,Ar=Array.prototype,ct=Function.prototype,pt=Object.prototype,Yr=Fe["__core-js_shared__"],Gr=(wt=/[^.]+$/.exec(Yr&&Yr.keys&&Yr.keys.IE_PROTO||""))?"Symbol(src)_1."+wt:"",nt=ct.toString,Rr=pt.hasOwnProperty,Zr=pt.toString,ot=RegExp("^"+nt.call(Rr).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),dt=fr?Fe.Buffer:void 0,ht=Fe.Symbol,bt=Fe.Uint8Array,qt=zr(Object.getPrototypeOf,Object),yt=Object.create,Wr=pt.propertyIsEnumerable,Kr=Ar.splice,Ir=Object.getOwnPropertySymbols,xr=dt?dt.isBuffer:void 0,wr=zr(Object.keys,Object),Fr=Se(Fe,"DataView"),mt=Se(Fe,"Map"),st=Se(Fe,"Promise"),Qr=Se(Fe,"Set"),rt=Se(Fe,"WeakMap"),_r=Se(Object,"create"),w=Ae(Fr),s=Ae(mt),L=Ae(st),R=Ae(Qr),re=Ae(rt),le=ht?ht.prototype:void 0,De=le?le.valueOf:void 0;function ie(p){var C=-1,J=p?p.length:0;for(this.clear();++C<J;){var me=p[C];this.set(me[0],me[1])}}function ge(p){var C=-1,J=p?p.length:0;for(this.clear();++C<J;){var me=p[C];this.set(me[0],me[1])}}function ae(p){var C=-1,J=p?p.length:0;for(this.clear();++C<J;){var me=p[C];this.set(me[0],me[1])}}function m(p){this.__data__=new ge(p)}function Re(p,C){var J=T(p)||function(hr){return function(Be){return function(rr){return!!rr&&typeof rr=="object"}(Be)&&_(Be)}(hr)&&Rr.call(hr,"callee")&&(!Wr.call(hr,"callee")||Zr.call(hr)==H)}(p)?function(hr,Be){for(var rr=-1,dr=Array(hr);++rr<hr;)dr[rr]=Be(rr);return dr}(p.length,String):[],me=J.length,Oe=!!me;for(var Ke in p)!C&&!Rr.call(p,Ke)||Oe&&(Ke=="length"||ar(Ke,me))||J.push(Ke);return J}function or(p,C,J){var me=p[C];Rr.call(p,C)&&Dr(me,J)&&(J!==void 0||C in p)||(p[C]=J)}function be(p,C){for(var J=p.length;J--;)if(Dr(p[J][0],C))return J;return-1}function Ye(p,C,J,me,Oe,Ke,hr){var Be;if(me&&(Be=Ke?me(p,Oe,Ke,hr):me(p)),Be!==void 0)return Be;if(!d(p))return p;var rr=T(p);if(rr){if(Be=function(N){var ne=N.length,ke=N.constructor(ne);return ne&&typeof N[0]=="string"&&Rr.call(N,"index")&&(ke.index=N.index,ke.input=N.input),ke}(p),!C)return function(N,ne){var ke=-1,cr=N.length;for(ne||(ne=Array(cr));++ke<cr;)ne[ke]=N[ke];return ne}(p,Be)}else{var dr=Xe(p),Tr=dr==ue||dr==ve;if(qe(p))return function(N,ne){if(ne)return N.slice();var ke=new N.constructor(N.length);return N.copy(ke),ke}(p,C);if(dr==Te||dr==H||Tr&&!Ke){if(ft(p))return Ke?p:{};if(Be=function(N){return typeof N.constructor!="function"||mr(N)?{}:(ne=qt(N),d(ne)?yt(ne):{});var ne}(Tr?{}:p),!C)return function(N,ne){return Y(N,nr(N),ne)}(p,function(N,ne){return N&&Y(ne,Ie(ne),N)}(Be,p))}else{if(!Pe[dr])return Ke?p:{};Be=function(N,ne,ke,cr){var Cr=N.constructor;switch(ne){case $e:return k(N);case z:case xe:return new Cr(+N);case je:return function(Ve,vr){var Pr=vr?k(Ve.buffer):Ve.buffer;return new Ve.constructor(Pr,Ve.byteOffset,Ve.byteLength)}(N,cr);case We:case Ne:case V:case ze:case kr:case lr:case _e:case A:case Je:return function(Ve,vr){var Pr=vr?k(Ve.buffer):Ve.buffer;return new Ve.constructor(Pr,Ve.byteOffset,Ve.length)}(N,cr);case oe:return function(Ve,vr,Pr){return Mr(vr?Pr(ut(Ve),!0):ut(Ve),Br,new Ve.constructor)}(N,cr,ke);case Ce:case j:return new Cr(N);case ee:return function(Ve){var vr=new Ve.constructor(Ve.source,he.exec(Ve));return vr.lastIndex=Ve.lastIndex,vr}(N);case K:return function(Ve,vr,Pr){return Mr(vr?Pr(ur(Ve),!0):ur(Ve),Jr,new Ve.constructor)}(N,cr,ke);case se:return br=N,De?Object(De.call(br)):{}}var br}(p,dr,Ye,C)}}hr||(hr=new m);var Xr=hr.get(p);if(Xr)return Xr;if(hr.set(p,Be),!rr)var B=J?function(N){return function(ne,ke,cr){var Cr=ke(ne);return T(ne)?Cr:function(br,Ve){for(var vr=-1,Pr=Ve.length,Pt=br.length;++vr<Pr;)br[Pt+vr]=Ve[vr];return br}(Cr,cr(ne))}(N,Ie,nr)}(p):Ie(p);return function(N,ne){for(var ke=-1,cr=N?N.length:0;++ke<cr&&ne(N[ke],ke,N)!==!1;);}(B||p,function(N,ne){B&&(N=p[ne=N]),or(Be,ne,Ye(N,C,J,me,ne,p,hr))}),Be}function sr(p){return!(!d(p)||(C=p,Gr&&Gr in C))&&(ce(p)||ft(p)?ot:tr).test(Ae(p));var C}function k(p){var C=new p.constructor(p.byteLength);return new bt(C).set(new bt(p)),C}function Y(p,C,J,me){J||(J={});for(var Oe=-1,Ke=C.length;++Oe<Ke;){var hr=C[Oe],Be=me?me(J[hr],p[hr],hr,J,p):void 0;or(J,hr,Be===void 0?p[hr]:Be)}return J}function fe(p,C){var J,me,Oe=p.__data__;return((me=typeof(J=C))=="string"||me=="number"||me=="symbol"||me=="boolean"?J!=="__proto__":J===null)?Oe[typeof C=="string"?"string":"hash"]:Oe.map}function Se(p,C){var J=function(me,Oe){return me==null?void 0:me[Oe]}(p,C);return sr(J)?J:void 0}ie.prototype.clear=function(){this.__data__=_r?_r(null):{}},ie.prototype.delete=function(p){return this.has(p)&&delete this.__data__[p]},ie.prototype.get=function(p){var C=this.__data__;if(_r){var J=C[p];return J===I?void 0:J}return Rr.call(C,p)?C[p]:void 0},ie.prototype.has=function(p){var C=this.__data__;return _r?C[p]!==void 0:Rr.call(C,p)},ie.prototype.set=function(p,C){return this.__data__[p]=_r&&C===void 0?I:C,this},ge.prototype.clear=function(){this.__data__=[]},ge.prototype.delete=function(p){var C=this.__data__,J=be(C,p);return!(J<0)&&(J==C.length-1?C.pop():Kr.call(C,J,1),!0)},ge.prototype.get=function(p){var C=this.__data__,J=be(C,p);return J<0?void 0:C[J][1]},ge.prototype.has=function(p){return be(this.__data__,p)>-1},ge.prototype.set=function(p,C){var J=this.__data__,me=be(J,p);return me<0?J.push([p,C]):J[me][1]=C,this},ae.prototype.clear=function(){this.__data__={hash:new ie,map:new(mt||ge),string:new ie}},ae.prototype.delete=function(p){return fe(this,p).delete(p)},ae.prototype.get=function(p){return fe(this,p).get(p)},ae.prototype.has=function(p){return fe(this,p).has(p)},ae.prototype.set=function(p,C){return fe(this,p).set(p,C),this},m.prototype.clear=function(){this.__data__=new ge},m.prototype.delete=function(p){return this.__data__.delete(p)},m.prototype.get=function(p){return this.__data__.get(p)},m.prototype.has=function(p){return this.__data__.has(p)},m.prototype.set=function(p,C){var J=this.__data__;if(J instanceof ge){var me=J.__data__;if(!mt||me.length<199)return me.push([p,C]),this;J=this.__data__=new ae(me)}return J.set(p,C),this};var nr=Ir?zr(Ir,Object):function(){return[]},Xe=function(p){return Zr.call(p)};function ar(p,C){return!!(C=C==null?$:C)&&(typeof p=="number"||Ue.test(p))&&p>-1&&p%1==0&&p<C}function mr(p){var C=p&&p.constructor;return p===(typeof C=="function"&&C.prototype||pt)}function Ae(p){if(p!=null){try{return nt.call(p)}catch(C){}try{return p+""}catch(C){}}return""}function Dr(p,C){return p===C||p!=p&&C!=C}(Fr&&Xe(new Fr(new ArrayBuffer(1)))!=je||mt&&Xe(new mt)!=oe||st&&Xe(st.resolve())!=D||Qr&&Xe(new Qr)!=K||rt&&Xe(new rt)!=Ee)&&(Xe=function(p){var C=Zr.call(p),J=C==Te?p.constructor:void 0,me=J?Ae(J):void 0;if(me)switch(me){case w:return je;case s:return oe;case L:return D;case R:return K;case re:return Ee}return C});var T=Array.isArray;function _(p){return p!=null&&function(C){return typeof C=="number"&&C>-1&&C%1==0&&C<=$}(p.length)&&!ce(p)}var qe=xr||function(){return!1};function ce(p){var C=d(p)?Zr.call(p):"";return C==ue||C==ve}function d(p){var C=typeof p;return!!p&&(C=="object"||C=="function")}function Ie(p){return _(p)?Re(p):function(C){if(!mr(C))return wr(C);var J=[];for(var me in Object(C))Rr.call(C,me)&&me!="constructor"&&J.push(me);return J}(p)}f.exports=function(p){return Ye(p,!0,!0)}});let r="\xA0";function o(f,W=0){return function({str:I,idx:$=0,stopAtNewlines:H=!1,stopAtRawNbsp:z=!1}){if(typeof I!="string"||!I.length||($&&typeof $=="number"||($=0),!I[$+1]))return null;if(I[$+1]&&(I[$+1].trim()||H&&`
\r`.includes(I[$+1])||z&&I[$+1]===r))return $+1;if(I[$+2]&&(I[$+2].trim()||H&&`
\r`.includes(I[$+2])||z&&I[$+2]===r))return $+2;for(let xe=$+1,ue=I.length;xe<ue;xe++)if(I[xe].trim()||H&&`
\r`.includes(I[xe])||z&&I[xe]===r)return xe;return null}({str:f,idx:W,stopAtNewlines:!1,stopAtRawNbsp:!1})}function c(f,W=0){return function({str:I,idx:$,stopAtNewlines:H,stopAtRawNbsp:z}){if(typeof I!="string"||!I.length||($&&typeof $=="number"||($=0),$<1))return null;if(I[~-$]&&(I[~-$].trim()||H&&`
\r`.includes(I[~-$])||z&&I[~-$]===r))return~-$;if(I[$-2]&&(I[$-2].trim()||H&&`
\r`.includes(I[$-2])||z&&I[$-2]===r))return $-2;for(let xe=$;xe--;)if(I[xe]&&(I[xe].trim()||H&&`
\r`.includes(I[xe])||z&&I[xe]===r))return xe;return null}({str:f,idx:W,stopAtNewlines:!1,stopAtRawNbsp:!1})}function b(f,W=1){function I(H){return Array.from(H).reverse().join("")}function $(H,z,xe){let ue=xe?`
`:"\r",ve=xe?"\r":`
`;if(!H)return H;let oe=0,Ce="";for(let Te=0,D=H.length;Te<D;Te++)(H[Te]===ue||H[Te]===ve&&H[Te-1]!==ue)&&oe++,`\r
`.includes(H[Te])||H[Te]==="\xA0"?H[Te]==="\xA0"?Ce+=H[Te]:H[Te]===ue?oe<=z&&(Ce+=H[Te],H[Te+1]===ve&&(Ce+=H[Te+1],Te++)):H[Te]===ve&&(!H[Te-1]||H[Te-1]!==ue)&&oe<=z&&(Ce+=H[Te]):H[Te+1]||oe||(Ce+=" ");return Ce}if(typeof f=="string"&&f.length){let H=1;typeof+W=="number"&&Number.isInteger(+W)&&+W>=0&&(H=+W);let z="",xe="";if(f.trim()){if(!f[0].trim()){for(let ue=0,ve=f.length;ue<ve;ue++)if(f[ue].trim()){z=f.slice(0,ue);break}}}else z=f;if(f.trim()&&(f.slice(-1).trim()===""||f.slice(-1)==="\xA0")){for(let ue=f.length;ue--;)if(f[ue].trim()){xe=f.slice(ue+1);break}}return`${$(z,H,!1)}${f.trim()}${I($(I(xe),H,!0))}`}return f}let n={strictlyTwoElementsInRangeArrays:!1,progressFn:null};function P(f,W){if(!Array.isArray(f)||!f.length)return f;let I=ye(ye({},n),W),$,H;if(I.strictlyTwoElementsInRangeArrays&&!f.filter(ue=>ue).every((ue,ve)=>ue.length===2||($=ve,H=ue.length,!1)))throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${$}th range (${JSON.stringify(f[$],null,4)}) has not two but ${H} elements!`);if(!f.filter(ue=>ue).every((ue,ve)=>!(!Number.isInteger(ue[0])||ue[0]<0||!Number.isInteger(ue[1])||ue[1]<0)||($=ve,!1)))throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${$}th range (${JSON.stringify(f[$],null,4)}) does not consist of only natural numbers!`);let z=f.filter(ue=>ue).length**2,xe=0;return Array.from(f).filter(ue=>ue).sort((ue,ve)=>(I.progressFn&&(xe+=1,I.progressFn(Math.floor(100*xe/z))),ue[0]===ve[0]?ue[1]<ve[1]?-1:ue[1]>ve[1]?1:0:ue[0]<ve[0]?-1:1))}let u={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};function i(f,W){function I(oe){return oe&&typeof oe=="object"&&!Array.isArray(oe)}if(!Array.isArray(f)||!f.length)return null;let $;if(W){if(!I(W))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:
${JSON.stringify(W,null,4)} (type ${typeof W})`);if($=ye(ye({},u),W),$.progressFn&&I($.progressFn)&&!Object.keys($.progressFn).length)$.progressFn=null;else if($.progressFn&&typeof $.progressFn!="function")throw new Error(`ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "${typeof $.progressFn}", equal to ${JSON.stringify($.progressFn,null,4)}`);if($.mergeType&&+$.mergeType!=1&&+$.mergeType!=2)throw new Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof $.mergeType}", equal to ${JSON.stringify($.mergeType,null,4)}`);if(typeof $.joinRangesThatTouchEdges!="boolean")throw new Error(`ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof $.joinRangesThatTouchEdges}", equal to ${JSON.stringify($.joinRangesThatTouchEdges,null,4)}`)}else $=ye({},u);let H=f.filter(oe=>oe).map(oe=>[...oe]).filter(oe=>oe[2]!==void 0||oe[0]!==oe[1]),z,xe,ue;if(z=$.progressFn?P(H,{progressFn:oe=>{ue=Math.floor(oe/5),ue!==xe&&(xe=ue,$.progressFn(ue))}}):P(H),!z)return null;let ve=z.length-1;for(let oe=ve;oe>0;oe--)$.progressFn&&(ue=Math.floor(78*(1-oe/ve))+21,ue!==xe&&ue>xe&&(xe=ue,$.progressFn(ue))),(z[oe][0]<=z[oe-1][0]||!$.joinRangesThatTouchEdges&&z[oe][0]<z[oe-1][1]||$.joinRangesThatTouchEdges&&z[oe][0]<=z[oe-1][1])&&(z[oe-1][0]=Math.min(z[oe][0],z[oe-1][0]),z[oe-1][1]=Math.max(z[oe][1],z[oe-1][1]),z[oe][2]!==void 0&&(z[oe-1][0]>=z[oe][0]||z[oe-1][1]<=z[oe][1])&&z[oe-1][2]!==null&&(z[oe][2]===null&&z[oe-1][2]!==null?z[oe-1][2]=null:z[oe-1][2]!=null?+$.mergeType==2&&z[oe-1][0]===z[oe][0]?z[oe-1][2]=z[oe][2]:z[oe-1][2]+=z[oe][2]:z[oe-1][2]=z[oe][2]),z.splice(oe,1),oe=z.length);return z.length?z:null}function t(f){return f!=null}function O(f){return Number.isInteger(f)&&f>=0}function v(f){return typeof f=="string"}let M={limitToBeAddedWhitespace:!1,limitLinebreaksCount:1,mergeType:1};class q{constructor(W){let I=ye(ye({},M),W);if(I.mergeType&&I.mergeType!==1&&I.mergeType!==2)if(v(I.mergeType)&&I.mergeType.trim()==="1")I.mergeType=1;else{if(!v(I.mergeType)||I.mergeType.trim()!=="2")throw new Error(`ranges-push: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof I.mergeType}", equal to ${JSON.stringify(I.mergeType,null,4)}`);I.mergeType=2}this.opts=I,this.ranges=[]}add(W,I,$){if(W==null&&I==null)return;if(t(W)&&!t(I)){if(Array.isArray(W)){if(W.length){if(W.some(xe=>Array.isArray(xe)))return void W.forEach(xe=>{Array.isArray(xe)&&this.add(...xe)});W.length&&O(+W[0])&&O(+W[1])&&this.add(...W)}return}throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_12] the first input argument, "from" is set (${JSON.stringify(W,null,0)}) but second-one, "to" is not (${JSON.stringify(I,null,0)})`)}if(!t(W)&&t(I))throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_13] the second input argument, "to" is set (${JSON.stringify(I,null,0)}) but first-one, "from" is not (${JSON.stringify(W,null,0)})`);let H=+W,z=+I;if(O($)&&($=String($)),!O(H)||!O(z))throw O(H)&&H>=0?new TypeError(`ranges-push/Ranges/add(): [THROW_ID_10] "to" value, the second input argument, must be a natural number or zero! Currently it's of a type "${typeof z}" equal to: ${JSON.stringify(z,null,4)}`):new TypeError(`ranges-push/Ranges/add(): [THROW_ID_09] "from" value, the first input argument, must be a natural number or zero! Currently it's of a type "${typeof H}" equal to: ${JSON.stringify(H,null,4)}`);if(t($)&&!v($)&&!O($))throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_08] The third argument, the value to add, was given not as string but ${typeof $}, equal to:
${JSON.stringify($,null,4)}`);if(t(this.ranges)&&Array.isArray(this.last())&&H===this.last()[1]){if(this.last()[1]=z,this.last(),this.last()[2]!==null&&t($)){let xe=!(this.last()[2]&&this.last()[2].length>0)||this.opts&&this.opts.mergeType&&this.opts.mergeType!==1?$:this.last()[2]+$;this.opts.limitToBeAddedWhitespace&&(xe=b(xe,this.opts.limitLinebreaksCount)),v(xe)&&!xe.length||(this.last()[2]=xe)}}else{this.ranges||(this.ranges=[]);let xe=$===void 0||v($)&&!$.length?[H,z]:[H,z,$&&this.opts.limitToBeAddedWhitespace?b($,this.opts.limitLinebreaksCount):$];this.ranges.push(xe)}}push(W,I,$){this.add(W,I,$)}current(){return Array.isArray(this.ranges)&&this.ranges.length?(this.ranges=i(this.ranges,{mergeType:this.opts.mergeType}),this.ranges&&this.opts.limitToBeAddedWhitespace?this.ranges.map(W=>t(W[2])?[W[0],W[1],b(W[2],this.opts.limitLinebreaksCount)]:W):this.ranges):null}wipe(){this.ranges=[]}replace(W){if(Array.isArray(W)&&W.length){if(!Array.isArray(W[0])||!O(W[0][0]))throw new Error(`ranges-push/Ranges/replace(): [THROW_ID_11] Single range was given but we expected array of arrays! The first element, ${JSON.stringify(W[0],null,4)} should be an array and its first element should be an integer, a string index.`);this.ranges=Array.from(W)}else this.ranges=[]}last(){return Array.isArray(this.ranges)&&this.ranges.length?this.ranges[this.ranges.length-1]:null}}function Q(f,W,I){let $,H=0,z=0;if(arguments.length===0)throw new Error("ranges-apply: [THROW_ID_01] inputs missing!");if(typeof f!="string")throw new TypeError(`ranges-apply: [THROW_ID_02] first input argument must be a string! Currently it's: ${typeof f}, equal to: ${JSON.stringify(f,null,4)}`);if(W&&!Array.isArray(W))throw new TypeError(`ranges-apply: [THROW_ID_03] second input argument must be an array (or null)! Currently it's: ${typeof W}, equal to: ${JSON.stringify(W,null,4)}`);if(I&&typeof I!="function")throw new TypeError(`ranges-apply: [THROW_ID_04] the third input argument must be a function (or falsey)! Currently it's: ${typeof I}, equal to: ${JSON.stringify(I,null,4)}`);if(!W||!W.filter(Ce=>Ce).length)return f;$=Array.isArray(W)&&Number.isInteger(W[0])&&Number.isInteger(W[1])?[Array.from(W)]:Array.from(W);let xe=$.length,ue=0;$.filter(Ce=>Ce).forEach((Ce,Te)=>{if(I&&(H=Math.floor(ue/xe*10),H!==z&&(z=H,I(H))),!Array.isArray(Ce))throw new TypeError(`ranges-apply: [THROW_ID_05] ranges array, second input arg., has ${Te}th element not an array: ${JSON.stringify(Ce,null,4)}, which is ${typeof Ce}`);if(!Number.isInteger(Ce[0])){if(!Number.isInteger(+Ce[0])||+Ce[0]<0)throw new TypeError(`ranges-apply: [THROW_ID_06] ranges array, second input arg. has ${Te}th element, array ${JSON.stringify(Ce,null,0)}. Its first element is not an integer, string index, but ${typeof Ce[0]}, equal to: ${JSON.stringify(Ce[0],null,4)}.`);$[Te][0]=+$[Te][0]}if(!Number.isInteger(Ce[1])){if(!Number.isInteger(+Ce[1])||+Ce[1]<0)throw new TypeError(`ranges-apply: [THROW_ID_07] ranges array, second input arg. has ${Te}th element, array ${JSON.stringify(Ce,null,0)}. Its second element is not an integer, string index, but ${typeof Ce[1]}, equal to: ${JSON.stringify(Ce[1],null,4)}.`);$[Te][1]=+$[Te][1]}ue+=1});let ve=i($,{progressFn:Ce=>{I&&(H=10+Math.floor(Ce/10),H!==z&&(z=H,I(H)))}}),oe=Array.isArray(ve)?ve.length:0;if(oe>0){let Ce=f.slice(ve[oe-1][1]);f=ve.reduce((Te,D,ee,K)=>(I&&(H=20+Math.floor(ee/oe*80),H!==z&&(z=H,I(H))),Te+f.slice(ee===0?0:K[ee-1][1],K[ee][0])+(K[ee][2]||"")),""),f+=Ce}return f}let Z="\xA0",te="&nbsp;",G="\\00A0",S="\\u00A0",x=[{heads:"{{",tails:"}}"},{heads:["{% if","{%- if"],tails:["{% endif","{%- endif"]},{heads:["{% for","{%- for"],tails:["{% endfor","{%- endfor"]},{heads:["{%","{%-"],tails:["%}","-%}"]},{heads:"{#",tails:"#}"}],X=[{heads:"{{",tails:"}}"}],we=[{heads:["<%","<%=","<%-"],tails:["%>","=%>","-%>"]}],E=["abbr","address","area","article","aside","audio","base","bdi","bdo","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","doctype","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","math","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","param","picture","pre","progress","rb","rp","rt","rtc","ruby","samp","script","section","select","slot","small","source","span","strong","style","sub","summary","sup","svg","table","tbody","td","template","textarea","tfoot","th","thead","time","title","tr","track","ul","var","video","wbr","xml"],Ge={removeWidowPreventionMeasures:!1,convertEntities:!0,targetLanguage:"html",UKPostcodes:!1,hyphens:!0,minWordCount:4,minCharCount:5,ignore:[],reportProgressFunc:null,reportProgressFuncFrom:0,reportProgressFuncTo:100,tagRanges:[]};e.defaults=Ge,e.removeWidows=function(f,W){let I=Date.now();if(typeof f!="string")throw f===void 0?new Error("string-remove-widows: [THROW_ID_01] the first input argument is completely missing! It should be given as string."):new Error(`string-remove-widows: [THROW_ID_02] the first input argument must be string! It was given as "${typeof f}", equal to:
${JSON.stringify(f,null,4)}`);if(W&&typeof W!="object")throw new Error(`string-remove-widows: [THROW_ID_03] the second input argument, options object, should be a plain object but it was given as type ${typeof W}, equal to ${JSON.stringify(W,null,4)}`);let $=Array.isArray,H=f.length,z=new q({mergeType:2}),xe=["."],ue=/[A-Z]{1,2}[0-9][0-9A-Z]?$/,ve=/^[0-9][A-Z]{2}/,oe=.06,Ce,Te,D,ee,K,j,se,Ee,$e,je=0,We=0,Ne=0,V=ye(ye({},Ge),W),ze={removeWidows:!1,convertEntities:!1};if(!V.ignore||!$(V.ignore)&&typeof V.ignore!="string")V.ignore=[];else if(typeof V.ignore=="string"&&(V.ignore=[V.ignore]),V.ignore.includes("all"))V.ignore=V.ignore.concat(x.concat(we));else if(V.ignore.some(A=>typeof A=="string")){let A=[];V.ignore=V.ignore.filter(Je=>typeof Je=="string"&&Je.length?(["nunjucks","jinja","liquid"].includes(Je.trim().toLowerCase())?A=A.concat(x):["hugo"].includes(Je.trim().toLowerCase())?A=A.concat(X):["hexo"].includes(Je.trim().toLowerCase())&&(A=A.concat(we)),!1):typeof Je=="object"||void 0),A.length&&(V.ignore=V.ignore.concat(A))}let kr;function lr(A,Je){let he=Z;V.removeWidowPreventionMeasures?he=" ":V.convertEntities&&(he=te,typeof V.targetLanguage=="string"&&(V.targetLanguage.trim().toLowerCase()==="css"?he=G:V.targetLanguage.trim().toLowerCase()==="js"&&(he=S))),f.slice(A,Je)!==he&&z.push(A,Je,he)}function _e(){We=0,Ne=0,Te=void 0,D=void 0,ee=void 0,K=void 0,j=void 0,se=void 0}V.reportProgressFunc&&(kr=Math.floor(V.reportProgressFuncTo-(V.reportProgressFuncTo-V.reportProgressFuncFrom)*oe-V.reportProgressFuncFrom)),_e();for(let A=0;A<=H;A++){if(!Ee&&$(V.ignore)&&V.ignore.length&&V.ignore.some((he,tr)=>{if($(he.heads)&&he.heads.some(Ue=>f.startsWith(Ue,A))||typeof he.heads=="string"&&f.startsWith(he.heads,A))return We+=1,Ee=V.ignore[tr].tails,!0}),!Ee&&$e&&$e===A&&(We+=1,$e=void 0),typeof V.reportProgressFunc=="function"&&(Ce=V.reportProgressFuncFrom+Math.floor(A/H*(kr||1)),Ce!==je&&(je=Ce,V.reportProgressFunc(Ce))),!Ee&&A&&f[A]&&f[A].trim()&&(!f[A-1]||f[A-1]&&!f[A-1].trim())&&(K=A),!Ee&&f[A]&&f[A].trim()&&(Ne+=1),Ee||!V.hyphens||!("-\u2014\u2013".includes(f[A])||f.startsWith("&ndash;",A)||f.startsWith("\\2013",A)||f.startsWith("\\u2013",A)||f.startsWith("&mdash;",A)||f.startsWith("\\2014",A)||f.startsWith("\\u2014",A))||!f[A+1]||f[A+1].trim()&&f[A]!=="&"||f[A-1]&&!f[A-1].trim()&&f[c(f,A)]&&(lr(c(f,A)+1,A),ze.removeWidows=!0),Ee||!f.startsWith("&nbsp;",A)&&!f.startsWith("&#160;",A)||(j=A,se=A+6,f[A+6]&&f[A+6].trim()&&($e=A+6),V.convertEntities?V.targetLanguage!=="css"&&V.targetLanguage!=="js"||(z.push(A,A+6,V.targetLanguage==="css"?G:S),ze.convertEntities=!0):(z.push(A,A+6,Z),ze.convertEntities=!0)),!Ee&&f[A+4]&&f[A]==="\\"&&f[A+1]==="0"&&f[A+2]==="0"&&f[A+3].toUpperCase()==="A"&&f[A+4]==="0"&&(j=A,se=A+5,f[A+5]&&f[A+5].trim()&&($e=A+5),V.convertEntities?V.targetLanguage!=="html"&&V.targetLanguage!=="js"||(z.push(A,A+5,V.targetLanguage==="html"?te:S),ze.convertEntities=!0):(z.push(A,A+5,Z),ze.convertEntities=!0)),!Ee&&f[A]==="\\"&&f[A+1]&&f[A+1].toLowerCase()==="u"&&f[A+2]==="0"&&f[A+3]==="0"&&f[A+4]&&f[A+4].toUpperCase()==="A"&&f[A+5]==="0"&&(j=A,se=A+6,f[A+6]&&f[A+6].trim()&&($e=A+6),V.convertEntities?V.targetLanguage!=="html"&&V.targetLanguage!=="css"||z.push(A,A+6,V.targetLanguage==="html"?te:G):z.push(A,A+6,Z)),Ee||f[A]!==Z||(j=A,se=A+1,V.convertEntities&&z.push(A,A+1,V.targetLanguage==="css"?G:V.targetLanguage==="js"?S:te)),Ee||!f[A]||!f[A].trim()||f[A-1]&&f[A-1].trim()||(We+=1),!Ee&&(!f[A]||`\r
`.includes(f[A])||(f[A]===`
`||f[A]==="\r"||f[A]==="\r"&&f[A+1]===`
`)&&c(f,A)&&xe.includes(f[c(f,A)]))){if((!V.minWordCount||We>=V.minWordCount)&&(!V.minCharCount||Ne>=V.minCharCount)){let he,tr;ee!==void 0&&K!==void 0&&j!==void 0&&se!==void 0?ee>j?(he=ee,tr=K):(he=j,tr=se):ee!==void 0&&K!==void 0?(he=ee,tr=K):j!==void 0&&se!==void 0&&(he=j,tr=se),he&&tr||!Te||!D||(he=Te,tr=D),he&&tr&&(lr(he,tr),ze.removeWidows=!0)}_e()}let Je;V.UKPostcodes&&f[A]&&!f[A].trim()&&f[A-1]&&f[A-1].trim()&&ue.test(f.slice(0,A))&&f[o(f,A)]&&ve.test(f.slice(o(f,A)))&&(lr(A,o(f,A)),ze.removeWidows=!0),Ee||!f[A]||f[A].trim()||!f[A-1]||!f[A-1].trim()||!(ee===void 0||f[ee-1]&&f[ee-1].trim())||"/>".includes(f[o(f,A)])||f.slice(0,A).trim().endsWith("br")||f.slice(0,A).trim().endsWith("hr")||f.slice(0,A).endsWith("<")&&E.some(he=>f.startsWith(he,o(f,A)))||(Te=ee,D=K,ee=A,K=void 0,j===void 0&&se===void 0||(j=void 0,se=void 0)),Ee&&(typeof Ee!="string"||Ee.length&&!f.startsWith(Ee,A)?!$(Ee)||Ee.length&&!Ee.some(he=>{if(f.startsWith(he,A))return Je=he,!0})||(Ee=void 0,A+=Je.length,$(V.ignore)&&V.ignore.length&&f[A+1]&&V.ignore.some(he=>U(f,A,he.tails,{trimBeforeMatching:!0,cb:(tr,Ue,Pe)=>(Pe&&(A=Pe-1,f[A+1]&&f[A+1].trim()&&(We+=1)),!0)}))):Ee=void 0),f[A]&&`\r
`.includes(f[A])&&(We=0,Ne=0),$(V.tagRanges)&&V.tagRanges.length&&V.tagRanges.some(he=>{if(A>=he[0]&&A<=he[1]&&he[1]-1>A)return A=he[1]-1,!0})}return Q(f,z.current()).split("").forEach((A,Je)=>{}),{res:Q(f,z.current(),V.reportProgressFunc?A=>{Ce=Math.floor(.94*(V.reportProgressFuncTo-V.reportProgressFuncFrom)+A/100*(V.reportProgressFuncTo-V.reportProgressFuncFrom)*oe),Ce!==je&&(je=Ce,V.reportProgressFunc(Ce))}:void 0),ranges:z.current(),log:{timeTakenInMilliseconds:Date.now()-I},whatWasDone:ze}},e.version="2.0.12",Object.defineProperty(e,"__esModule",{value:!0})})});var an=et((na,tn)=>{(function(e,y){typeof na=="object"&&typeof tn!="undefined"?y(na):typeof define=="function"&&define.amd?define(["exports"],y):y((e=typeof globalThis!="undefined"?globalThis:e||self).rangesProcessOutside={})})(na,function(e){"use strict";let y=55296,h=127995,a=127999,g=[776,2359,2359,2367,2367,2984,3007,3021,3633,3635,3648,3657,4352,4449,4520];function pe(q){if(typeof q!="string")throw new Error("string cannot be undefined or null");let Q=[],Z=0,te=0;for(;Z<q.length;)te+=U(Z+te,q),c(q[Z+te])&&te++,r(q[Z+te])&&te++,o(q[Z+te])&&te++,b(q[Z+te])?te++:(Q.push(q.substring(Z,Z+te)),Z+=te,te=0);return Q}function U(q,Q){let Z=Q[q];if(!function(S){return S&&P(S[0].charCodeAt(0),y,56319)}(Z)||q===Q.length-1)return 1;let te=Z+Q[q+1],G=Q.substring(q+2,q+5);return l(te)&&l(G)||function(S){return P(n(S),h,a)}(G)?4:2}function l(q){return P(n(q),127462,127487)}function r(q){return typeof q=="string"&&P(q.charCodeAt(0),65024,65039)}function o(q){return typeof q=="string"&&P(q.charCodeAt(0),8400,8447)}function c(q){return typeof q=="string"&&g.indexOf(q.charCodeAt(0))!==-1}function b(q){return typeof q=="string"&&q.charCodeAt(0)===8205}function n(q){return(q.charCodeAt(0)-y<<10)+(q.charCodeAt(1)-56320)+65536}function P(q,Q,Z){return q>=Q&&q<=Z}var u=pe;u.substr=function(q,Q,Z){let te=pe(q);if(Q===void 0)return q;if(Q>=te.length)return"";let G=te.length-Q,S=Q+(Z===void 0?G:Z);return S>Q+G&&(S=void 0),te.slice(Q,S).join("")};let i={strictlyTwoElementsInRangeArrays:!1,progressFn:null};function t(q,Q){if(!Array.isArray(q)||!q.length)return q;let Z=ye(ye({},i),Q),te,G;if(Z.strictlyTwoElementsInRangeArrays&&!q.filter(X=>X).every((X,we)=>X.length===2||(te=we,G=X.length,!1)))throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${te}th range (${JSON.stringify(q[te],null,4)}) has not two but ${G} elements!`);if(!q.filter(X=>X).every((X,we)=>!(!Number.isInteger(X[0])||X[0]<0||!Number.isInteger(X[1])||X[1]<0)||(te=we,!1)))throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${te}th range (${JSON.stringify(q[te],null,4)}) does not consist of only natural numbers!`);let S=q.filter(X=>X).length**2,x=0;return Array.from(q).filter(X=>X).sort((X,we)=>(Z.progressFn&&(x+=1,Z.progressFn(Math.floor(100*x/S))),X[0]===we[0]?X[1]<we[1]?-1:X[1]>we[1]?1:0:X[0]<we[0]?-1:1))}let O={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};function v(q,Q){function Z(E){return E&&typeof E=="object"&&!Array.isArray(E)}if(!Array.isArray(q)||!q.length)return null;let te;if(Q){if(!Z(Q))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:
${JSON.stringify(Q,null,4)} (type ${typeof Q})`);if(te=ye(ye({},O),Q),te.progressFn&&Z(te.progressFn)&&!Object.keys(te.progressFn).length)te.progressFn=null;else if(te.progressFn&&typeof te.progressFn!="function")throw new Error(`ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "${typeof te.progressFn}", equal to ${JSON.stringify(te.progressFn,null,4)}`);if(te.mergeType&&+te.mergeType!=1&&+te.mergeType!=2)throw new Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof te.mergeType}", equal to ${JSON.stringify(te.mergeType,null,4)}`);if(typeof te.joinRangesThatTouchEdges!="boolean")throw new Error(`ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof te.joinRangesThatTouchEdges}", equal to ${JSON.stringify(te.joinRangesThatTouchEdges,null,4)}`)}else te=ye({},O);let G=q.filter(E=>E).map(E=>[...E]).filter(E=>E[2]!==void 0||E[0]!==E[1]),S,x,X;if(S=te.progressFn?t(G,{progressFn:E=>{X=Math.floor(E/5),X!==x&&(x=X,te.progressFn(X))}}):t(G),!S)return null;let we=S.length-1;for(let E=we;E>0;E--)te.progressFn&&(X=Math.floor(78*(1-E/we))+21,X!==x&&X>x&&(x=X,te.progressFn(X))),(S[E][0]<=S[E-1][0]||!te.joinRangesThatTouchEdges&&S[E][0]<S[E-1][1]||te.joinRangesThatTouchEdges&&S[E][0]<=S[E-1][1])&&(S[E-1][0]=Math.min(S[E][0],S[E-1][0]),S[E-1][1]=Math.max(S[E][1],S[E-1][1]),S[E][2]!==void 0&&(S[E-1][0]>=S[E][0]||S[E-1][1]<=S[E][1])&&S[E-1][2]!==null&&(S[E][2]===null&&S[E-1][2]!==null?S[E-1][2]=null:S[E-1][2]!=null?+te.mergeType==2&&S[E-1][0]===S[E][0]?S[E-1][2]=S[E][2]:S[E-1][2]+=S[E][2]:S[E-1][2]=S[E][2]),S.splice(E,1),E=S.length);return S.length?S:null}function M(q,Q){if(q===null)return null;if(!Array.isArray(q))throw new TypeError(`ranges-crop: [THROW_ID_01] The first input's argument must be an array, consisting of range arrays! Currently its type is: ${typeof q}, equal to: ${JSON.stringify(q,null,4)}`);if(!Number.isInteger(Q))throw new TypeError(`ranges-crop: [THROW_ID_02] The second input's argument must be a natural number or zero (coming from String.length)! Currently its type is: ${typeof Q}, equal to: ${JSON.stringify(Q,null,4)}`);if(!q.filter(G=>G).length)return q.filter(G=>G);let Z=0;if(!q.filter(G=>G).every((G,S)=>!(!Number.isInteger(G[0])||!Number.isInteger(G[1]))||(Z=S,!1)))throw Array.isArray(q)&&typeof q[0]=="number"&&typeof q[1]=="number"?new TypeError(`ranges-crop: [THROW_ID_03] The first argument should be AN ARRAY OF RANGES, not a single range! Currently arrOfRanges = ${JSON.stringify(q,null,0)}!`):new TypeError(`ranges-crop: [THROW_ID_04] The first argument should be AN ARRAY OF ARRAYS! Each sub-array means string slice indexes. In our case, here ${Z}th range (${JSON.stringify(q[Z],null,0)}) does not consist of only natural numbers!`);if(!q.filter(G=>G).every((G,S)=>G[2]==null||typeof G[2]=="string"||(Z=S,!1)))throw new TypeError(`ranges-crop: [THROW_ID_05] The third argument, if present at all, should be of a string-type or null. Currently the ${Z}th range ${JSON.stringify(q[Z],null,0)} has a argument in the range of a type ${typeof q[Z][2]}`);let te=(v(q)||[]).filter(G=>G[0]<=Q&&(G[2]!=null||G[0]<Q)).map(G=>G[1]>Q?G[2]!=null?[G[0],Q,G[2]]:[G[0],Q]:G);return te===[]?null:te}e.rProcessOutside=function(q,Q,Z,te=!1){if(typeof q!="string")throw q===void 0?new Error("ranges-process-outside: [THROW_ID_01] the first input argument must be string! It's missing currently (undefined)!"):new Error(`ranges-process-outside: [THROW_ID_02] the first input argument must be string! It was given as:
${JSON.stringify(q,null,4)} (type ${typeof q})`);if(Q&&(!Array.isArray(Q)||Q.length&&!Array.isArray(Q[0])))throw new Error(`ranges-process-outside: [THROW_ID_03] the second input argument must be array of ranges or null! It was given as:
${JSON.stringify(Q,null,4)} (type ${typeof Q})`);if(typeof Z!="function")throw new Error(`ranges-process-outside: [THROW_ID_04] the third input argument must be a function! It was given as:
${JSON.stringify(Z,null,4)} (type ${typeof Z})`);function G(S,x){(x||[]).forEach(([X,we])=>{for(let E=X;E<we;E++){let Ge=u(S.slice(E))[0].length;Z(E,E+Ge,f=>{f!=null&&(E+=f)}),Ge&&Ge>1&&(E+=Ge-1)}})}Q&&Q.length?G(q,M(function(S,x,X){if(!Array.isArray(S)&&S!==null)throw new TypeError(`ranges-invert: [THROW_ID_01] Input's first argument must be an array, consisting of range arrays! Currently its type is: ${typeof S}, equal to: ${JSON.stringify(S,null,4)}`);if(!Number.isInteger(x)||x<0)throw new TypeError(`ranges-invert: [THROW_ID_02] Input's second argument must be a natural number or zero (coming from String.length)! Currently its type is: ${typeof x}, equal to: ${JSON.stringify(x,null,4)}`);if(Array.isArray(S)&&typeof S[0]=="number"&&typeof S[1]=="number")throw new TypeError(`ranges-invert: [THROW_ID_07] The first argument should be AN ARRAY OF RANGES, not a single range! Currently arrOfRanges = ${JSON.stringify(S,null,0)}!`);if(!Array.isArray(S)||!S.filter(W=>Array.isArray(W)&&W[0]!==W[1]).length||!x)return x?[[0,x]]:null;let we=ye({strictlyTwoElementsInRangeArrays:!1,skipChecks:!1},X),E,Ge,f=0;if(!we.skipChecks&&we.strictlyTwoElementsInRangeArrays&&!S.filter(W=>W).every((W,I)=>W.length===2||(f=I,E=W.length,!1)))throw new TypeError(`ranges-invert: [THROW_ID_04] Because opts.strictlyTwoElementsInRangeArrays was enabled, all ranges must be strictly two-element-long. However, the ${f}th range (${JSON.stringify(S[f],null,0)}) has not two but ${E} elements!`);if(!we.skipChecks&&!S.every((W,I)=>!(!Number.isInteger(W[0])||W[0]<0||!Number.isInteger(W[1])||W[1]<0)||(f=I,!1)))throw new TypeError(`ranges-invert: [THROW_ID_05] The first argument should be AN ARRAY OF ARRAYS! Each sub-array means string slice indexes. In our case, here ${f+1}th range (${JSON.stringify(S[f],null,0)}) does not consist of only natural numbers!`);return Ge=we.skipChecks?S.filter(W=>W[0]!==W[1]):v(S.filter(W=>W[0]!==W[1])),M(Ge.reduce((W,I,$,H)=>{let z=[];$===0&&H[0][0]!==0&&z.push([0,H[0][0]]);let xe=$<H.length-1?H[$+1][0]:x;if(I[1]!==xe){if(we.skipChecks&&I[1]>xe)throw new TypeError(`ranges-invert: [THROW_ID_08] The checking (opts.skipChecks) is off and input ranges were not sorted! We nearly wrote range [${I[1]}, ${xe}] which is backwards. For investigation, whole ranges array is:
${JSON.stringify(H,null,0)}`);z.push([I[1],xe])}return W.concat(z)},[]),x)}(Q,q.length,{skipChecks:!!te}),q.length)):G(q,[[0,q.length]])},e.version="4.0.12",Object.defineProperty(e,"__esModule",{value:!0})})});var on=et((oa,nn)=>{(function(e,y){typeof oa=="object"&&typeof nn!="undefined"?y(oa):typeof define=="function"&&define.amd?define(["exports"],y):y((e=typeof globalThis!="undefined"?globalThis:e||self).stringCollapseWhiteSpace={})})(oa,function(e){"use strict";let y={strictlyTwoElementsInRangeArrays:!1,progressFn:null};function h(i,t){if(!Array.isArray(i)||!i.length)return i;let O=ye(ye({},y),t),v,M;if(O.strictlyTwoElementsInRangeArrays&&!i.filter(Z=>Z).every((Z,te)=>Z.length===2||(v=te,M=Z.length,!1)))throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${v}th range (${JSON.stringify(i[v],null,4)}) has not two but ${M} elements!`);if(!i.filter(Z=>Z).every((Z,te)=>!(!Number.isInteger(Z[0])||Z[0]<0||!Number.isInteger(Z[1])||Z[1]<0)||(v=te,!1)))throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${v}th range (${JSON.stringify(i[v],null,4)}) does not consist of only natural numbers!`);let q=i.filter(Z=>Z).length**2,Q=0;return Array.from(i).filter(Z=>Z).sort((Z,te)=>(O.progressFn&&(Q+=1,O.progressFn(Math.floor(100*Q/q))),Z[0]===te[0]?Z[1]<te[1]?-1:Z[1]>te[1]?1:0:Z[0]<te[0]?-1:1))}let a={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};function g(i,t){function O(G){return G&&typeof G=="object"&&!Array.isArray(G)}if(!Array.isArray(i)||!i.length)return null;let v;if(t){if(!O(t))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:
${JSON.stringify(t,null,4)} (type ${typeof t})`);if(v=ye(ye({},a),t),v.progressFn&&O(v.progressFn)&&!Object.keys(v.progressFn).length)v.progressFn=null;else if(v.progressFn&&typeof v.progressFn!="function")throw new Error(`ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "${typeof v.progressFn}", equal to ${JSON.stringify(v.progressFn,null,4)}`);if(v.mergeType&&+v.mergeType!=1&&+v.mergeType!=2)throw new Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof v.mergeType}", equal to ${JSON.stringify(v.mergeType,null,4)}`);if(typeof v.joinRangesThatTouchEdges!="boolean")throw new Error(`ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof v.joinRangesThatTouchEdges}", equal to ${JSON.stringify(v.joinRangesThatTouchEdges,null,4)}`)}else v=ye({},a);let M=i.filter(G=>G).map(G=>[...G]).filter(G=>G[2]!==void 0||G[0]!==G[1]),q,Q,Z;if(q=v.progressFn?h(M,{progressFn:G=>{Z=Math.floor(G/5),Z!==Q&&(Q=Z,v.progressFn(Z))}}):h(M),!q)return null;let te=q.length-1;for(let G=te;G>0;G--)v.progressFn&&(Z=Math.floor(78*(1-G/te))+21,Z!==Q&&Z>Q&&(Q=Z,v.progressFn(Z))),(q[G][0]<=q[G-1][0]||!v.joinRangesThatTouchEdges&&q[G][0]<q[G-1][1]||v.joinRangesThatTouchEdges&&q[G][0]<=q[G-1][1])&&(q[G-1][0]=Math.min(q[G][0],q[G-1][0]),q[G-1][1]=Math.max(q[G][1],q[G-1][1]),q[G][2]!==void 0&&(q[G-1][0]>=q[G][0]||q[G-1][1]<=q[G][1])&&q[G-1][2]!==null&&(q[G][2]===null&&q[G-1][2]!==null?q[G-1][2]=null:q[G-1][2]!=null?+v.mergeType==2&&q[G-1][0]===q[G][0]?q[G-1][2]=q[G][2]:q[G-1][2]+=q[G][2]:q[G-1][2]=q[G][2]),q.splice(G,1),G=q.length);return q.length?q:null}function pe(i,t,O){let v,M=0,q=0;if(arguments.length===0)throw new Error("ranges-apply: [THROW_ID_01] inputs missing!");if(typeof i!="string")throw new TypeError(`ranges-apply: [THROW_ID_02] first input argument must be a string! Currently it's: ${typeof i}, equal to: ${JSON.stringify(i,null,4)}`);if(t&&!Array.isArray(t))throw new TypeError(`ranges-apply: [THROW_ID_03] second input argument must be an array (or null)! Currently it's: ${typeof t}, equal to: ${JSON.stringify(t,null,4)}`);if(O&&typeof O!="function")throw new TypeError(`ranges-apply: [THROW_ID_04] the third input argument must be a function (or falsey)! Currently it's: ${typeof O}, equal to: ${JSON.stringify(O,null,4)}`);if(!t||!t.filter(S=>S).length)return i;v=Array.isArray(t)&&Number.isInteger(t[0])&&Number.isInteger(t[1])?[Array.from(t)]:Array.from(t);let Q=v.length,Z=0;v.filter(S=>S).forEach((S,x)=>{if(O&&(M=Math.floor(Z/Q*10),M!==q&&(q=M,O(M))),!Array.isArray(S))throw new TypeError(`ranges-apply: [THROW_ID_05] ranges array, second input arg., has ${x}th element not an array: ${JSON.stringify(S,null,4)}, which is ${typeof S}`);if(!Number.isInteger(S[0])){if(!Number.isInteger(+S[0])||+S[0]<0)throw new TypeError(`ranges-apply: [THROW_ID_06] ranges array, second input arg. has ${x}th element, array ${JSON.stringify(S,null,0)}. Its first element is not an integer, string index, but ${typeof S[0]}, equal to: ${JSON.stringify(S[0],null,4)}.`);v[x][0]=+v[x][0]}if(!Number.isInteger(S[1])){if(!Number.isInteger(+S[1])||+S[1]<0)throw new TypeError(`ranges-apply: [THROW_ID_07] ranges array, second input arg. has ${x}th element, array ${JSON.stringify(S,null,0)}. Its second element is not an integer, string index, but ${typeof S[1]}, equal to: ${JSON.stringify(S[1],null,4)}.`);v[x][1]=+v[x][1]}Z+=1});let te=g(v,{progressFn:S=>{O&&(M=10+Math.floor(S/10),M!==q&&(q=M,O(M)))}}),G=Array.isArray(te)?te.length:0;if(G>0){let S=i.slice(te[G-1][1]);i=te.reduce((x,X,we,E)=>(O&&(M=20+Math.floor(we/G*80),M!==q&&(q=M,O(M))),x+i.slice(we===0?0:E[we-1][1],E[we][0])+(E[we][2]||"")),""),i+=S}return i}function U(i,t=1){function O(M){return Array.from(M).reverse().join("")}function v(M,q,Q){let Z=Q?`
`:"\r",te=Q?"\r":`
`;if(!M)return M;let G=0,S="";for(let x=0,X=M.length;x<X;x++)(M[x]===Z||M[x]===te&&M[x-1]!==Z)&&G++,`\r
`.includes(M[x])||M[x]==="\xA0"?M[x]==="\xA0"?S+=M[x]:M[x]===Z?G<=q&&(S+=M[x],M[x+1]===te&&(S+=M[x+1],x++)):M[x]===te&&(!M[x-1]||M[x-1]!==Z)&&G<=q&&(S+=M[x]):M[x+1]||G||(S+=" ");return S}if(typeof i=="string"&&i.length){let M=1;typeof+t=="number"&&Number.isInteger(+t)&&+t>=0&&(M=+t);let q="",Q="";if(i.trim()){if(!i[0].trim()){for(let Z=0,te=i.length;Z<te;Z++)if(i[Z].trim()){q=i.slice(0,Z);break}}}else q=i;if(i.trim()&&(i.slice(-1).trim()===""||i.slice(-1)==="\xA0")){for(let Z=i.length;Z--;)if(i[Z].trim()){Q=i.slice(Z+1);break}}return`${v(q,M,!1)}${i.trim()}${O(v(O(Q),M,!0))}`}return i}function l(i){return i!=null}function r(i){return Number.isInteger(i)&&i>=0}function o(i){return typeof i=="string"}let c={limitToBeAddedWhitespace:!1,limitLinebreaksCount:1,mergeType:1};class b{constructor(t){let O=ye(ye({},c),t);if(O.mergeType&&O.mergeType!==1&&O.mergeType!==2)if(o(O.mergeType)&&O.mergeType.trim()==="1")O.mergeType=1;else{if(!o(O.mergeType)||O.mergeType.trim()!=="2")throw new Error(`ranges-push: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof O.mergeType}", equal to ${JSON.stringify(O.mergeType,null,4)}`);O.mergeType=2}this.opts=O,this.ranges=[]}add(t,O,v){if(t==null&&O==null)return;if(l(t)&&!l(O)){if(Array.isArray(t)){if(t.length){if(t.some(Q=>Array.isArray(Q)))return void t.forEach(Q=>{Array.isArray(Q)&&this.add(...Q)});t.length&&r(+t[0])&&r(+t[1])&&this.add(...t)}return}throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_12] the first input argument, "from" is set (${JSON.stringify(t,null,0)}) but second-one, "to" is not (${JSON.stringify(O,null,0)})`)}if(!l(t)&&l(O))throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_13] the second input argument, "to" is set (${JSON.stringify(O,null,0)}) but first-one, "from" is not (${JSON.stringify(t,null,0)})`);let M=+t,q=+O;if(r(v)&&(v=String(v)),!r(M)||!r(q))throw r(M)&&M>=0?new TypeError(`ranges-push/Ranges/add(): [THROW_ID_10] "to" value, the second input argument, must be a natural number or zero! Currently it's of a type "${typeof q}" equal to: ${JSON.stringify(q,null,4)}`):new TypeError(`ranges-push/Ranges/add(): [THROW_ID_09] "from" value, the first input argument, must be a natural number or zero! Currently it's of a type "${typeof M}" equal to: ${JSON.stringify(M,null,4)}`);if(l(v)&&!o(v)&&!r(v))throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_08] The third argument, the value to add, was given not as string but ${typeof v}, equal to:
${JSON.stringify(v,null,4)}`);if(l(this.ranges)&&Array.isArray(this.last())&&M===this.last()[1]){if(this.last()[1]=q,this.last(),this.last()[2]!==null&&l(v)){let Q=!(this.last()[2]&&this.last()[2].length>0)||this.opts&&this.opts.mergeType&&this.opts.mergeType!==1?v:this.last()[2]+v;this.opts.limitToBeAddedWhitespace&&(Q=U(Q,this.opts.limitLinebreaksCount)),o(Q)&&!Q.length||(this.last()[2]=Q)}}else{this.ranges||(this.ranges=[]);let Q=v===void 0||o(v)&&!v.length?[M,q]:[M,q,v&&this.opts.limitToBeAddedWhitespace?U(v,this.opts.limitLinebreaksCount):v];this.ranges.push(Q)}}push(t,O,v){this.add(t,O,v)}current(){return Array.isArray(this.ranges)&&this.ranges.length?(this.ranges=g(this.ranges,{mergeType:this.opts.mergeType}),this.ranges&&this.opts.limitToBeAddedWhitespace?this.ranges.map(t=>l(t[2])?[t[0],t[1],U(t[2],this.opts.limitLinebreaksCount)]:t):this.ranges):null}wipe(){this.ranges=[]}replace(t){if(Array.isArray(t)&&t.length){if(!Array.isArray(t[0])||!r(t[0][0]))throw new Error(`ranges-push/Ranges/replace(): [THROW_ID_11] Single range was given but we expected array of arrays! The first element, ${JSON.stringify(t[0],null,4)} should be an array and its first element should be an integer, a string index.`);this.ranges=Array.from(t)}else this.ranges=[]}last(){return Array.isArray(this.ranges)&&this.ranges.length?this.ranges[this.ranges.length-1]:null}}Function.prototype.toString.call(Object);var n=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{};(function(i){var t={exports:{}};i(t,t.exports)})(function(i,t){var O="__lodash_hash_undefined__",v=9007199254740991,M="[object Arguments]",q="[object Boolean]",Q="[object Date]",Z="[object Function]",te="[object GeneratorFunction]",G="[object Map]",S="[object Number]",x="[object Object]",X="[object Promise]",we="[object RegExp]",E="[object Set]",Ge="[object String]",f="[object Symbol]",W="[object WeakMap]",I="[object ArrayBuffer]",$="[object DataView]",H="[object Float32Array]",z="[object Float64Array]",xe="[object Int8Array]",ue="[object Int16Array]",ve="[object Int32Array]",oe="[object Uint8Array]",Ce="[object Uint8ClampedArray]",Te="[object Uint16Array]",D="[object Uint32Array]",ee=/\w*$/,K=/^\[object .+?Constructor\]$/,j=/^(?:0|[1-9]\d*)$/,se={};se[M]=se["[object Array]"]=se[I]=se[$]=se[q]=se[Q]=se[H]=se[z]=se[xe]=se[ue]=se[ve]=se[G]=se[S]=se[x]=se[we]=se[E]=se[Ge]=se[f]=se[oe]=se[Ce]=se[Te]=se[D]=!0,se["[object Error]"]=se[Z]=se[W]=!1;var Ee=typeof self=="object"&&self&&self.Object===Object&&self,$e=typeof n=="object"&&n&&n.Object===Object&&n||Ee||Function("return this")(),je=t&&!t.nodeType&&t,We=je&&i&&!i.nodeType&&i,Ne=We&&We.exports===je;function V(k,Y){return k.set(Y[0],Y[1]),k}function ze(k,Y){return k.add(Y),k}function kr(k,Y,fe,Se){var nr=-1,Xe=k?k.length:0;for(Se&&Xe&&(fe=k[++nr]);++nr<Xe;)fe=Y(fe,k[nr],nr,k);return fe}function lr(k){var Y=!1;if(k!=null&&typeof k.toString!="function")try{Y=!!(k+"")}catch(fe){}return Y}function _e(k){var Y=-1,fe=Array(k.size);return k.forEach(function(Se,nr){fe[++Y]=[nr,Se]}),fe}function A(k,Y){return function(fe){return k(Y(fe))}}function Je(k){var Y=-1,fe=Array(k.size);return k.forEach(function(Se){fe[++Y]=Se}),fe}var he,tr=Array.prototype,Ue=Function.prototype,Pe=Object.prototype,He=$e["__core-js_shared__"],Fe=(he=/[^.]+$/.exec(He&&He.keys&&He.keys.IE_PROTO||""))?"Symbol(src)_1."+he:"",Me=Ue.toString,ir=Pe.hasOwnProperty,fr=Pe.toString,Br=RegExp("^"+Me.call(ir).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Jr=Ne?$e.Buffer:void 0,Mr=$e.Symbol,ft=$e.Uint8Array,ut=A(Object.getPrototypeOf,Object),zr=Object.create,ur=Pe.propertyIsEnumerable,wt=tr.splice,Ar=Object.getOwnPropertySymbols,ct=Jr?Jr.isBuffer:void 0,pt=A(Object.keys,Object),Yr=R($e,"DataView"),Gr=R($e,"Map"),nt=R($e,"Promise"),Rr=R($e,"Set"),Zr=R($e,"WeakMap"),ot=R(Object,"create"),dt=ge(Yr),ht=ge(Gr),bt=ge(nt),qt=ge(Rr),yt=ge(Zr),Wr=Mr?Mr.prototype:void 0,Kr=Wr?Wr.valueOf:void 0;function Ir(k){var Y=-1,fe=k?k.length:0;for(this.clear();++Y<fe;){var Se=k[Y];this.set(Se[0],Se[1])}}function xr(k){var Y=-1,fe=k?k.length:0;for(this.clear();++Y<fe;){var Se=k[Y];this.set(Se[0],Se[1])}}function wr(k){var Y=-1,fe=k?k.length:0;for(this.clear();++Y<fe;){var Se=k[Y];this.set(Se[0],Se[1])}}function Fr(k){this.__data__=new xr(k)}function mt(k,Y){var fe=m(k)||function(ar){return function(mr){return function(Ae){return!!Ae&&typeof Ae=="object"}(mr)&&Re(mr)}(ar)&&ir.call(ar,"callee")&&(!ur.call(ar,"callee")||fr.call(ar)==M)}(k)?function(ar,mr){for(var Ae=-1,Dr=Array(ar);++Ae<ar;)Dr[Ae]=mr(Ae);return Dr}(k.length,String):[],Se=fe.length,nr=!!Se;for(var Xe in k)!Y&&!ir.call(k,Xe)||nr&&(Xe=="length"||De(Xe,Se))||fe.push(Xe);return fe}function st(k,Y,fe){var Se=k[Y];ir.call(k,Y)&&ae(Se,fe)&&(fe!==void 0||Y in k)||(k[Y]=fe)}function Qr(k,Y){for(var fe=k.length;fe--;)if(ae(k[fe][0],Y))return fe;return-1}function rt(k,Y,fe,Se,nr,Xe,ar){var mr;if(Se&&(mr=Xe?Se(k,nr,Xe,ar):Se(k)),mr!==void 0)return mr;if(!Ye(k))return k;var Ae=m(k);if(Ae){if(mr=function(ce){var d=ce.length,Ie=ce.constructor(d);return d&&typeof ce[0]=="string"&&ir.call(ce,"index")&&(Ie.index=ce.index,Ie.input=ce.input),Ie}(k),!Y)return function(ce,d){var Ie=-1,p=ce.length;for(d||(d=Array(p));++Ie<p;)d[Ie]=ce[Ie];return d}(k,mr)}else{var Dr=le(k),T=Dr==Z||Dr==te;if(or(k))return function(ce,d){if(d)return ce.slice();var Ie=new ce.constructor(ce.length);return ce.copy(Ie),Ie}(k,Y);if(Dr==x||Dr==M||T&&!Xe){if(lr(k))return Xe?k:{};if(mr=function(ce){return typeof ce.constructor!="function"||ie(ce)?{}:(d=ut(ce),Ye(d)?zr(d):{});var d}(T?{}:k),!Y)return function(ce,d){return s(ce,re(ce),d)}(k,function(ce,d){return ce&&s(d,sr(d),ce)}(mr,k))}else{if(!se[Dr])return Xe?k:{};mr=function(ce,d,Ie,p){var C=ce.constructor;switch(d){case I:return w(ce);case q:case Q:return new C(+ce);case $:return function(me,Oe){var Ke=Oe?w(me.buffer):me.buffer;return new me.constructor(Ke,me.byteOffset,me.byteLength)}(ce,p);case H:case z:case xe:case ue:case ve:case oe:case Ce:case Te:case D:return function(me,Oe){var Ke=Oe?w(me.buffer):me.buffer;return new me.constructor(Ke,me.byteOffset,me.length)}(ce,p);case G:return function(me,Oe,Ke){return kr(Oe?Ke(_e(me),!0):_e(me),V,new me.constructor)}(ce,p,Ie);case S:case Ge:return new C(ce);case we:return function(me){var Oe=new me.constructor(me.source,ee.exec(me));return Oe.lastIndex=me.lastIndex,Oe}(ce);case E:return function(me,Oe,Ke){return kr(Oe?Ke(Je(me),!0):Je(me),ze,new me.constructor)}(ce,p,Ie);case f:return J=ce,Kr?Object(Kr.call(J)):{}}var J}(k,Dr,rt,Y)}}ar||(ar=new Fr);var _=ar.get(k);if(_)return _;if(ar.set(k,mr),!Ae)var qe=fe?function(ce){return function(d,Ie,p){var C=Ie(d);return m(d)?C:function(J,me){for(var Oe=-1,Ke=me.length,hr=J.length;++Oe<Ke;)J[hr+Oe]=me[Oe];return J}(C,p(d))}(ce,sr,re)}(k):sr(k);return function(ce,d){for(var Ie=-1,p=ce?ce.length:0;++Ie<p&&d(ce[Ie],Ie,ce)!==!1;);}(qe||k,function(ce,d){qe&&(ce=k[d=ce]),st(mr,d,rt(ce,Y,fe,Se,d,k,ar))}),mr}function _r(k){return!(!Ye(k)||(Y=k,Fe&&Fe in Y))&&(be(k)||lr(k)?Br:K).test(ge(k));var Y}function w(k){var Y=new k.constructor(k.byteLength);return new ft(Y).set(new ft(k)),Y}function s(k,Y,fe,Se){fe||(fe={});for(var nr=-1,Xe=Y.length;++nr<Xe;){var ar=Y[nr],mr=Se?Se(fe[ar],k[ar],ar,fe,k):void 0;st(fe,ar,mr===void 0?k[ar]:mr)}return fe}function L(k,Y){var fe,Se,nr=k.__data__;return((Se=typeof(fe=Y))=="string"||Se=="number"||Se=="symbol"||Se=="boolean"?fe!=="__proto__":fe===null)?nr[typeof Y=="string"?"string":"hash"]:nr.map}function R(k,Y){var fe=function(Se,nr){return Se==null?void 0:Se[nr]}(k,Y);return _r(fe)?fe:void 0}Ir.prototype.clear=function(){this.__data__=ot?ot(null):{}},Ir.prototype.delete=function(k){return this.has(k)&&delete this.__data__[k]},Ir.prototype.get=function(k){var Y=this.__data__;if(ot){var fe=Y[k];return fe===O?void 0:fe}return ir.call(Y,k)?Y[k]:void 0},Ir.prototype.has=function(k){var Y=this.__data__;return ot?Y[k]!==void 0:ir.call(Y,k)},Ir.prototype.set=function(k,Y){return this.__data__[k]=ot&&Y===void 0?O:Y,this},xr.prototype.clear=function(){this.__data__=[]},xr.prototype.delete=function(k){var Y=this.__data__,fe=Qr(Y,k);return!(fe<0)&&(fe==Y.length-1?Y.pop():wt.call(Y,fe,1),!0)},xr.prototype.get=function(k){var Y=this.__data__,fe=Qr(Y,k);return fe<0?void 0:Y[fe][1]},xr.prototype.has=function(k){return Qr(this.__data__,k)>-1},xr.prototype.set=function(k,Y){var fe=this.__data__,Se=Qr(fe,k);return Se<0?fe.push([k,Y]):fe[Se][1]=Y,this},wr.prototype.clear=function(){this.__data__={hash:new Ir,map:new(Gr||xr),string:new Ir}},wr.prototype.delete=function(k){return L(this,k).delete(k)},wr.prototype.get=function(k){return L(this,k).get(k)},wr.prototype.has=function(k){return L(this,k).has(k)},wr.prototype.set=function(k,Y){return L(this,k).set(k,Y),this},Fr.prototype.clear=function(){this.__data__=new xr},Fr.prototype.delete=function(k){return this.__data__.delete(k)},Fr.prototype.get=function(k){return this.__data__.get(k)},Fr.prototype.has=function(k){return this.__data__.has(k)},Fr.prototype.set=function(k,Y){var fe=this.__data__;if(fe instanceof xr){var Se=fe.__data__;if(!Gr||Se.length<199)return Se.push([k,Y]),this;fe=this.__data__=new wr(Se)}return fe.set(k,Y),this};var re=Ar?A(Ar,Object):function(){return[]},le=function(k){return fr.call(k)};function De(k,Y){return!!(Y=Y==null?v:Y)&&(typeof k=="number"||j.test(k))&&k>-1&&k%1==0&&k<Y}function ie(k){var Y=k&&k.constructor;return k===(typeof Y=="function"&&Y.prototype||Pe)}function ge(k){if(k!=null){try{return Me.call(k)}catch(Y){}try{return k+""}catch(Y){}}return""}function ae(k,Y){return k===Y||k!=k&&Y!=Y}(Yr&&le(new Yr(new ArrayBuffer(1)))!=$||Gr&&le(new Gr)!=G||nt&&le(nt.resolve())!=X||Rr&&le(new Rr)!=E||Zr&&le(new Zr)!=W)&&(le=function(k){var Y=fr.call(k),fe=Y==x?k.constructor:void 0,Se=fe?ge(fe):void 0;if(Se)switch(Se){case dt:return $;case ht:return G;case bt:return X;case qt:return E;case yt:return W}return Y});var m=Array.isArray;function Re(k){return k!=null&&function(Y){return typeof Y=="number"&&Y>-1&&Y%1==0&&Y<=v}(k.length)&&!be(k)}var or=ct||function(){return!1};function be(k){var Y=Ye(k)?fr.call(k):"";return Y==Z||Y==te}function Ye(k){var Y=typeof k;return!!k&&(Y=="object"||Y=="function")}function sr(k){return Re(k)?mt(k):function(Y){if(!ie(Y))return pt(Y);var fe=[];for(var Se in Object(Y))ir.call(Y,Se)&&Se!="constructor"&&fe.push(Se);return fe}(k)}i.exports=function(k){return rt(k,!0,!0)}});function P(i,t=0){return function({str:O,idx:v=0,stopAtNewlines:M=!1,stopAtRawNbsp:q=!1}){if(typeof O!="string"||!O.length||(v&&typeof v=="number"||(v=0),!O[v+1]))return null;if(O[v+1]&&(O[v+1].trim()||M&&`
\r`.includes(O[v+1])||q&&O[v+1]==="\xA0"))return v+1;if(O[v+2]&&(O[v+2].trim()||M&&`
\r`.includes(O[v+2])||q&&O[v+2]==="\xA0"))return v+2;for(let Q=v+1,Z=O.length;Q<Z;Q++)if(O[Q].trim()||M&&`
\r`.includes(O[Q])||q&&O[Q]==="\xA0")return Q;return null}({str:i,idx:t,stopAtNewlines:!1,stopAtRawNbsp:!1})}let u={trimStart:!0,trimEnd:!0,trimLines:!1,trimnbsp:!1,removeEmptyLines:!1,limitConsecutiveEmptyLinesTo:0,enforceSpacesOnly:!1,cb:({suggested:i})=>i};e.cbSchema=["suggested","whiteSpaceStartsAt","whiteSpaceEndsAt","str"],e.collapse=function(i,t){if(typeof i!="string")throw new Error(`string-collapse-white-space/collapse(): [THROW_ID_01] The input is not string but ${typeof i}, equal to: ${JSON.stringify(i,null,4)}`);if(t&&typeof t!="object")throw new Error(`string-collapse-white-space/collapse(): [THROW_ID_02] The opts is not a plain object but ${typeof t}, equal to:
${JSON.stringify(t,null,4)}`);if(!i.length)return{result:"",ranges:null};let O=new b,v="\xA0",M=ye(ye({},u),t);function q(E,Ge){if(typeof M.cb=="function"){let f=M.cb(ye({suggested:E},Ge));Array.isArray(f)&&O.push(...f)}else E&&O.push(...E)}let Q=null,Z=null,te=null,G=null,S=null,x=!1,X=[],we=0;for(let E=0,Ge=i.length;E<=Ge;E++){if((i[E]==="\r"||i[E]===`
`&&i[E-1]!=="\r")&&(we+=1,G===null&&(G=E),S=i[E]==="\r"&&i[E+1]===`
`?E+2:E+1),M.trimnbsp||i[E]!==v||x||(x=!0),Q!==null&&i[E]!==" "){let f=Q&&Z||!Z&&(!M.trimStart||!M.trimnbsp&&(i[E]===v||i[Q-1]===v)),W=i[E]||!M.trimEnd||!M.trimnbsp&&(i[E]===v||i[Q-1]===v),I=!M.enforceSpacesOnly||(!i[Q-1]||i[Q-1].trim())&&(!i[E]||i[E].trim());if(Q<E-1&&f&&W&&I){let $=Q,H=E,z=" ";M.trimLines&&(!Q||!i[E]||i[Q-1]&&`\r
`.includes(i[Q-1])||i[E]&&`\r
`.includes(i[E]))&&(z=null),z&&i[Q]===" "&&(H-=1,z=null),(!Q&&M.trimStart||!i[E]&&M.trimEnd)&&(H=E),X.push([z?[$,H,z]:[$,H],{whiteSpaceStartsAt:Z,whiteSpaceEndsAt:P(i,E-1)||E,str:i}])}}if(Q===null&&i[E]===" "&&(Q=E),Z===null&&i[E]&&!i[E].trim()&&(Z=E),te!==null&&(`
\r`.includes(i[E])||!i[E]||i[E].trim()||!M.trimnbsp&&!M.enforceSpacesOnly&&i[E]===v)&&(te||!M.trimStart||M.enforceSpacesOnly&&x)&&(i[E]||!M.trimEnd||M.enforceSpacesOnly&&x)){if(M.enforceSpacesOnly&&(E>te+1||i[te]!==" ")){let f=te,W=E,I=" ";i[W-1]===" "?(W-=1,I=null):i[te]===" "&&(f+=1,I=null),((M.trimStart||M.trimLines)&&!te||(M.trimEnd||M.trimLines)&&!i[E])&&(I=null),q(I?[f,W,I]:[f,W],{whiteSpaceStartsAt:Z,whiteSpaceEndsAt:E,str:i})}!M.trimLines||te&&!`\r
`.includes(i[te-1])&&i[E]&&!`\r
`.includes(i[E])||!M.trimnbsp&&x||q([te,E],{whiteSpaceStartsAt:Z,whiteSpaceEndsAt:P(i,E-1)||E,str:i}),te=null}if(te!==null||`\r
`.includes(i[E])||!i[E]||i[E].trim()||!M.trimnbsp&&i[E]===v&&!M.enforceSpacesOnly||(te=E),Z!==null&&(!i[E]||i[E].trim())){if((!Z&&(M.trimStart||M.trimLines&&G===null)||!i[E]&&(M.trimEnd||M.trimLines&&G===null))&&(M.trimnbsp||!x||M.enforceSpacesOnly))q([Z,E],{whiteSpaceStartsAt:Z,whiteSpaceEndsAt:E,str:i});else{let f=!1;if(M.removeEmptyLines&&G!==null&&we>(M.limitConsecutiveEmptyLinesTo||0)+1){f=!0;let W=G,I=S||i.length,$=`${i[G]==="\r"&&i[G+1]===`
`?`\r
`:i[G]}`.repeat((M.limitConsecutiveEmptyLinesTo||0)+1);i.endsWith($,S)?(I-=$.length||0,$=null):i.startsWith($,G)&&(W+=$.length,$=null),q($?[W,I,$]:[W,I],{whiteSpaceStartsAt:Z,whiteSpaceEndsAt:E,str:i})}if(X.length){for(;X.length;)q(...X.shift());f=!0}f||q(null,{whiteSpaceStartsAt:Z,whiteSpaceEndsAt:E,str:i})}Z=null,te=null,x=!1,we&&(we=0,G=null,S=null)}Q!==null&&i[E]!==" "&&(Q=null)}return{result:pe(i,O.current()),ranges:O.current()}},e.defaults=u,e.version="9.0.12",Object.defineProperty(e,"__esModule",{value:!0})})});var ln=et((sa,sn)=>{(function(e,y){typeof sa=="object"&&typeof sn!="undefined"?y(sa):typeof define=="function"&&define.amd?define(["exports"],y):y((e=typeof globalThis!="undefined"?globalThis:e||self).stringTrimSpacesOnly={})})(sa,function(e){"use strict";let y={classicTrim:!1,cr:!1,lf:!1,tab:!1,space:!0,nbsp:!1};e.defaults=y,e.trimSpaces=function(h,a){if(typeof h!="string")throw new Error(`string-trim-spaces-only: [THROW_ID_01] input must be string! It was given as ${typeof h}, equal to:
${JSON.stringify(h,null,4)}`);let g=ye(ye({},y),a);function pe(r){return g.classicTrim&&!r.trim()||!g.classicTrim&&(g.space&&r===" "||g.cr&&r==="\r"||g.lf&&r===`
`||g.tab&&r==="	"||g.nbsp&&r==="\xA0")}let U,l;if(h.length){if(pe(h[0]))for(let r=0,o=h.length;r<o;r++){if(!pe(h[r])){U=r;break}if(r===h.length-1)return{res:"",ranges:[[0,h.length]]}}if(pe(h[h.length-1])){for(let r=h.length;r--;)if(!pe(h[r])){l=r+1;break}}return U?l?{res:h.slice(U,l),ranges:[[0,U],[l,h.length]]}:{res:h.slice(U),ranges:[[0,U]]}:l?{res:h.slice(0,l),ranges:[[l,h.length]]}:{res:h,ranges:[]}}return{res:"",ranges:[]}},e.version="3.0.12",Object.defineProperty(e,"__esModule",{value:!0})})});var cn=et((ia,un)=>{(function(e,y){typeof ia=="object"&&typeof un!="undefined"?y(ia):typeof define=="function"&&define.amd?define(["exports"],y):y((e=typeof globalThis!="undefined"?globalThis:e||self).stringStripHtml={})})(ia,function(e){"use strict";var y,h,a=Object.prototype,g=Function.prototype.toString,pe=a.hasOwnProperty,U=g.call(Object),l=a.toString,r=(y=Object.getPrototypeOf,h=Object,function(w){return y(h(w))}),o=function(w){if(!function(R){return!!R&&typeof R=="object"}(w)||l.call(w)!="[object Object]"||function(R){var re=!1;if(R!=null&&typeof R.toString!="function")try{re=!!(R+"")}catch(le){}return re}(w))return!1;var s=r(w);if(s===null)return!0;var L=pe.call(s,"constructor")&&s.constructor;return typeof L=="function"&&L instanceof L&&g.call(L)==U},c=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{},b="[object Symbol]",n=/^\s+|\s+$/g,P="\\u0300-\\u036f\\ufe20-\\ufe23",u="[\\ud800-\\udfff]",i="["+P+"\\u20d0-\\u20f0]",t="\\ud83c[\\udffb-\\udfff]",O="[^\\ud800-\\udfff]",v="(?:\\ud83c[\\udde6-\\uddff]){2}",M="[\\ud800-\\udbff][\\udc00-\\udfff]",q="(?:"+i+"|"+t+")?",Q="[\\ufe0e\\ufe0f]?",Z=Q+q+("(?:\\u200d(?:"+[O,v,M].join("|")+")"+Q+q+")*"),te="(?:"+[O+i+"?",i,v,M,u].join("|")+")",G=RegExp(t+"(?="+t+")|"+te+Z,"g"),S=RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0\\ufe0e\\ufe0f]"),x=typeof self=="object"&&self&&self.Object===Object&&self,X=typeof c=="object"&&c&&c.Object===Object&&c||x||Function("return this")();function we(w,s,L){if(s!=s)return function(le,De,ie,ge){for(var ae=le.length,m=ie+(ge?1:-1);ge?m--:++m<ae;)if(De(le[m],m,le))return m;return-1}(w,E,L);for(var R=L-1,re=w.length;++R<re;)if(w[R]===s)return R;return-1}function E(w){return w!=w}function Ge(w){return function(s){return S.test(s)}(w)?function(s){return s.match(G)||[]}(w):function(s){return s.split("")}(w)}var f=Object.prototype.toString,W=X.Symbol,I=W?W.prototype:void 0,$=I?I.toString:void 0;function H(w){if(typeof w=="string")return w;if(function(L){return typeof L=="symbol"||function(R){return!!R&&typeof R=="object"}(L)&&f.call(L)==b}(w))return $?$.call(w):"";var s=w+"";return s=="0"&&1/w==-Infinity?"-0":s}function z(w,s,L){var R=w.length;return L=L===void 0?R:L,!s&&L>=R?w:function(re,le,De){var ie=-1,ge=re.length;le<0&&(le=-le>ge?0:ge+le),(De=De>ge?ge:De)<0&&(De+=ge),ge=le>De?0:De-le>>>0,le>>>=0;for(var ae=Array(ge);++ie<ge;)ae[ie]=re[ie+le];return ae}(w,s,L)}var xe=function(w,s,L){var R;if((w=(R=w)==null?"":H(R))&&(L||s===void 0))return w.replace(n,"");if(!w||!(s=H(s)))return w;var re=Ge(w),le=Ge(s);return z(re,function(De,ie){for(var ge=-1,ae=De.length;++ge<ae&&we(ie,De[ge],0)>-1;);return ge}(re,le),function(De,ie){for(var ge=De.length;ge--&&we(ie,De[ge],0)>-1;);return ge}(re,le)+1).join("")},ue="__lodash_hash_undefined__",ve=9007199254740991,oe=/^\[object .+?Constructor\]$/,Ce=typeof self=="object"&&self&&self.Object===Object&&self,Te=typeof c=="object"&&c&&c.Object===Object&&c||Ce||Function("return this")();function D(w,s,L){switch(L.length){case 0:return w.call(s);case 1:return w.call(s,L[0]);case 2:return w.call(s,L[0],L[1]);case 3:return w.call(s,L[0],L[1],L[2])}return w.apply(s,L)}function ee(w,s){return!!(w?w.length:0)&&function(L,R,re){if(R!=R)return function(ie,ge,ae,m){for(var Re=ie.length,or=ae+(m?1:-1);m?or--:++or<Re;)if(ge(ie[or],or,ie))return or;return-1}(L,j,re);for(var le=re-1,De=L.length;++le<De;)if(L[le]===R)return le;return-1}(w,s,0)>-1}function K(w,s,L){for(var R=-1,re=w?w.length:0;++R<re;)if(L(s,w[R]))return!0;return!1}function j(w){return w!=w}function se(w,s){return w.has(s)}var Ee,$e=Array.prototype,je=Function.prototype,We=Object.prototype,Ne=Te["__core-js_shared__"],V=(Ee=/[^.]+$/.exec(Ne&&Ne.keys&&Ne.keys.IE_PROTO||""))?"Symbol(src)_1."+Ee:"",ze=je.toString,kr=We.hasOwnProperty,lr=We.toString,_e=RegExp("^"+ze.call(kr).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),A=$e.splice,Je=Math.max,he=Jr(Te,"Map"),tr=Jr(Object,"create");function Ue(w){var s=-1,L=w?w.length:0;for(this.clear();++s<L;){var R=w[s];this.set(R[0],R[1])}}function Pe(w){var s=-1,L=w?w.length:0;for(this.clear();++s<L;){var R=w[s];this.set(R[0],R[1])}}function He(w){var s=-1,L=w?w.length:0;for(this.clear();++s<L;){var R=w[s];this.set(R[0],R[1])}}function Fe(w){var s=-1,L=w?w.length:0;for(this.__data__=new He;++s<L;)this.add(w[s])}function Me(w,s){for(var L,R,re=w.length;re--;)if((L=w[re][0])===(R=s)||L!=L&&R!=R)return re;return-1}function ir(w,s,L,R){var re=-1,le=ee,De=!0,ie=w.length,ge=[],ae=s.length;if(!ie)return ge;L&&(s=function(be,Ye){for(var sr=-1,k=be?be.length:0,Y=Array(k);++sr<k;)Y[sr]=Ye(be[sr],sr,be);return Y}(s,function(be){return function(Ye){return be(Ye)}}(L))),R?(le=K,De=!1):s.length>=200&&(le=se,De=!1,s=new Fe(s));e:for(;++re<ie;){var m=w[re],Re=L?L(m):m;if(m=R||m!==0?m:0,De&&Re==Re){for(var or=ae;or--;)if(s[or]===Re)continue e;ge.push(m)}else le(s,Re,R)||ge.push(m)}return ge}function fr(w){return!(!ft(w)||function(s){return!!V&&V in s}(w))&&(Mr(w)||function(s){var L=!1;if(s!=null&&typeof s.toString!="function")try{L=!!(s+"")}catch(R){}return L}(w)?_e:oe).test(function(s){if(s!=null){try{return ze.call(s)}catch(L){}try{return s+""}catch(L){}}return""}(w))}function Br(w,s){var L,R,re=w.__data__;return((R=typeof(L=s))=="string"||R=="number"||R=="symbol"||R=="boolean"?L!=="__proto__":L===null)?re[typeof s=="string"?"string":"hash"]:re.map}function Jr(w,s){var L=function(R,re){return R==null?void 0:R[re]}(w,s);return fr(L)?L:void 0}function Mr(w){var s=ft(w)?lr.call(w):"";return s=="[object Function]"||s=="[object GeneratorFunction]"}function ft(w){var s=typeof w;return!!w&&(s=="object"||s=="function")}Ue.prototype.clear=function(){this.__data__=tr?tr(null):{}},Ue.prototype.delete=function(w){return this.has(w)&&delete this.__data__[w]},Ue.prototype.get=function(w){var s=this.__data__;if(tr){var L=s[w];return L===ue?void 0:L}return kr.call(s,w)?s[w]:void 0},Ue.prototype.has=function(w){var s=this.__data__;return tr?s[w]!==void 0:kr.call(s,w)},Ue.prototype.set=function(w,s){return this.__data__[w]=tr&&s===void 0?ue:s,this},Pe.prototype.clear=function(){this.__data__=[]},Pe.prototype.delete=function(w){var s=this.__data__,L=Me(s,w);return!(L<0)&&(L==s.length-1?s.pop():A.call(s,L,1),!0)},Pe.prototype.get=function(w){var s=this.__data__,L=Me(s,w);return L<0?void 0:s[L][1]},Pe.prototype.has=function(w){return Me(this.__data__,w)>-1},Pe.prototype.set=function(w,s){var L=this.__data__,R=Me(L,w);return R<0?L.push([w,s]):L[R][1]=s,this},He.prototype.clear=function(){this.__data__={hash:new Ue,map:new(he||Pe),string:new Ue}},He.prototype.delete=function(w){return Br(this,w).delete(w)},He.prototype.get=function(w){return Br(this,w).get(w)},He.prototype.has=function(w){return Br(this,w).has(w)},He.prototype.set=function(w,s){return Br(this,w).set(w,s),this},Fe.prototype.add=Fe.prototype.push=function(w){return this.__data__.set(w,ue),this},Fe.prototype.has=function(w){return this.__data__.has(w)};var ut=function(w,s){return s=Je(s===void 0?w.length-1:s,0),function(){for(var L=arguments,R=-1,re=Je(L.length-s,0),le=Array(re);++R<re;)le[R]=L[s+R];R=-1;for(var De=Array(s+1);++R<s;)De[R]=L[R];return De[s]=le,D(w,this,De)}}(function(w,s){return function(R){return!!R&&typeof R=="object"}(L=w)&&function(R){return R!=null&&function(re){return typeof re=="number"&&re>-1&&re%1==0&&re<=ve}(R.length)&&!Mr(R)}(L)?ir(w,s):[];var L}),zr=Object.defineProperty({bodyRegExps:{xml:/&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g,html4:/&(?:nbsp|iexcl|cent|pound|curren|yen|brvbar|sect|uml|copy|ordf|laquo|not|shy|reg|macr|deg|plusmn|sup2|sup3|acute|micro|para|middot|cedil|sup1|ordm|raquo|frac14|frac12|frac34|iquest|Agrave|Aacute|Acirc|Atilde|Auml|Aring|AElig|Ccedil|Egrave|Eacute|Ecirc|Euml|Igrave|Iacute|Icirc|Iuml|ETH|Ntilde|Ograve|Oacute|Ocirc|Otilde|Ouml|times|Oslash|Ugrave|Uacute|Ucirc|Uuml|Yacute|THORN|szlig|agrave|aacute|acirc|atilde|auml|aring|aelig|ccedil|egrave|eacute|ecirc|euml|igrave|iacute|icirc|iuml|eth|ntilde|ograve|oacute|ocirc|otilde|ouml|divide|oslash|ugrave|uacute|ucirc|uuml|yacute|thorn|yuml|quot|amp|lt|gt|#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g,html5:/&(?:AElig|AMP|Aacute|Acirc|Agrave|Aring|Atilde|Auml|COPY|Ccedil|ETH|Eacute|Ecirc|Egrave|Euml|GT|Iacute|Icirc|Igrave|Iuml|LT|Ntilde|Oacute|Ocirc|Ograve|Oslash|Otilde|Ouml|QUOT|REG|THORN|Uacute|Ucirc|Ugrave|Uuml|Yacute|aacute|acirc|acute|aelig|agrave|amp|aring|atilde|auml|brvbar|ccedil|cedil|cent|copy|curren|deg|divide|eacute|ecirc|egrave|eth|euml|frac12|frac14|frac34|gt|iacute|icirc|iexcl|igrave|iquest|iuml|laquo|lt|macr|micro|middot|nbsp|not|ntilde|oacute|ocirc|ograve|ordf|ordm|oslash|otilde|ouml|para|plusmn|pound|quot|raquo|reg|sect|shy|sup1|sup2|sup3|szlig|thorn|times|uacute|ucirc|ugrave|uml|uuml|yacute|yen|yuml|#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g},namedReferences:{xml:{entities:{"&lt;":"<","&gt;":">","&quot;":'"',"&apos;":"'","&amp;":"&"},characters:{"<":"&lt;",">":"&gt;",'"':"&quot;","'":"&apos;","&":"&amp;"}},html4:{entities:{"&apos;":"'","&nbsp":"\xA0","&nbsp;":"\xA0","&iexcl":"\xA1","&iexcl;":"\xA1","&cent":"\xA2","&cent;":"\xA2","&pound":"\xA3","&pound;":"\xA3","&curren":"\xA4","&curren;":"\xA4","&yen":"\xA5","&yen;":"\xA5","&brvbar":"\xA6","&brvbar;":"\xA6","&sect":"\xA7","&sect;":"\xA7","&uml":"\xA8","&uml;":"\xA8","&copy":"\xA9","&copy;":"\xA9","&ordf":"\xAA","&ordf;":"\xAA","&laquo":"\xAB","&laquo;":"\xAB","&not":"\xAC","&not;":"\xAC","&shy":"\xAD","&shy;":"\xAD","&reg":"\xAE","&reg;":"\xAE","&macr":"\xAF","&macr;":"\xAF","&deg":"\xB0","&deg;":"\xB0","&plusmn":"\xB1","&plusmn;":"\xB1","&sup2":"\xB2","&sup2;":"\xB2","&sup3":"\xB3","&sup3;":"\xB3","&acute":"\xB4","&acute;":"\xB4","&micro":"\xB5","&micro;":"\xB5","&para":"\xB6","&para;":"\xB6","&middot":"\xB7","&middot;":"\xB7","&cedil":"\xB8","&cedil;":"\xB8","&sup1":"\xB9","&sup1;":"\xB9","&ordm":"\xBA","&ordm;":"\xBA","&raquo":"\xBB","&raquo;":"\xBB","&frac14":"\xBC","&frac14;":"\xBC","&frac12":"\xBD","&frac12;":"\xBD","&frac34":"\xBE","&frac34;":"\xBE","&iquest":"\xBF","&iquest;":"\xBF","&Agrave":"\xC0","&Agrave;":"\xC0","&Aacute":"\xC1","&Aacute;":"\xC1","&Acirc":"\xC2","&Acirc;":"\xC2","&Atilde":"\xC3","&Atilde;":"\xC3","&Auml":"\xC4","&Auml;":"\xC4","&Aring":"\xC5","&Aring;":"\xC5","&AElig":"\xC6","&AElig;":"\xC6","&Ccedil":"\xC7","&Ccedil;":"\xC7","&Egrave":"\xC8","&Egrave;":"\xC8","&Eacute":"\xC9","&Eacute;":"\xC9","&Ecirc":"\xCA","&Ecirc;":"\xCA","&Euml":"\xCB","&Euml;":"\xCB","&Igrave":"\xCC","&Igrave;":"\xCC","&Iacute":"\xCD","&Iacute;":"\xCD","&Icirc":"\xCE","&Icirc;":"\xCE","&Iuml":"\xCF","&Iuml;":"\xCF","&ETH":"\xD0","&ETH;":"\xD0","&Ntilde":"\xD1","&Ntilde;":"\xD1","&Ograve":"\xD2","&Ograve;":"\xD2","&Oacute":"\xD3","&Oacute;":"\xD3","&Ocirc":"\xD4","&Ocirc;":"\xD4","&Otilde":"\xD5","&Otilde;":"\xD5","&Ouml":"\xD6","&Ouml;":"\xD6","&times":"\xD7","&times;":"\xD7","&Oslash":"\xD8","&Oslash;":"\xD8","&Ugrave":"\xD9","&Ugrave;":"\xD9","&Uacute":"\xDA","&Uacute;":"\xDA","&Ucirc":"\xDB","&Ucirc;":"\xDB","&Uuml":"\xDC","&Uuml;":"\xDC","&Yacute":"\xDD","&Yacute;":"\xDD","&THORN":"\xDE","&THORN;":"\xDE","&szlig":"\xDF","&szlig;":"\xDF","&agrave":"\xE0","&agrave;":"\xE0","&aacute":"\xE1","&aacute;":"\xE1","&acirc":"\xE2","&acirc;":"\xE2","&atilde":"\xE3","&atilde;":"\xE3","&auml":"\xE4","&auml;":"\xE4","&aring":"\xE5","&aring;":"\xE5","&aelig":"\xE6","&aelig;":"\xE6","&ccedil":"\xE7","&ccedil;":"\xE7","&egrave":"\xE8","&egrave;":"\xE8","&eacute":"\xE9","&eacute;":"\xE9","&ecirc":"\xEA","&ecirc;":"\xEA","&euml":"\xEB","&euml;":"\xEB","&igrave":"\xEC","&igrave;":"\xEC","&iacute":"\xED","&iacute;":"\xED","&icirc":"\xEE","&icirc;":"\xEE","&iuml":"\xEF","&iuml;":"\xEF","&eth":"\xF0","&eth;":"\xF0","&ntilde":"\xF1","&ntilde;":"\xF1","&ograve":"\xF2","&ograve;":"\xF2","&oacute":"\xF3","&oacute;":"\xF3","&ocirc":"\xF4","&ocirc;":"\xF4","&otilde":"\xF5","&otilde;":"\xF5","&ouml":"\xF6","&ouml;":"\xF6","&divide":"\xF7","&divide;":"\xF7","&oslash":"\xF8","&oslash;":"\xF8","&ugrave":"\xF9","&ugrave;":"\xF9","&uacute":"\xFA","&uacute;":"\xFA","&ucirc":"\xFB","&ucirc;":"\xFB","&uuml":"\xFC","&uuml;":"\xFC","&yacute":"\xFD","&yacute;":"\xFD","&thorn":"\xFE","&thorn;":"\xFE","&yuml":"\xFF","&yuml;":"\xFF","&quot":'"',"&quot;":'"',"&amp":"&","&amp;":"&","&lt":"<","&lt;":"<","&gt":">","&gt;":">","&OElig;":"\u0152","&oelig;":"\u0153","&Scaron;":"\u0160","&scaron;":"\u0161","&Yuml;":"\u0178","&circ;":"\u02C6","&tilde;":"\u02DC","&ensp;":"\u2002","&emsp;":"\u2003","&thinsp;":"\u2009","&zwnj;":"\u200C","&zwj;":"\u200D","&lrm;":"\u200E","&rlm;":"\u200F","&ndash;":"\u2013","&mdash;":"\u2014","&lsquo;":"\u2018","&rsquo;":"\u2019","&sbquo;":"\u201A","&ldquo;":"\u201C","&rdquo;":"\u201D","&bdquo;":"\u201E","&dagger;":"\u2020","&Dagger;":"\u2021","&permil;":"\u2030","&lsaquo;":"\u2039","&rsaquo;":"\u203A","&euro;":"\u20AC","&fnof;":"\u0192","&Alpha;":"\u0391","&Beta;":"\u0392","&Gamma;":"\u0393","&Delta;":"\u0394","&Epsilon;":"\u0395","&Zeta;":"\u0396","&Eta;":"\u0397","&Theta;":"\u0398","&Iota;":"\u0399","&Kappa;":"\u039A","&Lambda;":"\u039B","&Mu;":"\u039C","&Nu;":"\u039D","&Xi;":"\u039E","&Omicron;":"\u039F","&Pi;":"\u03A0","&Rho;":"\u03A1","&Sigma;":"\u03A3","&Tau;":"\u03A4","&Upsilon;":"\u03A5","&Phi;":"\u03A6","&Chi;":"\u03A7","&Psi;":"\u03A8","&Omega;":"\u03A9","&alpha;":"\u03B1","&beta;":"\u03B2","&gamma;":"\u03B3","&delta;":"\u03B4","&epsilon;":"\u03B5","&zeta;":"\u03B6","&eta;":"\u03B7","&theta;":"\u03B8","&iota;":"\u03B9","&kappa;":"\u03BA","&lambda;":"\u03BB","&mu;":"\u03BC","&nu;":"\u03BD","&xi;":"\u03BE","&omicron;":"\u03BF","&pi;":"\u03C0","&rho;":"\u03C1","&sigmaf;":"\u03C2","&sigma;":"\u03C3","&tau;":"\u03C4","&upsilon;":"\u03C5","&phi;":"\u03C6","&chi;":"\u03C7","&psi;":"\u03C8","&omega;":"\u03C9","&thetasym;":"\u03D1","&upsih;":"\u03D2","&piv;":"\u03D6","&bull;":"\u2022","&hellip;":"\u2026","&prime;":"\u2032","&Prime;":"\u2033","&oline;":"\u203E","&frasl;":"\u2044","&weierp;":"\u2118","&image;":"\u2111","&real;":"\u211C","&trade;":"\u2122","&alefsym;":"\u2135","&larr;":"\u2190","&uarr;":"\u2191","&rarr;":"\u2192","&darr;":"\u2193","&harr;":"\u2194","&crarr;":"\u21B5","&lArr;":"\u21D0","&uArr;":"\u21D1","&rArr;":"\u21D2","&dArr;":"\u21D3","&hArr;":"\u21D4","&forall;":"\u2200","&part;":"\u2202","&exist;":"\u2203","&empty;":"\u2205","&nabla;":"\u2207","&isin;":"\u2208","&notin;":"\u2209","&ni;":"\u220B","&prod;":"\u220F","&sum;":"\u2211","&minus;":"\u2212","&lowast;":"\u2217","&radic;":"\u221A","&prop;":"\u221D","&infin;":"\u221E","&ang;":"\u2220","&and;":"\u2227","&or;":"\u2228","&cap;":"\u2229","&cup;":"\u222A","&int;":"\u222B","&there4;":"\u2234","&sim;":"\u223C","&cong;":"\u2245","&asymp;":"\u2248","&ne;":"\u2260","&equiv;":"\u2261","&le;":"\u2264","&ge;":"\u2265","&sub;":"\u2282","&sup;":"\u2283","&nsub;":"\u2284","&sube;":"\u2286","&supe;":"\u2287","&oplus;":"\u2295","&otimes;":"\u2297","&perp;":"\u22A5","&sdot;":"\u22C5","&lceil;":"\u2308","&rceil;":"\u2309","&lfloor;":"\u230A","&rfloor;":"\u230B","&lang;":"\u2329","&rang;":"\u232A","&loz;":"\u25CA","&spades;":"\u2660","&clubs;":"\u2663","&hearts;":"\u2665","&diams;":"\u2666"},characters:{"'":"&apos;","\xA0":"&nbsp;","\xA1":"&iexcl;","\xA2":"&cent;","\xA3":"&pound;","\xA4":"&curren;","\xA5":"&yen;","\xA6":"&brvbar;","\xA7":"&sect;","\xA8":"&uml;","\xA9":"&copy;",\u00AA:"&ordf;","\xAB":"&laquo;","\xAC":"&not;","\xAD":"&shy;","\xAE":"&reg;","\xAF":"&macr;","\xB0":"&deg;","\xB1":"&plusmn;","\xB2":"&sup2;","\xB3":"&sup3;","\xB4":"&acute;",\u00B5:"&micro;","\xB6":"&para;","\xB7":"&middot;","\xB8":"&cedil;","\xB9":"&sup1;",\u00BA:"&ordm;","\xBB":"&raquo;","\xBC":"&frac14;","\xBD":"&frac12;","\xBE":"&frac34;","\xBF":"&iquest;",\u00C0:"&Agrave;",\u00C1:"&Aacute;",\u00C2:"&Acirc;",\u00C3:"&Atilde;",\u00C4:"&Auml;",\u00C5:"&Aring;",\u00C6:"&AElig;",\u00C7:"&Ccedil;",\u00C8:"&Egrave;",\u00C9:"&Eacute;",\u00CA:"&Ecirc;",\u00CB:"&Euml;",\u00CC:"&Igrave;",\u00CD:"&Iacute;",\u00CE:"&Icirc;",\u00CF:"&Iuml;",\u00D0:"&ETH;",\u00D1:"&Ntilde;",\u00D2:"&Ograve;",\u00D3:"&Oacute;",\u00D4:"&Ocirc;",\u00D5:"&Otilde;",\u00D6:"&Ouml;","\xD7":"&times;",\u00D8:"&Oslash;",\u00D9:"&Ugrave;",\u00DA:"&Uacute;",\u00DB:"&Ucirc;",\u00DC:"&Uuml;",\u00DD:"&Yacute;",\u00DE:"&THORN;",\u00DF:"&szlig;",\u00E0:"&agrave;",\u00E1:"&aacute;",\u00E2:"&acirc;",\u00E3:"&atilde;",\u00E4:"&auml;",\u00E5:"&aring;",\u00E6:"&aelig;",\u00E7:"&ccedil;",\u00E8:"&egrave;",\u00E9:"&eacute;",\u00EA:"&ecirc;",\u00EB:"&euml;",\u00EC:"&igrave;",\u00ED:"&iacute;",\u00EE:"&icirc;",\u00EF:"&iuml;",\u00F0:"&eth;",\u00F1:"&ntilde;",\u00F2:"&ograve;",\u00F3:"&oacute;",\u00F4:"&ocirc;",\u00F5:"&otilde;",\u00F6:"&ouml;","\xF7":"&divide;",\u00F8:"&oslash;",\u00F9:"&ugrave;",\u00FA:"&uacute;",\u00FB:"&ucirc;",\u00FC:"&uuml;",\u00FD:"&yacute;",\u00FE:"&thorn;",\u00FF:"&yuml;",'"':"&quot;","&":"&amp;","<":"&lt;",">":"&gt;",\u0152:"&OElig;",\u0153:"&oelig;",\u0160:"&Scaron;",\u0161:"&scaron;",\u0178:"&Yuml;",\u02C6:"&circ;","\u02DC":"&tilde;","\u2002":"&ensp;","\u2003":"&emsp;","\u2009":"&thinsp;","\u200C":"&zwnj;","\u200D":"&zwj;","\u200E":"&lrm;","\u200F":"&rlm;","\u2013":"&ndash;","\u2014":"&mdash;","\u2018":"&lsquo;","\u2019":"&rsquo;","\u201A":"&sbquo;","\u201C":"&ldquo;","\u201D":"&rdquo;","\u201E":"&bdquo;","\u2020":"&dagger;","\u2021":"&Dagger;","\u2030":"&permil;","\u2039":"&lsaquo;","\u203A":"&rsaquo;","\u20AC":"&euro;",\u0192:"&fnof;",\u0391:"&Alpha;",\u0392:"&Beta;",\u0393:"&Gamma;",\u0394:"&Delta;",\u0395:"&Epsilon;",\u0396:"&Zeta;",\u0397:"&Eta;",\u0398:"&Theta;",\u0399:"&Iota;",\u039A:"&Kappa;",\u039B:"&Lambda;",\u039C:"&Mu;",\u039D:"&Nu;",\u039E:"&Xi;",\u039F:"&Omicron;",\u03A0:"&Pi;",\u03A1:"&Rho;",\u03A3:"&Sigma;",\u03A4:"&Tau;",\u03A5:"&Upsilon;",\u03A6:"&Phi;",\u03A7:"&Chi;",\u03A8:"&Psi;",\u03A9:"&Omega;",\u03B1:"&alpha;",\u03B2:"&beta;",\u03B3:"&gamma;",\u03B4:"&delta;",\u03B5:"&epsilon;",\u03B6:"&zeta;",\u03B7:"&eta;",\u03B8:"&theta;",\u03B9:"&iota;",\u03BA:"&kappa;",\u03BB:"&lambda;",\u03BC:"&mu;",\u03BD:"&nu;",\u03BE:"&xi;",\u03BF:"&omicron;",\u03C0:"&pi;",\u03C1:"&rho;",\u03C2:"&sigmaf;",\u03C3:"&sigma;",\u03C4:"&tau;",\u03C5:"&upsilon;",\u03C6:"&phi;",\u03C7:"&chi;",\u03C8:"&psi;",\u03C9:"&omega;",\u03D1:"&thetasym;",\u03D2:"&upsih;",\u03D6:"&piv;","\u2022":"&bull;","\u2026":"&hellip;","\u2032":"&prime;","\u2033":"&Prime;","\u203E":"&oline;","\u2044":"&frasl;",\u2118:"&weierp;",\u2111:"&image;",\u211C:"&real;","\u2122":"&trade;",\u2135:"&alefsym;","\u2190":"&larr;","\u2191":"&uarr;","\u2192":"&rarr;","\u2193":"&darr;","\u2194":"&harr;","\u21B5":"&crarr;","\u21D0":"&lArr;","\u21D1":"&uArr;","\u21D2":"&rArr;","\u21D3":"&dArr;","\u21D4":"&hArr;","\u2200":"&forall;","\u2202":"&part;","\u2203":"&exist;","\u2205":"&empty;","\u2207":"&nabla;","\u2208":"&isin;","\u2209":"&notin;","\u220B":"&ni;","\u220F":"&prod;","\u2211":"&sum;","\u2212":"&minus;","\u2217":"&lowast;","\u221A":"&radic;","\u221D":"&prop;","\u221E":"&infin;","\u2220":"&ang;","\u2227":"&and;","\u2228":"&or;","\u2229":"&cap;","\u222A":"&cup;","\u222B":"&int;","\u2234":"&there4;","\u223C":"&sim;","\u2245":"&cong;","\u2248":"&asymp;","\u2260":"&ne;","\u2261":"&equiv;","\u2264":"&le;","\u2265":"&ge;","\u2282":"&sub;","\u2283":"&sup;","\u2284":"&nsub;","\u2286":"&sube;","\u2287":"&supe;","\u2295":"&oplus;","\u2297":"&otimes;","\u22A5":"&perp;","\u22C5":"&sdot;","\u2308":"&lceil;","\u2309":"&rceil;","\u230A":"&lfloor;","\u230B":"&rfloor;","\u2329":"&lang;","\u232A":"&rang;","\u25CA":"&loz;","\u2660":"&spades;","\u2663":"&clubs;","\u2665":"&hearts;","\u2666":"&diams;"}},html5:{entities:{"&AElig":"\xC6","&AElig;":"\xC6","&AMP":"&","&AMP;":"&","&Aacute":"\xC1","&Aacute;":"\xC1","&Abreve;":"\u0102","&Acirc":"\xC2","&Acirc;":"\xC2","&Acy;":"\u0410","&Afr;":"\u{1D504}","&Agrave":"\xC0","&Agrave;":"\xC0","&Alpha;":"\u0391","&Amacr;":"\u0100","&And;":"\u2A53","&Aogon;":"\u0104","&Aopf;":"\u{1D538}","&ApplyFunction;":"\u2061","&Aring":"\xC5","&Aring;":"\xC5","&Ascr;":"\u{1D49C}","&Assign;":"\u2254","&Atilde":"\xC3","&Atilde;":"\xC3","&Auml":"\xC4","&Auml;":"\xC4","&Backslash;":"\u2216","&Barv;":"\u2AE7","&Barwed;":"\u2306","&Bcy;":"\u0411","&Because;":"\u2235","&Bernoullis;":"\u212C","&Beta;":"\u0392","&Bfr;":"\u{1D505}","&Bopf;":"\u{1D539}","&Breve;":"\u02D8","&Bscr;":"\u212C","&Bumpeq;":"\u224E","&CHcy;":"\u0427","&COPY":"\xA9","&COPY;":"\xA9","&Cacute;":"\u0106","&Cap;":"\u22D2","&CapitalDifferentialD;":"\u2145","&Cayleys;":"\u212D","&Ccaron;":"\u010C","&Ccedil":"\xC7","&Ccedil;":"\xC7","&Ccirc;":"\u0108","&Cconint;":"\u2230","&Cdot;":"\u010A","&Cedilla;":"\xB8","&CenterDot;":"\xB7","&Cfr;":"\u212D","&Chi;":"\u03A7","&CircleDot;":"\u2299","&CircleMinus;":"\u2296","&CirclePlus;":"\u2295","&CircleTimes;":"\u2297","&ClockwiseContourIntegral;":"\u2232","&CloseCurlyDoubleQuote;":"\u201D","&CloseCurlyQuote;":"\u2019","&Colon;":"\u2237","&Colone;":"\u2A74","&Congruent;":"\u2261","&Conint;":"\u222F","&ContourIntegral;":"\u222E","&Copf;":"\u2102","&Coproduct;":"\u2210","&CounterClockwiseContourIntegral;":"\u2233","&Cross;":"\u2A2F","&Cscr;":"\u{1D49E}","&Cup;":"\u22D3","&CupCap;":"\u224D","&DD;":"\u2145","&DDotrahd;":"\u2911","&DJcy;":"\u0402","&DScy;":"\u0405","&DZcy;":"\u040F","&Dagger;":"\u2021","&Darr;":"\u21A1","&Dashv;":"\u2AE4","&Dcaron;":"\u010E","&Dcy;":"\u0414","&Del;":"\u2207","&Delta;":"\u0394","&Dfr;":"\u{1D507}","&DiacriticalAcute;":"\xB4","&DiacriticalDot;":"\u02D9","&DiacriticalDoubleAcute;":"\u02DD","&DiacriticalGrave;":"`","&DiacriticalTilde;":"\u02DC","&Diamond;":"\u22C4","&DifferentialD;":"\u2146","&Dopf;":"\u{1D53B}","&Dot;":"\xA8","&DotDot;":"\u20DC","&DotEqual;":"\u2250","&DoubleContourIntegral;":"\u222F","&DoubleDot;":"\xA8","&DoubleDownArrow;":"\u21D3","&DoubleLeftArrow;":"\u21D0","&DoubleLeftRightArrow;":"\u21D4","&DoubleLeftTee;":"\u2AE4","&DoubleLongLeftArrow;":"\u27F8","&DoubleLongLeftRightArrow;":"\u27FA","&DoubleLongRightArrow;":"\u27F9","&DoubleRightArrow;":"\u21D2","&DoubleRightTee;":"\u22A8","&DoubleUpArrow;":"\u21D1","&DoubleUpDownArrow;":"\u21D5","&DoubleVerticalBar;":"\u2225","&DownArrow;":"\u2193","&DownArrowBar;":"\u2913","&DownArrowUpArrow;":"\u21F5","&DownBreve;":"\u0311","&DownLeftRightVector;":"\u2950","&DownLeftTeeVector;":"\u295E","&DownLeftVector;":"\u21BD","&DownLeftVectorBar;":"\u2956","&DownRightTeeVector;":"\u295F","&DownRightVector;":"\u21C1","&DownRightVectorBar;":"\u2957","&DownTee;":"\u22A4","&DownTeeArrow;":"\u21A7","&Downarrow;":"\u21D3","&Dscr;":"\u{1D49F}","&Dstrok;":"\u0110","&ENG;":"\u014A","&ETH":"\xD0","&ETH;":"\xD0","&Eacute":"\xC9","&Eacute;":"\xC9","&Ecaron;":"\u011A","&Ecirc":"\xCA","&Ecirc;":"\xCA","&Ecy;":"\u042D","&Edot;":"\u0116","&Efr;":"\u{1D508}","&Egrave":"\xC8","&Egrave;":"\xC8","&Element;":"\u2208","&Emacr;":"\u0112","&EmptySmallSquare;":"\u25FB","&EmptyVerySmallSquare;":"\u25AB","&Eogon;":"\u0118","&Eopf;":"\u{1D53C}","&Epsilon;":"\u0395","&Equal;":"\u2A75","&EqualTilde;":"\u2242","&Equilibrium;":"\u21CC","&Escr;":"\u2130","&Esim;":"\u2A73","&Eta;":"\u0397","&Euml":"\xCB","&Euml;":"\xCB","&Exists;":"\u2203","&ExponentialE;":"\u2147","&Fcy;":"\u0424","&Ffr;":"\u{1D509}","&FilledSmallSquare;":"\u25FC","&FilledVerySmallSquare;":"\u25AA","&Fopf;":"\u{1D53D}","&ForAll;":"\u2200","&Fouriertrf;":"\u2131","&Fscr;":"\u2131","&GJcy;":"\u0403","&GT":">","&GT;":">","&Gamma;":"\u0393","&Gammad;":"\u03DC","&Gbreve;":"\u011E","&Gcedil;":"\u0122","&Gcirc;":"\u011C","&Gcy;":"\u0413","&Gdot;":"\u0120","&Gfr;":"\u{1D50A}","&Gg;":"\u22D9","&Gopf;":"\u{1D53E}","&GreaterEqual;":"\u2265","&GreaterEqualLess;":"\u22DB","&GreaterFullEqual;":"\u2267","&GreaterGreater;":"\u2AA2","&GreaterLess;":"\u2277","&GreaterSlantEqual;":"\u2A7E","&GreaterTilde;":"\u2273","&Gscr;":"\u{1D4A2}","&Gt;":"\u226B","&HARDcy;":"\u042A","&Hacek;":"\u02C7","&Hat;":"^","&Hcirc;":"\u0124","&Hfr;":"\u210C","&HilbertSpace;":"\u210B","&Hopf;":"\u210D","&HorizontalLine;":"\u2500","&Hscr;":"\u210B","&Hstrok;":"\u0126","&HumpDownHump;":"\u224E","&HumpEqual;":"\u224F","&IEcy;":"\u0415","&IJlig;":"\u0132","&IOcy;":"\u0401","&Iacute":"\xCD","&Iacute;":"\xCD","&Icirc":"\xCE","&Icirc;":"\xCE","&Icy;":"\u0418","&Idot;":"\u0130","&Ifr;":"\u2111","&Igrave":"\xCC","&Igrave;":"\xCC","&Im;":"\u2111","&Imacr;":"\u012A","&ImaginaryI;":"\u2148","&Implies;":"\u21D2","&Int;":"\u222C","&Integral;":"\u222B","&Intersection;":"\u22C2","&InvisibleComma;":"\u2063","&InvisibleTimes;":"\u2062","&Iogon;":"\u012E","&Iopf;":"\u{1D540}","&Iota;":"\u0399","&Iscr;":"\u2110","&Itilde;":"\u0128","&Iukcy;":"\u0406","&Iuml":"\xCF","&Iuml;":"\xCF","&Jcirc;":"\u0134","&Jcy;":"\u0419","&Jfr;":"\u{1D50D}","&Jopf;":"\u{1D541}","&Jscr;":"\u{1D4A5}","&Jsercy;":"\u0408","&Jukcy;":"\u0404","&KHcy;":"\u0425","&KJcy;":"\u040C","&Kappa;":"\u039A","&Kcedil;":"\u0136","&Kcy;":"\u041A","&Kfr;":"\u{1D50E}","&Kopf;":"\u{1D542}","&Kscr;":"\u{1D4A6}","&LJcy;":"\u0409","&LT":"<","&LT;":"<","&Lacute;":"\u0139","&Lambda;":"\u039B","&Lang;":"\u27EA","&Laplacetrf;":"\u2112","&Larr;":"\u219E","&Lcaron;":"\u013D","&Lcedil;":"\u013B","&Lcy;":"\u041B","&LeftAngleBracket;":"\u27E8","&LeftArrow;":"\u2190","&LeftArrowBar;":"\u21E4","&LeftArrowRightArrow;":"\u21C6","&LeftCeiling;":"\u2308","&LeftDoubleBracket;":"\u27E6","&LeftDownTeeVector;":"\u2961","&LeftDownVector;":"\u21C3","&LeftDownVectorBar;":"\u2959","&LeftFloor;":"\u230A","&LeftRightArrow;":"\u2194","&LeftRightVector;":"\u294E","&LeftTee;":"\u22A3","&LeftTeeArrow;":"\u21A4","&LeftTeeVector;":"\u295A","&LeftTriangle;":"\u22B2","&LeftTriangleBar;":"\u29CF","&LeftTriangleEqual;":"\u22B4","&LeftUpDownVector;":"\u2951","&LeftUpTeeVector;":"\u2960","&LeftUpVector;":"\u21BF","&LeftUpVectorBar;":"\u2958","&LeftVector;":"\u21BC","&LeftVectorBar;":"\u2952","&Leftarrow;":"\u21D0","&Leftrightarrow;":"\u21D4","&LessEqualGreater;":"\u22DA","&LessFullEqual;":"\u2266","&LessGreater;":"\u2276","&LessLess;":"\u2AA1","&LessSlantEqual;":"\u2A7D","&LessTilde;":"\u2272","&Lfr;":"\u{1D50F}","&Ll;":"\u22D8","&Lleftarrow;":"\u21DA","&Lmidot;":"\u013F","&LongLeftArrow;":"\u27F5","&LongLeftRightArrow;":"\u27F7","&LongRightArrow;":"\u27F6","&Longleftarrow;":"\u27F8","&Longleftrightarrow;":"\u27FA","&Longrightarrow;":"\u27F9","&Lopf;":"\u{1D543}","&LowerLeftArrow;":"\u2199","&LowerRightArrow;":"\u2198","&Lscr;":"\u2112","&Lsh;":"\u21B0","&Lstrok;":"\u0141","&Lt;":"\u226A","&Map;":"\u2905","&Mcy;":"\u041C","&MediumSpace;":"\u205F","&Mellintrf;":"\u2133","&Mfr;":"\u{1D510}","&MinusPlus;":"\u2213","&Mopf;":"\u{1D544}","&Mscr;":"\u2133","&Mu;":"\u039C","&NJcy;":"\u040A","&Nacute;":"\u0143","&Ncaron;":"\u0147","&Ncedil;":"\u0145","&Ncy;":"\u041D","&NegativeMediumSpace;":"\u200B","&NegativeThickSpace;":"\u200B","&NegativeThinSpace;":"\u200B","&NegativeVeryThinSpace;":"\u200B","&NestedGreaterGreater;":"\u226B","&NestedLessLess;":"\u226A","&NewLine;":`
`,"&Nfr;":"\u{1D511}","&NoBreak;":"\u2060","&NonBreakingSpace;":"\xA0","&Nopf;":"\u2115","&Not;":"\u2AEC","&NotCongruent;":"\u2262","&NotCupCap;":"\u226D","&NotDoubleVerticalBar;":"\u2226","&NotElement;":"\u2209","&NotEqual;":"\u2260","&NotEqualTilde;":"\u2242\u0338","&NotExists;":"\u2204","&NotGreater;":"\u226F","&NotGreaterEqual;":"\u2271","&NotGreaterFullEqual;":"\u2267\u0338","&NotGreaterGreater;":"\u226B\u0338","&NotGreaterLess;":"\u2279","&NotGreaterSlantEqual;":"\u2A7E\u0338","&NotGreaterTilde;":"\u2275","&NotHumpDownHump;":"\u224E\u0338","&NotHumpEqual;":"\u224F\u0338","&NotLeftTriangle;":"\u22EA","&NotLeftTriangleBar;":"\u29CF\u0338","&NotLeftTriangleEqual;":"\u22EC","&NotLess;":"\u226E","&NotLessEqual;":"\u2270","&NotLessGreater;":"\u2278","&NotLessLess;":"\u226A\u0338","&NotLessSlantEqual;":"\u2A7D\u0338","&NotLessTilde;":"\u2274","&NotNestedGreaterGreater;":"\u2AA2\u0338","&NotNestedLessLess;":"\u2AA1\u0338","&NotPrecedes;":"\u2280","&NotPrecedesEqual;":"\u2AAF\u0338","&NotPrecedesSlantEqual;":"\u22E0","&NotReverseElement;":"\u220C","&NotRightTriangle;":"\u22EB","&NotRightTriangleBar;":"\u29D0\u0338","&NotRightTriangleEqual;":"\u22ED","&NotSquareSubset;":"\u228F\u0338","&NotSquareSubsetEqual;":"\u22E2","&NotSquareSuperset;":"\u2290\u0338","&NotSquareSupersetEqual;":"\u22E3","&NotSubset;":"\u2282\u20D2","&NotSubsetEqual;":"\u2288","&NotSucceeds;":"\u2281","&NotSucceedsEqual;":"\u2AB0\u0338","&NotSucceedsSlantEqual;":"\u22E1","&NotSucceedsTilde;":"\u227F\u0338","&NotSuperset;":"\u2283\u20D2","&NotSupersetEqual;":"\u2289","&NotTilde;":"\u2241","&NotTildeEqual;":"\u2244","&NotTildeFullEqual;":"\u2247","&NotTildeTilde;":"\u2249","&NotVerticalBar;":"\u2224","&Nscr;":"\u{1D4A9}","&Ntilde":"\xD1","&Ntilde;":"\xD1","&Nu;":"\u039D","&OElig;":"\u0152","&Oacute":"\xD3","&Oacute;":"\xD3","&Ocirc":"\xD4","&Ocirc;":"\xD4","&Ocy;":"\u041E","&Odblac;":"\u0150","&Ofr;":"\u{1D512}","&Ograve":"\xD2","&Ograve;":"\xD2","&Omacr;":"\u014C","&Omega;":"\u03A9","&Omicron;":"\u039F","&Oopf;":"\u{1D546}","&OpenCurlyDoubleQuote;":"\u201C","&OpenCurlyQuote;":"\u2018","&Or;":"\u2A54","&Oscr;":"\u{1D4AA}","&Oslash":"\xD8","&Oslash;":"\xD8","&Otilde":"\xD5","&Otilde;":"\xD5","&Otimes;":"\u2A37","&Ouml":"\xD6","&Ouml;":"\xD6","&OverBar;":"\u203E","&OverBrace;":"\u23DE","&OverBracket;":"\u23B4","&OverParenthesis;":"\u23DC","&PartialD;":"\u2202","&Pcy;":"\u041F","&Pfr;":"\u{1D513}","&Phi;":"\u03A6","&Pi;":"\u03A0","&PlusMinus;":"\xB1","&Poincareplane;":"\u210C","&Popf;":"\u2119","&Pr;":"\u2ABB","&Precedes;":"\u227A","&PrecedesEqual;":"\u2AAF","&PrecedesSlantEqual;":"\u227C","&PrecedesTilde;":"\u227E","&Prime;":"\u2033","&Product;":"\u220F","&Proportion;":"\u2237","&Proportional;":"\u221D","&Pscr;":"\u{1D4AB}","&Psi;":"\u03A8","&QUOT":'"',"&QUOT;":'"',"&Qfr;":"\u{1D514}","&Qopf;":"\u211A","&Qscr;":"\u{1D4AC}","&RBarr;":"\u2910","&REG":"\xAE","&REG;":"\xAE","&Racute;":"\u0154","&Rang;":"\u27EB","&Rarr;":"\u21A0","&Rarrtl;":"\u2916","&Rcaron;":"\u0158","&Rcedil;":"\u0156","&Rcy;":"\u0420","&Re;":"\u211C","&ReverseElement;":"\u220B","&ReverseEquilibrium;":"\u21CB","&ReverseUpEquilibrium;":"\u296F","&Rfr;":"\u211C","&Rho;":"\u03A1","&RightAngleBracket;":"\u27E9","&RightArrow;":"\u2192","&RightArrowBar;":"\u21E5","&RightArrowLeftArrow;":"\u21C4","&RightCeiling;":"\u2309","&RightDoubleBracket;":"\u27E7","&RightDownTeeVector;":"\u295D","&RightDownVector;":"\u21C2","&RightDownVectorBar;":"\u2955","&RightFloor;":"\u230B","&RightTee;":"\u22A2","&RightTeeArrow;":"\u21A6","&RightTeeVector;":"\u295B","&RightTriangle;":"\u22B3","&RightTriangleBar;":"\u29D0","&RightTriangleEqual;":"\u22B5","&RightUpDownVector;":"\u294F","&RightUpTeeVector;":"\u295C","&RightUpVector;":"\u21BE","&RightUpVectorBar;":"\u2954","&RightVector;":"\u21C0","&RightVectorBar;":"\u2953","&Rightarrow;":"\u21D2","&Ropf;":"\u211D","&RoundImplies;":"\u2970","&Rrightarrow;":"\u21DB","&Rscr;":"\u211B","&Rsh;":"\u21B1","&RuleDelayed;":"\u29F4","&SHCHcy;":"\u0429","&SHcy;":"\u0428","&SOFTcy;":"\u042C","&Sacute;":"\u015A","&Sc;":"\u2ABC","&Scaron;":"\u0160","&Scedil;":"\u015E","&Scirc;":"\u015C","&Scy;":"\u0421","&Sfr;":"\u{1D516}","&ShortDownArrow;":"\u2193","&ShortLeftArrow;":"\u2190","&ShortRightArrow;":"\u2192","&ShortUpArrow;":"\u2191","&Sigma;":"\u03A3","&SmallCircle;":"\u2218","&Sopf;":"\u{1D54A}","&Sqrt;":"\u221A","&Square;":"\u25A1","&SquareIntersection;":"\u2293","&SquareSubset;":"\u228F","&SquareSubsetEqual;":"\u2291","&SquareSuperset;":"\u2290","&SquareSupersetEqual;":"\u2292","&SquareUnion;":"\u2294","&Sscr;":"\u{1D4AE}","&Star;":"\u22C6","&Sub;":"\u22D0","&Subset;":"\u22D0","&SubsetEqual;":"\u2286","&Succeeds;":"\u227B","&SucceedsEqual;":"\u2AB0","&SucceedsSlantEqual;":"\u227D","&SucceedsTilde;":"\u227F","&SuchThat;":"\u220B","&Sum;":"\u2211","&Sup;":"\u22D1","&Superset;":"\u2283","&SupersetEqual;":"\u2287","&Supset;":"\u22D1","&THORN":"\xDE","&THORN;":"\xDE","&TRADE;":"\u2122","&TSHcy;":"\u040B","&TScy;":"\u0426","&Tab;":"	","&Tau;":"\u03A4","&Tcaron;":"\u0164","&Tcedil;":"\u0162","&Tcy;":"\u0422","&Tfr;":"\u{1D517}","&Therefore;":"\u2234","&Theta;":"\u0398","&ThickSpace;":"\u205F\u200A","&ThinSpace;":"\u2009","&Tilde;":"\u223C","&TildeEqual;":"\u2243","&TildeFullEqual;":"\u2245","&TildeTilde;":"\u2248","&Topf;":"\u{1D54B}","&TripleDot;":"\u20DB","&Tscr;":"\u{1D4AF}","&Tstrok;":"\u0166","&Uacute":"\xDA","&Uacute;":"\xDA","&Uarr;":"\u219F","&Uarrocir;":"\u2949","&Ubrcy;":"\u040E","&Ubreve;":"\u016C","&Ucirc":"\xDB","&Ucirc;":"\xDB","&Ucy;":"\u0423","&Udblac;":"\u0170","&Ufr;":"\u{1D518}","&Ugrave":"\xD9","&Ugrave;":"\xD9","&Umacr;":"\u016A","&UnderBar;":"_","&UnderBrace;":"\u23DF","&UnderBracket;":"\u23B5","&UnderParenthesis;":"\u23DD","&Union;":"\u22C3","&UnionPlus;":"\u228E","&Uogon;":"\u0172","&Uopf;":"\u{1D54C}","&UpArrow;":"\u2191","&UpArrowBar;":"\u2912","&UpArrowDownArrow;":"\u21C5","&UpDownArrow;":"\u2195","&UpEquilibrium;":"\u296E","&UpTee;":"\u22A5","&UpTeeArrow;":"\u21A5","&Uparrow;":"\u21D1","&Updownarrow;":"\u21D5","&UpperLeftArrow;":"\u2196","&UpperRightArrow;":"\u2197","&Upsi;":"\u03D2","&Upsilon;":"\u03A5","&Uring;":"\u016E","&Uscr;":"\u{1D4B0}","&Utilde;":"\u0168","&Uuml":"\xDC","&Uuml;":"\xDC","&VDash;":"\u22AB","&Vbar;":"\u2AEB","&Vcy;":"\u0412","&Vdash;":"\u22A9","&Vdashl;":"\u2AE6","&Vee;":"\u22C1","&Verbar;":"\u2016","&Vert;":"\u2016","&VerticalBar;":"\u2223","&VerticalLine;":"|","&VerticalSeparator;":"\u2758","&VerticalTilde;":"\u2240","&VeryThinSpace;":"\u200A","&Vfr;":"\u{1D519}","&Vopf;":"\u{1D54D}","&Vscr;":"\u{1D4B1}","&Vvdash;":"\u22AA","&Wcirc;":"\u0174","&Wedge;":"\u22C0","&Wfr;":"\u{1D51A}","&Wopf;":"\u{1D54E}","&Wscr;":"\u{1D4B2}","&Xfr;":"\u{1D51B}","&Xi;":"\u039E","&Xopf;":"\u{1D54F}","&Xscr;":"\u{1D4B3}","&YAcy;":"\u042F","&YIcy;":"\u0407","&YUcy;":"\u042E","&Yacute":"\xDD","&Yacute;":"\xDD","&Ycirc;":"\u0176","&Ycy;":"\u042B","&Yfr;":"\u{1D51C}","&Yopf;":"\u{1D550}","&Yscr;":"\u{1D4B4}","&Yuml;":"\u0178","&ZHcy;":"\u0416","&Zacute;":"\u0179","&Zcaron;":"\u017D","&Zcy;":"\u0417","&Zdot;":"\u017B","&ZeroWidthSpace;":"\u200B","&Zeta;":"\u0396","&Zfr;":"\u2128","&Zopf;":"\u2124","&Zscr;":"\u{1D4B5}","&aacute":"\xE1","&aacute;":"\xE1","&abreve;":"\u0103","&ac;":"\u223E","&acE;":"\u223E\u0333","&acd;":"\u223F","&acirc":"\xE2","&acirc;":"\xE2","&acute":"\xB4","&acute;":"\xB4","&acy;":"\u0430","&aelig":"\xE6","&aelig;":"\xE6","&af;":"\u2061","&afr;":"\u{1D51E}","&agrave":"\xE0","&agrave;":"\xE0","&alefsym;":"\u2135","&aleph;":"\u2135","&alpha;":"\u03B1","&amacr;":"\u0101","&amalg;":"\u2A3F","&amp":"&","&amp;":"&","&and;":"\u2227","&andand;":"\u2A55","&andd;":"\u2A5C","&andslope;":"\u2A58","&andv;":"\u2A5A","&ang;":"\u2220","&ange;":"\u29A4","&angle;":"\u2220","&angmsd;":"\u2221","&angmsdaa;":"\u29A8","&angmsdab;":"\u29A9","&angmsdac;":"\u29AA","&angmsdad;":"\u29AB","&angmsdae;":"\u29AC","&angmsdaf;":"\u29AD","&angmsdag;":"\u29AE","&angmsdah;":"\u29AF","&angrt;":"\u221F","&angrtvb;":"\u22BE","&angrtvbd;":"\u299D","&angsph;":"\u2222","&angst;":"\xC5","&angzarr;":"\u237C","&aogon;":"\u0105","&aopf;":"\u{1D552}","&ap;":"\u2248","&apE;":"\u2A70","&apacir;":"\u2A6F","&ape;":"\u224A","&apid;":"\u224B","&apos;":"'","&approx;":"\u2248","&approxeq;":"\u224A","&aring":"\xE5","&aring;":"\xE5","&ascr;":"\u{1D4B6}","&ast;":"*","&asymp;":"\u2248","&asympeq;":"\u224D","&atilde":"\xE3","&atilde;":"\xE3","&auml":"\xE4","&auml;":"\xE4","&awconint;":"\u2233","&awint;":"\u2A11","&bNot;":"\u2AED","&backcong;":"\u224C","&backepsilon;":"\u03F6","&backprime;":"\u2035","&backsim;":"\u223D","&backsimeq;":"\u22CD","&barvee;":"\u22BD","&barwed;":"\u2305","&barwedge;":"\u2305","&bbrk;":"\u23B5","&bbrktbrk;":"\u23B6","&bcong;":"\u224C","&bcy;":"\u0431","&bdquo;":"\u201E","&becaus;":"\u2235","&because;":"\u2235","&bemptyv;":"\u29B0","&bepsi;":"\u03F6","&bernou;":"\u212C","&beta;":"\u03B2","&beth;":"\u2136","&between;":"\u226C","&bfr;":"\u{1D51F}","&bigcap;":"\u22C2","&bigcirc;":"\u25EF","&bigcup;":"\u22C3","&bigodot;":"\u2A00","&bigoplus;":"\u2A01","&bigotimes;":"\u2A02","&bigsqcup;":"\u2A06","&bigstar;":"\u2605","&bigtriangledown;":"\u25BD","&bigtriangleup;":"\u25B3","&biguplus;":"\u2A04","&bigvee;":"\u22C1","&bigwedge;":"\u22C0","&bkarow;":"\u290D","&blacklozenge;":"\u29EB","&blacksquare;":"\u25AA","&blacktriangle;":"\u25B4","&blacktriangledown;":"\u25BE","&blacktriangleleft;":"\u25C2","&blacktriangleright;":"\u25B8","&blank;":"\u2423","&blk12;":"\u2592","&blk14;":"\u2591","&blk34;":"\u2593","&block;":"\u2588","&bne;":"=\u20E5","&bnequiv;":"\u2261\u20E5","&bnot;":"\u2310","&bopf;":"\u{1D553}","&bot;":"\u22A5","&bottom;":"\u22A5","&bowtie;":"\u22C8","&boxDL;":"\u2557","&boxDR;":"\u2554","&boxDl;":"\u2556","&boxDr;":"\u2553","&boxH;":"\u2550","&boxHD;":"\u2566","&boxHU;":"\u2569","&boxHd;":"\u2564","&boxHu;":"\u2567","&boxUL;":"\u255D","&boxUR;":"\u255A","&boxUl;":"\u255C","&boxUr;":"\u2559","&boxV;":"\u2551","&boxVH;":"\u256C","&boxVL;":"\u2563","&boxVR;":"\u2560","&boxVh;":"\u256B","&boxVl;":"\u2562","&boxVr;":"\u255F","&boxbox;":"\u29C9","&boxdL;":"\u2555","&boxdR;":"\u2552","&boxdl;":"\u2510","&boxdr;":"\u250C","&boxh;":"\u2500","&boxhD;":"\u2565","&boxhU;":"\u2568","&boxhd;":"\u252C","&boxhu;":"\u2534","&boxminus;":"\u229F","&boxplus;":"\u229E","&boxtimes;":"\u22A0","&boxuL;":"\u255B","&boxuR;":"\u2558","&boxul;":"\u2518","&boxur;":"\u2514","&boxv;":"\u2502","&boxvH;":"\u256A","&boxvL;":"\u2561","&boxvR;":"\u255E","&boxvh;":"\u253C","&boxvl;":"\u2524","&boxvr;":"\u251C","&bprime;":"\u2035","&breve;":"\u02D8","&brvbar":"\xA6","&brvbar;":"\xA6","&bscr;":"\u{1D4B7}","&bsemi;":"\u204F","&bsim;":"\u223D","&bsime;":"\u22CD","&bsol;":"\\","&bsolb;":"\u29C5","&bsolhsub;":"\u27C8","&bull;":"\u2022","&bullet;":"\u2022","&bump;":"\u224E","&bumpE;":"\u2AAE","&bumpe;":"\u224F","&bumpeq;":"\u224F","&cacute;":"\u0107","&cap;":"\u2229","&capand;":"\u2A44","&capbrcup;":"\u2A49","&capcap;":"\u2A4B","&capcup;":"\u2A47","&capdot;":"\u2A40","&caps;":"\u2229\uFE00","&caret;":"\u2041","&caron;":"\u02C7","&ccaps;":"\u2A4D","&ccaron;":"\u010D","&ccedil":"\xE7","&ccedil;":"\xE7","&ccirc;":"\u0109","&ccups;":"\u2A4C","&ccupssm;":"\u2A50","&cdot;":"\u010B","&cedil":"\xB8","&cedil;":"\xB8","&cemptyv;":"\u29B2","&cent":"\xA2","&cent;":"\xA2","&centerdot;":"\xB7","&cfr;":"\u{1D520}","&chcy;":"\u0447","&check;":"\u2713","&checkmark;":"\u2713","&chi;":"\u03C7","&cir;":"\u25CB","&cirE;":"\u29C3","&circ;":"\u02C6","&circeq;":"\u2257","&circlearrowleft;":"\u21BA","&circlearrowright;":"\u21BB","&circledR;":"\xAE","&circledS;":"\u24C8","&circledast;":"\u229B","&circledcirc;":"\u229A","&circleddash;":"\u229D","&cire;":"\u2257","&cirfnint;":"\u2A10","&cirmid;":"\u2AEF","&cirscir;":"\u29C2","&clubs;":"\u2663","&clubsuit;":"\u2663","&colon;":":","&colone;":"\u2254","&coloneq;":"\u2254","&comma;":",","&commat;":"@","&comp;":"\u2201","&compfn;":"\u2218","&complement;":"\u2201","&complexes;":"\u2102","&cong;":"\u2245","&congdot;":"\u2A6D","&conint;":"\u222E","&copf;":"\u{1D554}","&coprod;":"\u2210","&copy":"\xA9","&copy;":"\xA9","&copysr;":"\u2117","&crarr;":"\u21B5","&cross;":"\u2717","&cscr;":"\u{1D4B8}","&csub;":"\u2ACF","&csube;":"\u2AD1","&csup;":"\u2AD0","&csupe;":"\u2AD2","&ctdot;":"\u22EF","&cudarrl;":"\u2938","&cudarrr;":"\u2935","&cuepr;":"\u22DE","&cuesc;":"\u22DF","&cularr;":"\u21B6","&cularrp;":"\u293D","&cup;":"\u222A","&cupbrcap;":"\u2A48","&cupcap;":"\u2A46","&cupcup;":"\u2A4A","&cupdot;":"\u228D","&cupor;":"\u2A45","&cups;":"\u222A\uFE00","&curarr;":"\u21B7","&curarrm;":"\u293C","&curlyeqprec;":"\u22DE","&curlyeqsucc;":"\u22DF","&curlyvee;":"\u22CE","&curlywedge;":"\u22CF","&curren":"\xA4","&curren;":"\xA4","&curvearrowleft;":"\u21B6","&curvearrowright;":"\u21B7","&cuvee;":"\u22CE","&cuwed;":"\u22CF","&cwconint;":"\u2232","&cwint;":"\u2231","&cylcty;":"\u232D","&dArr;":"\u21D3","&dHar;":"\u2965","&dagger;":"\u2020","&daleth;":"\u2138","&darr;":"\u2193","&dash;":"\u2010","&dashv;":"\u22A3","&dbkarow;":"\u290F","&dblac;":"\u02DD","&dcaron;":"\u010F","&dcy;":"\u0434","&dd;":"\u2146","&ddagger;":"\u2021","&ddarr;":"\u21CA","&ddotseq;":"\u2A77","&deg":"\xB0","&deg;":"\xB0","&delta;":"\u03B4","&demptyv;":"\u29B1","&dfisht;":"\u297F","&dfr;":"\u{1D521}","&dharl;":"\u21C3","&dharr;":"\u21C2","&diam;":"\u22C4","&diamond;":"\u22C4","&diamondsuit;":"\u2666","&diams;":"\u2666","&die;":"\xA8","&digamma;":"\u03DD","&disin;":"\u22F2","&div;":"\xF7","&divide":"\xF7","&divide;":"\xF7","&divideontimes;":"\u22C7","&divonx;":"\u22C7","&djcy;":"\u0452","&dlcorn;":"\u231E","&dlcrop;":"\u230D","&dollar;":"$","&dopf;":"\u{1D555}","&dot;":"\u02D9","&doteq;":"\u2250","&doteqdot;":"\u2251","&dotminus;":"\u2238","&dotplus;":"\u2214","&dotsquare;":"\u22A1","&doublebarwedge;":"\u2306","&downarrow;":"\u2193","&downdownarrows;":"\u21CA","&downharpoonleft;":"\u21C3","&downharpoonright;":"\u21C2","&drbkarow;":"\u2910","&drcorn;":"\u231F","&drcrop;":"\u230C","&dscr;":"\u{1D4B9}","&dscy;":"\u0455","&dsol;":"\u29F6","&dstrok;":"\u0111","&dtdot;":"\u22F1","&dtri;":"\u25BF","&dtrif;":"\u25BE","&duarr;":"\u21F5","&duhar;":"\u296F","&dwangle;":"\u29A6","&dzcy;":"\u045F","&dzigrarr;":"\u27FF","&eDDot;":"\u2A77","&eDot;":"\u2251","&eacute":"\xE9","&eacute;":"\xE9","&easter;":"\u2A6E","&ecaron;":"\u011B","&ecir;":"\u2256","&ecirc":"\xEA","&ecirc;":"\xEA","&ecolon;":"\u2255","&ecy;":"\u044D","&edot;":"\u0117","&ee;":"\u2147","&efDot;":"\u2252","&efr;":"\u{1D522}","&eg;":"\u2A9A","&egrave":"\xE8","&egrave;":"\xE8","&egs;":"\u2A96","&egsdot;":"\u2A98","&el;":"\u2A99","&elinters;":"\u23E7","&ell;":"\u2113","&els;":"\u2A95","&elsdot;":"\u2A97","&emacr;":"\u0113","&empty;":"\u2205","&emptyset;":"\u2205","&emptyv;":"\u2205","&emsp13;":"\u2004","&emsp14;":"\u2005","&emsp;":"\u2003","&eng;":"\u014B","&ensp;":"\u2002","&eogon;":"\u0119","&eopf;":"\u{1D556}","&epar;":"\u22D5","&eparsl;":"\u29E3","&eplus;":"\u2A71","&epsi;":"\u03B5","&epsilon;":"\u03B5","&epsiv;":"\u03F5","&eqcirc;":"\u2256","&eqcolon;":"\u2255","&eqsim;":"\u2242","&eqslantgtr;":"\u2A96","&eqslantless;":"\u2A95","&equals;":"=","&equest;":"\u225F","&equiv;":"\u2261","&equivDD;":"\u2A78","&eqvparsl;":"\u29E5","&erDot;":"\u2253","&erarr;":"\u2971","&escr;":"\u212F","&esdot;":"\u2250","&esim;":"\u2242","&eta;":"\u03B7","&eth":"\xF0","&eth;":"\xF0","&euml":"\xEB","&euml;":"\xEB","&euro;":"\u20AC","&excl;":"!","&exist;":"\u2203","&expectation;":"\u2130","&exponentiale;":"\u2147","&fallingdotseq;":"\u2252","&fcy;":"\u0444","&female;":"\u2640","&ffilig;":"\uFB03","&fflig;":"\uFB00","&ffllig;":"\uFB04","&ffr;":"\u{1D523}","&filig;":"\uFB01","&fjlig;":"fj","&flat;":"\u266D","&fllig;":"\uFB02","&fltns;":"\u25B1","&fnof;":"\u0192","&fopf;":"\u{1D557}","&forall;":"\u2200","&fork;":"\u22D4","&forkv;":"\u2AD9","&fpartint;":"\u2A0D","&frac12":"\xBD","&frac12;":"\xBD","&frac13;":"\u2153","&frac14":"\xBC","&frac14;":"\xBC","&frac15;":"\u2155","&frac16;":"\u2159","&frac18;":"\u215B","&frac23;":"\u2154","&frac25;":"\u2156","&frac34":"\xBE","&frac34;":"\xBE","&frac35;":"\u2157","&frac38;":"\u215C","&frac45;":"\u2158","&frac56;":"\u215A","&frac58;":"\u215D","&frac78;":"\u215E","&frasl;":"\u2044","&frown;":"\u2322","&fscr;":"\u{1D4BB}","&gE;":"\u2267","&gEl;":"\u2A8C","&gacute;":"\u01F5","&gamma;":"\u03B3","&gammad;":"\u03DD","&gap;":"\u2A86","&gbreve;":"\u011F","&gcirc;":"\u011D","&gcy;":"\u0433","&gdot;":"\u0121","&ge;":"\u2265","&gel;":"\u22DB","&geq;":"\u2265","&geqq;":"\u2267","&geqslant;":"\u2A7E","&ges;":"\u2A7E","&gescc;":"\u2AA9","&gesdot;":"\u2A80","&gesdoto;":"\u2A82","&gesdotol;":"\u2A84","&gesl;":"\u22DB\uFE00","&gesles;":"\u2A94","&gfr;":"\u{1D524}","&gg;":"\u226B","&ggg;":"\u22D9","&gimel;":"\u2137","&gjcy;":"\u0453","&gl;":"\u2277","&glE;":"\u2A92","&gla;":"\u2AA5","&glj;":"\u2AA4","&gnE;":"\u2269","&gnap;":"\u2A8A","&gnapprox;":"\u2A8A","&gne;":"\u2A88","&gneq;":"\u2A88","&gneqq;":"\u2269","&gnsim;":"\u22E7","&gopf;":"\u{1D558}","&grave;":"`","&gscr;":"\u210A","&gsim;":"\u2273","&gsime;":"\u2A8E","&gsiml;":"\u2A90","&gt":">","&gt;":">","&gtcc;":"\u2AA7","&gtcir;":"\u2A7A","&gtdot;":"\u22D7","&gtlPar;":"\u2995","&gtquest;":"\u2A7C","&gtrapprox;":"\u2A86","&gtrarr;":"\u2978","&gtrdot;":"\u22D7","&gtreqless;":"\u22DB","&gtreqqless;":"\u2A8C","&gtrless;":"\u2277","&gtrsim;":"\u2273","&gvertneqq;":"\u2269\uFE00","&gvnE;":"\u2269\uFE00","&hArr;":"\u21D4","&hairsp;":"\u200A","&half;":"\xBD","&hamilt;":"\u210B","&hardcy;":"\u044A","&harr;":"\u2194","&harrcir;":"\u2948","&harrw;":"\u21AD","&hbar;":"\u210F","&hcirc;":"\u0125","&hearts;":"\u2665","&heartsuit;":"\u2665","&hellip;":"\u2026","&hercon;":"\u22B9","&hfr;":"\u{1D525}","&hksearow;":"\u2925","&hkswarow;":"\u2926","&hoarr;":"\u21FF","&homtht;":"\u223B","&hookleftarrow;":"\u21A9","&hookrightarrow;":"\u21AA","&hopf;":"\u{1D559}","&horbar;":"\u2015","&hscr;":"\u{1D4BD}","&hslash;":"\u210F","&hstrok;":"\u0127","&hybull;":"\u2043","&hyphen;":"\u2010","&iacute":"\xED","&iacute;":"\xED","&ic;":"\u2063","&icirc":"\xEE","&icirc;":"\xEE","&icy;":"\u0438","&iecy;":"\u0435","&iexcl":"\xA1","&iexcl;":"\xA1","&iff;":"\u21D4","&ifr;":"\u{1D526}","&igrave":"\xEC","&igrave;":"\xEC","&ii;":"\u2148","&iiiint;":"\u2A0C","&iiint;":"\u222D","&iinfin;":"\u29DC","&iiota;":"\u2129","&ijlig;":"\u0133","&imacr;":"\u012B","&image;":"\u2111","&imagline;":"\u2110","&imagpart;":"\u2111","&imath;":"\u0131","&imof;":"\u22B7","&imped;":"\u01B5","&in;":"\u2208","&incare;":"\u2105","&infin;":"\u221E","&infintie;":"\u29DD","&inodot;":"\u0131","&int;":"\u222B","&intcal;":"\u22BA","&integers;":"\u2124","&intercal;":"\u22BA","&intlarhk;":"\u2A17","&intprod;":"\u2A3C","&iocy;":"\u0451","&iogon;":"\u012F","&iopf;":"\u{1D55A}","&iota;":"\u03B9","&iprod;":"\u2A3C","&iquest":"\xBF","&iquest;":"\xBF","&iscr;":"\u{1D4BE}","&isin;":"\u2208","&isinE;":"\u22F9","&isindot;":"\u22F5","&isins;":"\u22F4","&isinsv;":"\u22F3","&isinv;":"\u2208","&it;":"\u2062","&itilde;":"\u0129","&iukcy;":"\u0456","&iuml":"\xEF","&iuml;":"\xEF","&jcirc;":"\u0135","&jcy;":"\u0439","&jfr;":"\u{1D527}","&jmath;":"\u0237","&jopf;":"\u{1D55B}","&jscr;":"\u{1D4BF}","&jsercy;":"\u0458","&jukcy;":"\u0454","&kappa;":"\u03BA","&kappav;":"\u03F0","&kcedil;":"\u0137","&kcy;":"\u043A","&kfr;":"\u{1D528}","&kgreen;":"\u0138","&khcy;":"\u0445","&kjcy;":"\u045C","&kopf;":"\u{1D55C}","&kscr;":"\u{1D4C0}","&lAarr;":"\u21DA","&lArr;":"\u21D0","&lAtail;":"\u291B","&lBarr;":"\u290E","&lE;":"\u2266","&lEg;":"\u2A8B","&lHar;":"\u2962","&lacute;":"\u013A","&laemptyv;":"\u29B4","&lagran;":"\u2112","&lambda;":"\u03BB","&lang;":"\u27E8","&langd;":"\u2991","&langle;":"\u27E8","&lap;":"\u2A85","&laquo":"\xAB","&laquo;":"\xAB","&larr;":"\u2190","&larrb;":"\u21E4","&larrbfs;":"\u291F","&larrfs;":"\u291D","&larrhk;":"\u21A9","&larrlp;":"\u21AB","&larrpl;":"\u2939","&larrsim;":"\u2973","&larrtl;":"\u21A2","&lat;":"\u2AAB","&latail;":"\u2919","&late;":"\u2AAD","&lates;":"\u2AAD\uFE00","&lbarr;":"\u290C","&lbbrk;":"\u2772","&lbrace;":"{","&lbrack;":"[","&lbrke;":"\u298B","&lbrksld;":"\u298F","&lbrkslu;":"\u298D","&lcaron;":"\u013E","&lcedil;":"\u013C","&lceil;":"\u2308","&lcub;":"{","&lcy;":"\u043B","&ldca;":"\u2936","&ldquo;":"\u201C","&ldquor;":"\u201E","&ldrdhar;":"\u2967","&ldrushar;":"\u294B","&ldsh;":"\u21B2","&le;":"\u2264","&leftarrow;":"\u2190","&leftarrowtail;":"\u21A2","&leftharpoondown;":"\u21BD","&leftharpoonup;":"\u21BC","&leftleftarrows;":"\u21C7","&leftrightarrow;":"\u2194","&leftrightarrows;":"\u21C6","&leftrightharpoons;":"\u21CB","&leftrightsquigarrow;":"\u21AD","&leftthreetimes;":"\u22CB","&leg;":"\u22DA","&leq;":"\u2264","&leqq;":"\u2266","&leqslant;":"\u2A7D","&les;":"\u2A7D","&lescc;":"\u2AA8","&lesdot;":"\u2A7F","&lesdoto;":"\u2A81","&lesdotor;":"\u2A83","&lesg;":"\u22DA\uFE00","&lesges;":"\u2A93","&lessapprox;":"\u2A85","&lessdot;":"\u22D6","&lesseqgtr;":"\u22DA","&lesseqqgtr;":"\u2A8B","&lessgtr;":"\u2276","&lesssim;":"\u2272","&lfisht;":"\u297C","&lfloor;":"\u230A","&lfr;":"\u{1D529}","&lg;":"\u2276","&lgE;":"\u2A91","&lhard;":"\u21BD","&lharu;":"\u21BC","&lharul;":"\u296A","&lhblk;":"\u2584","&ljcy;":"\u0459","&ll;":"\u226A","&llarr;":"\u21C7","&llcorner;":"\u231E","&llhard;":"\u296B","&lltri;":"\u25FA","&lmidot;":"\u0140","&lmoust;":"\u23B0","&lmoustache;":"\u23B0","&lnE;":"\u2268","&lnap;":"\u2A89","&lnapprox;":"\u2A89","&lne;":"\u2A87","&lneq;":"\u2A87","&lneqq;":"\u2268","&lnsim;":"\u22E6","&loang;":"\u27EC","&loarr;":"\u21FD","&lobrk;":"\u27E6","&longleftarrow;":"\u27F5","&longleftrightarrow;":"\u27F7","&longmapsto;":"\u27FC","&longrightarrow;":"\u27F6","&looparrowleft;":"\u21AB","&looparrowright;":"\u21AC","&lopar;":"\u2985","&lopf;":"\u{1D55D}","&loplus;":"\u2A2D","&lotimes;":"\u2A34","&lowast;":"\u2217","&lowbar;":"_","&loz;":"\u25CA","&lozenge;":"\u25CA","&lozf;":"\u29EB","&lpar;":"(","&lparlt;":"\u2993","&lrarr;":"\u21C6","&lrcorner;":"\u231F","&lrhar;":"\u21CB","&lrhard;":"\u296D","&lrm;":"\u200E","&lrtri;":"\u22BF","&lsaquo;":"\u2039","&lscr;":"\u{1D4C1}","&lsh;":"\u21B0","&lsim;":"\u2272","&lsime;":"\u2A8D","&lsimg;":"\u2A8F","&lsqb;":"[","&lsquo;":"\u2018","&lsquor;":"\u201A","&lstrok;":"\u0142","&lt":"<","&lt;":"<","&ltcc;":"\u2AA6","&ltcir;":"\u2A79","&ltdot;":"\u22D6","&lthree;":"\u22CB","&ltimes;":"\u22C9","&ltlarr;":"\u2976","&ltquest;":"\u2A7B","&ltrPar;":"\u2996","&ltri;":"\u25C3","&ltrie;":"\u22B4","&ltrif;":"\u25C2","&lurdshar;":"\u294A","&luruhar;":"\u2966","&lvertneqq;":"\u2268\uFE00","&lvnE;":"\u2268\uFE00","&mDDot;":"\u223A","&macr":"\xAF","&macr;":"\xAF","&male;":"\u2642","&malt;":"\u2720","&maltese;":"\u2720","&map;":"\u21A6","&mapsto;":"\u21A6","&mapstodown;":"\u21A7","&mapstoleft;":"\u21A4","&mapstoup;":"\u21A5","&marker;":"\u25AE","&mcomma;":"\u2A29","&mcy;":"\u043C","&mdash;":"\u2014","&measuredangle;":"\u2221","&mfr;":"\u{1D52A}","&mho;":"\u2127","&micro":"\xB5","&micro;":"\xB5","&mid;":"\u2223","&midast;":"*","&midcir;":"\u2AF0","&middot":"\xB7","&middot;":"\xB7","&minus;":"\u2212","&minusb;":"\u229F","&minusd;":"\u2238","&minusdu;":"\u2A2A","&mlcp;":"\u2ADB","&mldr;":"\u2026","&mnplus;":"\u2213","&models;":"\u22A7","&mopf;":"\u{1D55E}","&mp;":"\u2213","&mscr;":"\u{1D4C2}","&mstpos;":"\u223E","&mu;":"\u03BC","&multimap;":"\u22B8","&mumap;":"\u22B8","&nGg;":"\u22D9\u0338","&nGt;":"\u226B\u20D2","&nGtv;":"\u226B\u0338","&nLeftarrow;":"\u21CD","&nLeftrightarrow;":"\u21CE","&nLl;":"\u22D8\u0338","&nLt;":"\u226A\u20D2","&nLtv;":"\u226A\u0338","&nRightarrow;":"\u21CF","&nVDash;":"\u22AF","&nVdash;":"\u22AE","&nabla;":"\u2207","&nacute;":"\u0144","&nang;":"\u2220\u20D2","&nap;":"\u2249","&napE;":"\u2A70\u0338","&napid;":"\u224B\u0338","&napos;":"\u0149","&napprox;":"\u2249","&natur;":"\u266E","&natural;":"\u266E","&naturals;":"\u2115","&nbsp":"\xA0","&nbsp;":"\xA0","&nbump;":"\u224E\u0338","&nbumpe;":"\u224F\u0338","&ncap;":"\u2A43","&ncaron;":"\u0148","&ncedil;":"\u0146","&ncong;":"\u2247","&ncongdot;":"\u2A6D\u0338","&ncup;":"\u2A42","&ncy;":"\u043D","&ndash;":"\u2013","&ne;":"\u2260","&neArr;":"\u21D7","&nearhk;":"\u2924","&nearr;":"\u2197","&nearrow;":"\u2197","&nedot;":"\u2250\u0338","&nequiv;":"\u2262","&nesear;":"\u2928","&nesim;":"\u2242\u0338","&nexist;":"\u2204","&nexists;":"\u2204","&nfr;":"\u{1D52B}","&ngE;":"\u2267\u0338","&nge;":"\u2271","&ngeq;":"\u2271","&ngeqq;":"\u2267\u0338","&ngeqslant;":"\u2A7E\u0338","&nges;":"\u2A7E\u0338","&ngsim;":"\u2275","&ngt;":"\u226F","&ngtr;":"\u226F","&nhArr;":"\u21CE","&nharr;":"\u21AE","&nhpar;":"\u2AF2","&ni;":"\u220B","&nis;":"\u22FC","&nisd;":"\u22FA","&niv;":"\u220B","&njcy;":"\u045A","&nlArr;":"\u21CD","&nlE;":"\u2266\u0338","&nlarr;":"\u219A","&nldr;":"\u2025","&nle;":"\u2270","&nleftarrow;":"\u219A","&nleftrightarrow;":"\u21AE","&nleq;":"\u2270","&nleqq;":"\u2266\u0338","&nleqslant;":"\u2A7D\u0338","&nles;":"\u2A7D\u0338","&nless;":"\u226E","&nlsim;":"\u2274","&nlt;":"\u226E","&nltri;":"\u22EA","&nltrie;":"\u22EC","&nmid;":"\u2224","&nopf;":"\u{1D55F}","&not":"\xAC","&not;":"\xAC","&notin;":"\u2209","&notinE;":"\u22F9\u0338","&notindot;":"\u22F5\u0338","&notinva;":"\u2209","&notinvb;":"\u22F7","&notinvc;":"\u22F6","&notni;":"\u220C","&notniva;":"\u220C","&notnivb;":"\u22FE","&notnivc;":"\u22FD","&npar;":"\u2226","&nparallel;":"\u2226","&nparsl;":"\u2AFD\u20E5","&npart;":"\u2202\u0338","&npolint;":"\u2A14","&npr;":"\u2280","&nprcue;":"\u22E0","&npre;":"\u2AAF\u0338","&nprec;":"\u2280","&npreceq;":"\u2AAF\u0338","&nrArr;":"\u21CF","&nrarr;":"\u219B","&nrarrc;":"\u2933\u0338","&nrarrw;":"\u219D\u0338","&nrightarrow;":"\u219B","&nrtri;":"\u22EB","&nrtrie;":"\u22ED","&nsc;":"\u2281","&nsccue;":"\u22E1","&nsce;":"\u2AB0\u0338","&nscr;":"\u{1D4C3}","&nshortmid;":"\u2224","&nshortparallel;":"\u2226","&nsim;":"\u2241","&nsime;":"\u2244","&nsimeq;":"\u2244","&nsmid;":"\u2224","&nspar;":"\u2226","&nsqsube;":"\u22E2","&nsqsupe;":"\u22E3","&nsub;":"\u2284","&nsubE;":"\u2AC5\u0338","&nsube;":"\u2288","&nsubset;":"\u2282\u20D2","&nsubseteq;":"\u2288","&nsubseteqq;":"\u2AC5\u0338","&nsucc;":"\u2281","&nsucceq;":"\u2AB0\u0338","&nsup;":"\u2285","&nsupE;":"\u2AC6\u0338","&nsupe;":"\u2289","&nsupset;":"\u2283\u20D2","&nsupseteq;":"\u2289","&nsupseteqq;":"\u2AC6\u0338","&ntgl;":"\u2279","&ntilde":"\xF1","&ntilde;":"\xF1","&ntlg;":"\u2278","&ntriangleleft;":"\u22EA","&ntrianglelefteq;":"\u22EC","&ntriangleright;":"\u22EB","&ntrianglerighteq;":"\u22ED","&nu;":"\u03BD","&num;":"#","&numero;":"\u2116","&numsp;":"\u2007","&nvDash;":"\u22AD","&nvHarr;":"\u2904","&nvap;":"\u224D\u20D2","&nvdash;":"\u22AC","&nvge;":"\u2265\u20D2","&nvgt;":">\u20D2","&nvinfin;":"\u29DE","&nvlArr;":"\u2902","&nvle;":"\u2264\u20D2","&nvlt;":"<\u20D2","&nvltrie;":"\u22B4\u20D2","&nvrArr;":"\u2903","&nvrtrie;":"\u22B5\u20D2","&nvsim;":"\u223C\u20D2","&nwArr;":"\u21D6","&nwarhk;":"\u2923","&nwarr;":"\u2196","&nwarrow;":"\u2196","&nwnear;":"\u2927","&oS;":"\u24C8","&oacute":"\xF3","&oacute;":"\xF3","&oast;":"\u229B","&ocir;":"\u229A","&ocirc":"\xF4","&ocirc;":"\xF4","&ocy;":"\u043E","&odash;":"\u229D","&odblac;":"\u0151","&odiv;":"\u2A38","&odot;":"\u2299","&odsold;":"\u29BC","&oelig;":"\u0153","&ofcir;":"\u29BF","&ofr;":"\u{1D52C}","&ogon;":"\u02DB","&ograve":"\xF2","&ograve;":"\xF2","&ogt;":"\u29C1","&ohbar;":"\u29B5","&ohm;":"\u03A9","&oint;":"\u222E","&olarr;":"\u21BA","&olcir;":"\u29BE","&olcross;":"\u29BB","&oline;":"\u203E","&olt;":"\u29C0","&omacr;":"\u014D","&omega;":"\u03C9","&omicron;":"\u03BF","&omid;":"\u29B6","&ominus;":"\u2296","&oopf;":"\u{1D560}","&opar;":"\u29B7","&operp;":"\u29B9","&oplus;":"\u2295","&or;":"\u2228","&orarr;":"\u21BB","&ord;":"\u2A5D","&order;":"\u2134","&orderof;":"\u2134","&ordf":"\xAA","&ordf;":"\xAA","&ordm":"\xBA","&ordm;":"\xBA","&origof;":"\u22B6","&oror;":"\u2A56","&orslope;":"\u2A57","&orv;":"\u2A5B","&oscr;":"\u2134","&oslash":"\xF8","&oslash;":"\xF8","&osol;":"\u2298","&otilde":"\xF5","&otilde;":"\xF5","&otimes;":"\u2297","&otimesas;":"\u2A36","&ouml":"\xF6","&ouml;":"\xF6","&ovbar;":"\u233D","&par;":"\u2225","&para":"\xB6","&para;":"\xB6","&parallel;":"\u2225","&parsim;":"\u2AF3","&parsl;":"\u2AFD","&part;":"\u2202","&pcy;":"\u043F","&percnt;":"%","&period;":".","&permil;":"\u2030","&perp;":"\u22A5","&pertenk;":"\u2031","&pfr;":"\u{1D52D}","&phi;":"\u03C6","&phiv;":"\u03D5","&phmmat;":"\u2133","&phone;":"\u260E","&pi;":"\u03C0","&pitchfork;":"\u22D4","&piv;":"\u03D6","&planck;":"\u210F","&planckh;":"\u210E","&plankv;":"\u210F","&plus;":"+","&plusacir;":"\u2A23","&plusb;":"\u229E","&pluscir;":"\u2A22","&plusdo;":"\u2214","&plusdu;":"\u2A25","&pluse;":"\u2A72","&plusmn":"\xB1","&plusmn;":"\xB1","&plussim;":"\u2A26","&plustwo;":"\u2A27","&pm;":"\xB1","&pointint;":"\u2A15","&popf;":"\u{1D561}","&pound":"\xA3","&pound;":"\xA3","&pr;":"\u227A","&prE;":"\u2AB3","&prap;":"\u2AB7","&prcue;":"\u227C","&pre;":"\u2AAF","&prec;":"\u227A","&precapprox;":"\u2AB7","&preccurlyeq;":"\u227C","&preceq;":"\u2AAF","&precnapprox;":"\u2AB9","&precneqq;":"\u2AB5","&precnsim;":"\u22E8","&precsim;":"\u227E","&prime;":"\u2032","&primes;":"\u2119","&prnE;":"\u2AB5","&prnap;":"\u2AB9","&prnsim;":"\u22E8","&prod;":"\u220F","&profalar;":"\u232E","&profline;":"\u2312","&profsurf;":"\u2313","&prop;":"\u221D","&propto;":"\u221D","&prsim;":"\u227E","&prurel;":"\u22B0","&pscr;":"\u{1D4C5}","&psi;":"\u03C8","&puncsp;":"\u2008","&qfr;":"\u{1D52E}","&qint;":"\u2A0C","&qopf;":"\u{1D562}","&qprime;":"\u2057","&qscr;":"\u{1D4C6}","&quaternions;":"\u210D","&quatint;":"\u2A16","&quest;":"?","&questeq;":"\u225F","&quot":'"',"&quot;":'"',"&rAarr;":"\u21DB","&rArr;":"\u21D2","&rAtail;":"\u291C","&rBarr;":"\u290F","&rHar;":"\u2964","&race;":"\u223D\u0331","&racute;":"\u0155","&radic;":"\u221A","&raemptyv;":"\u29B3","&rang;":"\u27E9","&rangd;":"\u2992","&range;":"\u29A5","&rangle;":"\u27E9","&raquo":"\xBB","&raquo;":"\xBB","&rarr;":"\u2192","&rarrap;":"\u2975","&rarrb;":"\u21E5","&rarrbfs;":"\u2920","&rarrc;":"\u2933","&rarrfs;":"\u291E","&rarrhk;":"\u21AA","&rarrlp;":"\u21AC","&rarrpl;":"\u2945","&rarrsim;":"\u2974","&rarrtl;":"\u21A3","&rarrw;":"\u219D","&ratail;":"\u291A","&ratio;":"\u2236","&rationals;":"\u211A","&rbarr;":"\u290D","&rbbrk;":"\u2773","&rbrace;":"}","&rbrack;":"]","&rbrke;":"\u298C","&rbrksld;":"\u298E","&rbrkslu;":"\u2990","&rcaron;":"\u0159","&rcedil;":"\u0157","&rceil;":"\u2309","&rcub;":"}","&rcy;":"\u0440","&rdca;":"\u2937","&rdldhar;":"\u2969","&rdquo;":"\u201D","&rdquor;":"\u201D","&rdsh;":"\u21B3","&real;":"\u211C","&realine;":"\u211B","&realpart;":"\u211C","&reals;":"\u211D","&rect;":"\u25AD","&reg":"\xAE","&reg;":"\xAE","&rfisht;":"\u297D","&rfloor;":"\u230B","&rfr;":"\u{1D52F}","&rhard;":"\u21C1","&rharu;":"\u21C0","&rharul;":"\u296C","&rho;":"\u03C1","&rhov;":"\u03F1","&rightarrow;":"\u2192","&rightarrowtail;":"\u21A3","&rightharpoondown;":"\u21C1","&rightharpoonup;":"\u21C0","&rightleftarrows;":"\u21C4","&rightleftharpoons;":"\u21CC","&rightrightarrows;":"\u21C9","&rightsquigarrow;":"\u219D","&rightthreetimes;":"\u22CC","&ring;":"\u02DA","&risingdotseq;":"\u2253","&rlarr;":"\u21C4","&rlhar;":"\u21CC","&rlm;":"\u200F","&rmoust;":"\u23B1","&rmoustache;":"\u23B1","&rnmid;":"\u2AEE","&roang;":"\u27ED","&roarr;":"\u21FE","&robrk;":"\u27E7","&ropar;":"\u2986","&ropf;":"\u{1D563}","&roplus;":"\u2A2E","&rotimes;":"\u2A35","&rpar;":")","&rpargt;":"\u2994","&rppolint;":"\u2A12","&rrarr;":"\u21C9","&rsaquo;":"\u203A","&rscr;":"\u{1D4C7}","&rsh;":"\u21B1","&rsqb;":"]","&rsquo;":"\u2019","&rsquor;":"\u2019","&rthree;":"\u22CC","&rtimes;":"\u22CA","&rtri;":"\u25B9","&rtrie;":"\u22B5","&rtrif;":"\u25B8","&rtriltri;":"\u29CE","&ruluhar;":"\u2968","&rx;":"\u211E","&sacute;":"\u015B","&sbquo;":"\u201A","&sc;":"\u227B","&scE;":"\u2AB4","&scap;":"\u2AB8","&scaron;":"\u0161","&sccue;":"\u227D","&sce;":"\u2AB0","&scedil;":"\u015F","&scirc;":"\u015D","&scnE;":"\u2AB6","&scnap;":"\u2ABA","&scnsim;":"\u22E9","&scpolint;":"\u2A13","&scsim;":"\u227F","&scy;":"\u0441","&sdot;":"\u22C5","&sdotb;":"\u22A1","&sdote;":"\u2A66","&seArr;":"\u21D8","&searhk;":"\u2925","&searr;":"\u2198","&searrow;":"\u2198","&sect":"\xA7","&sect;":"\xA7","&semi;":";","&seswar;":"\u2929","&setminus;":"\u2216","&setmn;":"\u2216","&sext;":"\u2736","&sfr;":"\u{1D530}","&sfrown;":"\u2322","&sharp;":"\u266F","&shchcy;":"\u0449","&shcy;":"\u0448","&shortmid;":"\u2223","&shortparallel;":"\u2225","&shy":"\xAD","&shy;":"\xAD","&sigma;":"\u03C3","&sigmaf;":"\u03C2","&sigmav;":"\u03C2","&sim;":"\u223C","&simdot;":"\u2A6A","&sime;":"\u2243","&simeq;":"\u2243","&simg;":"\u2A9E","&simgE;":"\u2AA0","&siml;":"\u2A9D","&simlE;":"\u2A9F","&simne;":"\u2246","&simplus;":"\u2A24","&simrarr;":"\u2972","&slarr;":"\u2190","&smallsetminus;":"\u2216","&smashp;":"\u2A33","&smeparsl;":"\u29E4","&smid;":"\u2223","&smile;":"\u2323","&smt;":"\u2AAA","&smte;":"\u2AAC","&smtes;":"\u2AAC\uFE00","&softcy;":"\u044C","&sol;":"/","&solb;":"\u29C4","&solbar;":"\u233F","&sopf;":"\u{1D564}","&spades;":"\u2660","&spadesuit;":"\u2660","&spar;":"\u2225","&sqcap;":"\u2293","&sqcaps;":"\u2293\uFE00","&sqcup;":"\u2294","&sqcups;":"\u2294\uFE00","&sqsub;":"\u228F","&sqsube;":"\u2291","&sqsubset;":"\u228F","&sqsubseteq;":"\u2291","&sqsup;":"\u2290","&sqsupe;":"\u2292","&sqsupset;":"\u2290","&sqsupseteq;":"\u2292","&squ;":"\u25A1","&square;":"\u25A1","&squarf;":"\u25AA","&squf;":"\u25AA","&srarr;":"\u2192","&sscr;":"\u{1D4C8}","&ssetmn;":"\u2216","&ssmile;":"\u2323","&sstarf;":"\u22C6","&star;":"\u2606","&starf;":"\u2605","&straightepsilon;":"\u03F5","&straightphi;":"\u03D5","&strns;":"\xAF","&sub;":"\u2282","&subE;":"\u2AC5","&subdot;":"\u2ABD","&sube;":"\u2286","&subedot;":"\u2AC3","&submult;":"\u2AC1","&subnE;":"\u2ACB","&subne;":"\u228A","&subplus;":"\u2ABF","&subrarr;":"\u2979","&subset;":"\u2282","&subseteq;":"\u2286","&subseteqq;":"\u2AC5","&subsetneq;":"\u228A","&subsetneqq;":"\u2ACB","&subsim;":"\u2AC7","&subsub;":"\u2AD5","&subsup;":"\u2AD3","&succ;":"\u227B","&succapprox;":"\u2AB8","&succcurlyeq;":"\u227D","&succeq;":"\u2AB0","&succnapprox;":"\u2ABA","&succneqq;":"\u2AB6","&succnsim;":"\u22E9","&succsim;":"\u227F","&sum;":"\u2211","&sung;":"\u266A","&sup1":"\xB9","&sup1;":"\xB9","&sup2":"\xB2","&sup2;":"\xB2","&sup3":"\xB3","&sup3;":"\xB3","&sup;":"\u2283","&supE;":"\u2AC6","&supdot;":"\u2ABE","&supdsub;":"\u2AD8","&supe;":"\u2287","&supedot;":"\u2AC4","&suphsol;":"\u27C9","&suphsub;":"\u2AD7","&suplarr;":"\u297B","&supmult;":"\u2AC2","&supnE;":"\u2ACC","&supne;":"\u228B","&supplus;":"\u2AC0","&supset;":"\u2283","&supseteq;":"\u2287","&supseteqq;":"\u2AC6","&supsetneq;":"\u228B","&supsetneqq;":"\u2ACC","&supsim;":"\u2AC8","&supsub;":"\u2AD4","&supsup;":"\u2AD6","&swArr;":"\u21D9","&swarhk;":"\u2926","&swarr;":"\u2199","&swarrow;":"\u2199","&swnwar;":"\u292A","&szlig":"\xDF","&szlig;":"\xDF","&target;":"\u2316","&tau;":"\u03C4","&tbrk;":"\u23B4","&tcaron;":"\u0165","&tcedil;":"\u0163","&tcy;":"\u0442","&tdot;":"\u20DB","&telrec;":"\u2315","&tfr;":"\u{1D531}","&there4;":"\u2234","&therefore;":"\u2234","&theta;":"\u03B8","&thetasym;":"\u03D1","&thetav;":"\u03D1","&thickapprox;":"\u2248","&thicksim;":"\u223C","&thinsp;":"\u2009","&thkap;":"\u2248","&thksim;":"\u223C","&thorn":"\xFE","&thorn;":"\xFE","&tilde;":"\u02DC","&times":"\xD7","&times;":"\xD7","&timesb;":"\u22A0","&timesbar;":"\u2A31","&timesd;":"\u2A30","&tint;":"\u222D","&toea;":"\u2928","&top;":"\u22A4","&topbot;":"\u2336","&topcir;":"\u2AF1","&topf;":"\u{1D565}","&topfork;":"\u2ADA","&tosa;":"\u2929","&tprime;":"\u2034","&trade;":"\u2122","&triangle;":"\u25B5","&triangledown;":"\u25BF","&triangleleft;":"\u25C3","&trianglelefteq;":"\u22B4","&triangleq;":"\u225C","&triangleright;":"\u25B9","&trianglerighteq;":"\u22B5","&tridot;":"\u25EC","&trie;":"\u225C","&triminus;":"\u2A3A","&triplus;":"\u2A39","&trisb;":"\u29CD","&tritime;":"\u2A3B","&trpezium;":"\u23E2","&tscr;":"\u{1D4C9}","&tscy;":"\u0446","&tshcy;":"\u045B","&tstrok;":"\u0167","&twixt;":"\u226C","&twoheadleftarrow;":"\u219E","&twoheadrightarrow;":"\u21A0","&uArr;":"\u21D1","&uHar;":"\u2963","&uacute":"\xFA","&uacute;":"\xFA","&uarr;":"\u2191","&ubrcy;":"\u045E","&ubreve;":"\u016D","&ucirc":"\xFB","&ucirc;":"\xFB","&ucy;":"\u0443","&udarr;":"\u21C5","&udblac;":"\u0171","&udhar;":"\u296E","&ufisht;":"\u297E","&ufr;":"\u{1D532}","&ugrave":"\xF9","&ugrave;":"\xF9","&uharl;":"\u21BF","&uharr;":"\u21BE","&uhblk;":"\u2580","&ulcorn;":"\u231C","&ulcorner;":"\u231C","&ulcrop;":"\u230F","&ultri;":"\u25F8","&umacr;":"\u016B","&uml":"\xA8","&uml;":"\xA8","&uogon;":"\u0173","&uopf;":"\u{1D566}","&uparrow;":"\u2191","&updownarrow;":"\u2195","&upharpoonleft;":"\u21BF","&upharpoonright;":"\u21BE","&uplus;":"\u228E","&upsi;":"\u03C5","&upsih;":"\u03D2","&upsilon;":"\u03C5","&upuparrows;":"\u21C8","&urcorn;":"\u231D","&urcorner;":"\u231D","&urcrop;":"\u230E","&uring;":"\u016F","&urtri;":"\u25F9","&uscr;":"\u{1D4CA}","&utdot;":"\u22F0","&utilde;":"\u0169","&utri;":"\u25B5","&utrif;":"\u25B4","&uuarr;":"\u21C8","&uuml":"\xFC","&uuml;":"\xFC","&uwangle;":"\u29A7","&vArr;":"\u21D5","&vBar;":"\u2AE8","&vBarv;":"\u2AE9","&vDash;":"\u22A8","&vangrt;":"\u299C","&varepsilon;":"\u03F5","&varkappa;":"\u03F0","&varnothing;":"\u2205","&varphi;":"\u03D5","&varpi;":"\u03D6","&varpropto;":"\u221D","&varr;":"\u2195","&varrho;":"\u03F1","&varsigma;":"\u03C2","&varsubsetneq;":"\u228A\uFE00","&varsubsetneqq;":"\u2ACB\uFE00","&varsupsetneq;":"\u228B\uFE00","&varsupsetneqq;":"\u2ACC\uFE00","&vartheta;":"\u03D1","&vartriangleleft;":"\u22B2","&vartriangleright;":"\u22B3","&vcy;":"\u0432","&vdash;":"\u22A2","&vee;":"\u2228","&veebar;":"\u22BB","&veeeq;":"\u225A","&vellip;":"\u22EE","&verbar;":"|","&vert;":"|","&vfr;":"\u{1D533}","&vltri;":"\u22B2","&vnsub;":"\u2282\u20D2","&vnsup;":"\u2283\u20D2","&vopf;":"\u{1D567}","&vprop;":"\u221D","&vrtri;":"\u22B3","&vscr;":"\u{1D4CB}","&vsubnE;":"\u2ACB\uFE00","&vsubne;":"\u228A\uFE00","&vsupnE;":"\u2ACC\uFE00","&vsupne;":"\u228B\uFE00","&vzigzag;":"\u299A","&wcirc;":"\u0175","&wedbar;":"\u2A5F","&wedge;":"\u2227","&wedgeq;":"\u2259","&weierp;":"\u2118","&wfr;":"\u{1D534}","&wopf;":"\u{1D568}","&wp;":"\u2118","&wr;":"\u2240","&wreath;":"\u2240","&wscr;":"\u{1D4CC}","&xcap;":"\u22C2","&xcirc;":"\u25EF","&xcup;":"\u22C3","&xdtri;":"\u25BD","&xfr;":"\u{1D535}","&xhArr;":"\u27FA","&xharr;":"\u27F7","&xi;":"\u03BE","&xlArr;":"\u27F8","&xlarr;":"\u27F5","&xmap;":"\u27FC","&xnis;":"\u22FB","&xodot;":"\u2A00","&xopf;":"\u{1D569}","&xoplus;":"\u2A01","&xotime;":"\u2A02","&xrArr;":"\u27F9","&xrarr;":"\u27F6","&xscr;":"\u{1D4CD}","&xsqcup;":"\u2A06","&xuplus;":"\u2A04","&xutri;":"\u25B3","&xvee;":"\u22C1","&xwedge;":"\u22C0","&yacute":"\xFD","&yacute;":"\xFD","&yacy;":"\u044F","&ycirc;":"\u0177","&ycy;":"\u044B","&yen":"\xA5","&yen;":"\xA5","&yfr;":"\u{1D536}","&yicy;":"\u0457","&yopf;":"\u{1D56A}","&yscr;":"\u{1D4CE}","&yucy;":"\u044E","&yuml":"\xFF","&yuml;":"\xFF","&zacute;":"\u017A","&zcaron;":"\u017E","&zcy;":"\u0437","&zdot;":"\u017C","&zeetrf;":"\u2128","&zeta;":"\u03B6","&zfr;":"\u{1D537}","&zhcy;":"\u0436","&zigrarr;":"\u21DD","&zopf;":"\u{1D56B}","&zscr;":"\u{1D4CF}","&zwj;":"\u200D","&zwnj;":"\u200C"},characters:{\u00C6:"&AElig;","&":"&amp;",\u00C1:"&Aacute;",\u0102:"&Abreve;",\u00C2:"&Acirc;",\u0410:"&Acy;",\u{1D504}:"&Afr;",\u00C0:"&Agrave;",\u0391:"&Alpha;",\u0100:"&Amacr;","\u2A53":"&And;",\u0104:"&Aogon;",\u{1D538}:"&Aopf;","\u2061":"&af;",\u00C5:"&angst;",\u{1D49C}:"&Ascr;","\u2254":"&coloneq;",\u00C3:"&Atilde;",\u00C4:"&Auml;","\u2216":"&ssetmn;","\u2AE7":"&Barv;","\u2306":"&doublebarwedge;",\u0411:"&Bcy;","\u2235":"&because;",\u212C:"&bernou;",\u0392:"&Beta;",\u{1D505}:"&Bfr;",\u{1D539}:"&Bopf;","\u02D8":"&breve;","\u224E":"&bump;",\u0427:"&CHcy;","\xA9":"&copy;",\u0106:"&Cacute;","\u22D2":"&Cap;",\u2145:"&DD;",\u212D:"&Cfr;",\u010C:"&Ccaron;",\u00C7:"&Ccedil;",\u0108:"&Ccirc;","\u2230":"&Cconint;",\u010A:"&Cdot;","\xB8":"&cedil;","\xB7":"&middot;",\u03A7:"&Chi;","\u2299":"&odot;","\u2296":"&ominus;","\u2295":"&oplus;","\u2297":"&otimes;","\u2232":"&cwconint;","\u201D":"&rdquor;","\u2019":"&rsquor;","\u2237":"&Proportion;","\u2A74":"&Colone;","\u2261":"&equiv;","\u222F":"&DoubleContourIntegral;","\u222E":"&oint;",\u2102:"&complexes;","\u2210":"&coprod;","\u2233":"&awconint;","\u2A2F":"&Cross;",\u{1D49E}:"&Cscr;","\u22D3":"&Cup;","\u224D":"&asympeq;","\u2911":"&DDotrahd;",\u0402:"&DJcy;",\u0405:"&DScy;",\u040F:"&DZcy;","\u2021":"&ddagger;","\u21A1":"&Darr;","\u2AE4":"&DoubleLeftTee;",\u010E:"&Dcaron;",\u0414:"&Dcy;","\u2207":"&nabla;",\u0394:"&Delta;",\u{1D507}:"&Dfr;","\xB4":"&acute;","\u02D9":"&dot;","\u02DD":"&dblac;","`":"&grave;","\u02DC":"&tilde;","\u22C4":"&diamond;",\u2146:"&dd;",\u{1D53B}:"&Dopf;","\xA8":"&uml;","\u20DC":"&DotDot;","\u2250":"&esdot;","\u21D3":"&dArr;","\u21D0":"&lArr;","\u21D4":"&iff;","\u27F8":"&xlArr;","\u27FA":"&xhArr;","\u27F9":"&xrArr;","\u21D2":"&rArr;","\u22A8":"&vDash;","\u21D1":"&uArr;","\u21D5":"&vArr;","\u2225":"&spar;","\u2193":"&downarrow;","\u2913":"&DownArrowBar;","\u21F5":"&duarr;","\u0311":"&DownBreve;","\u2950":"&DownLeftRightVector;","\u295E":"&DownLeftTeeVector;","\u21BD":"&lhard;","\u2956":"&DownLeftVectorBar;","\u295F":"&DownRightTeeVector;","\u21C1":"&rightharpoondown;","\u2957":"&DownRightVectorBar;","\u22A4":"&top;","\u21A7":"&mapstodown;",\u{1D49F}:"&Dscr;",\u0110:"&Dstrok;",\u014A:"&ENG;",\u00D0:"&ETH;",\u00C9:"&Eacute;",\u011A:"&Ecaron;",\u00CA:"&Ecirc;",\u042D:"&Ecy;",\u0116:"&Edot;",\u{1D508}:"&Efr;",\u00C8:"&Egrave;","\u2208":"&isinv;",\u0112:"&Emacr;","\u25FB":"&EmptySmallSquare;","\u25AB":"&EmptyVerySmallSquare;",\u0118:"&Eogon;",\u{1D53C}:"&Eopf;",\u0395:"&Epsilon;","\u2A75":"&Equal;","\u2242":"&esim;","\u21CC":"&rlhar;",\u2130:"&expectation;","\u2A73":"&Esim;",\u0397:"&Eta;",\u00CB:"&Euml;","\u2203":"&exist;",\u2147:"&exponentiale;",\u0424:"&Fcy;",\u{1D509}:"&Ffr;","\u25FC":"&FilledSmallSquare;","\u25AA":"&squf;",\u{1D53D}:"&Fopf;","\u2200":"&forall;",\u2131:"&Fscr;",\u0403:"&GJcy;",">":"&gt;",\u0393:"&Gamma;",\u03DC:"&Gammad;",\u011E:"&Gbreve;",\u0122:"&Gcedil;",\u011C:"&Gcirc;",\u0413:"&Gcy;",\u0120:"&Gdot;",\u{1D50A}:"&Gfr;","\u22D9":"&ggg;",\u{1D53E}:"&Gopf;","\u2265":"&geq;","\u22DB":"&gtreqless;","\u2267":"&geqq;","\u2AA2":"&GreaterGreater;","\u2277":"&gtrless;","\u2A7E":"&ges;","\u2273":"&gtrsim;",\u{1D4A2}:"&Gscr;","\u226B":"&gg;",\u042A:"&HARDcy;",\u02C7:"&caron;","^":"&Hat;",\u0124:"&Hcirc;",\u210C:"&Poincareplane;",\u210B:"&hamilt;",\u210D:"&quaternions;","\u2500":"&boxh;",\u0126:"&Hstrok;","\u224F":"&bumpeq;",\u0415:"&IEcy;",\u0132:"&IJlig;",\u0401:"&IOcy;",\u00CD:"&Iacute;",\u00CE:"&Icirc;",\u0418:"&Icy;",\u0130:"&Idot;",\u2111:"&imagpart;",\u00CC:"&Igrave;",\u012A:"&Imacr;",\u2148:"&ii;","\u222C":"&Int;","\u222B":"&int;","\u22C2":"&xcap;","\u2063":"&ic;","\u2062":"&it;",\u012E:"&Iogon;",\u{1D540}:"&Iopf;",\u0399:"&Iota;",\u2110:"&imagline;",\u0128:"&Itilde;",\u0406:"&Iukcy;",\u00CF:"&Iuml;",\u0134:"&Jcirc;",\u0419:"&Jcy;",\u{1D50D}:"&Jfr;",\u{1D541}:"&Jopf;",\u{1D4A5}:"&Jscr;",\u0408:"&Jsercy;",\u0404:"&Jukcy;",\u0425:"&KHcy;",\u040C:"&KJcy;",\u039A:"&Kappa;",\u0136:"&Kcedil;",\u041A:"&Kcy;",\u{1D50E}:"&Kfr;",\u{1D542}:"&Kopf;",\u{1D4A6}:"&Kscr;",\u0409:"&LJcy;","<":"&lt;",\u0139:"&Lacute;",\u039B:"&Lambda;","\u27EA":"&Lang;",\u2112:"&lagran;","\u219E":"&twoheadleftarrow;",\u013D:"&Lcaron;",\u013B:"&Lcedil;",\u041B:"&Lcy;","\u27E8":"&langle;","\u2190":"&slarr;","\u21E4":"&larrb;","\u21C6":"&lrarr;","\u2308":"&lceil;","\u27E6":"&lobrk;","\u2961":"&LeftDownTeeVector;","\u21C3":"&downharpoonleft;","\u2959":"&LeftDownVectorBar;","\u230A":"&lfloor;","\u2194":"&leftrightarrow;","\u294E":"&LeftRightVector;","\u22A3":"&dashv;","\u21A4":"&mapstoleft;","\u295A":"&LeftTeeVector;","\u22B2":"&vltri;","\u29CF":"&LeftTriangleBar;","\u22B4":"&trianglelefteq;","\u2951":"&LeftUpDownVector;","\u2960":"&LeftUpTeeVector;","\u21BF":"&upharpoonleft;","\u2958":"&LeftUpVectorBar;","\u21BC":"&lharu;","\u2952":"&LeftVectorBar;","\u22DA":"&lesseqgtr;","\u2266":"&leqq;","\u2276":"&lg;","\u2AA1":"&LessLess;","\u2A7D":"&les;","\u2272":"&lsim;",\u{1D50F}:"&Lfr;","\u22D8":"&Ll;","\u21DA":"&lAarr;",\u013F:"&Lmidot;","\u27F5":"&xlarr;","\u27F7":"&xharr;","\u27F6":"&xrarr;",\u{1D543}:"&Lopf;","\u2199":"&swarrow;","\u2198":"&searrow;","\u21B0":"&lsh;",\u0141:"&Lstrok;","\u226A":"&ll;","\u2905":"&Map;",\u041C:"&Mcy;","\u205F":"&MediumSpace;",\u2133:"&phmmat;",\u{1D510}:"&Mfr;","\u2213":"&mp;",\u{1D544}:"&Mopf;",\u039C:"&Mu;",\u040A:"&NJcy;",\u0143:"&Nacute;",\u0147:"&Ncaron;",\u0145:"&Ncedil;",\u041D:"&Ncy;","\u200B":"&ZeroWidthSpace;","\n":"&NewLine;",\u{1D511}:"&Nfr;","\u2060":"&NoBreak;","\xA0":"&nbsp;",\u2115:"&naturals;","\u2AEC":"&Not;","\u2262":"&nequiv;","\u226D":"&NotCupCap;","\u2226":"&nspar;","\u2209":"&notinva;","\u2260":"&ne;","\u2242\u0338":"&nesim;","\u2204":"&nexists;","\u226F":"&ngtr;","\u2271":"&ngeq;","\u2267\u0338":"&ngeqq;","\u226B\u0338":"&nGtv;","\u2279":"&ntgl;","\u2A7E\u0338":"&nges;","\u2275":"&ngsim;","\u224E\u0338":"&nbump;","\u224F\u0338":"&nbumpe;","\u22EA":"&ntriangleleft;","\u29CF\u0338":"&NotLeftTriangleBar;","\u22EC":"&ntrianglelefteq;","\u226E":"&nlt;","\u2270":"&nleq;","\u2278":"&ntlg;","\u226A\u0338":"&nLtv;","\u2A7D\u0338":"&nles;","\u2274":"&nlsim;","\u2AA2\u0338":"&NotNestedGreaterGreater;","\u2AA1\u0338":"&NotNestedLessLess;","\u2280":"&nprec;","\u2AAF\u0338":"&npreceq;","\u22E0":"&nprcue;","\u220C":"&notniva;","\u22EB":"&ntriangleright;","\u29D0\u0338":"&NotRightTriangleBar;","\u22ED":"&ntrianglerighteq;","\u228F\u0338":"&NotSquareSubset;","\u22E2":"&nsqsube;","\u2290\u0338":"&NotSquareSuperset;","\u22E3":"&nsqsupe;","\u2282\u20D2":"&vnsub;","\u2288":"&nsubseteq;","\u2281":"&nsucc;","\u2AB0\u0338":"&nsucceq;","\u22E1":"&nsccue;","\u227F\u0338":"&NotSucceedsTilde;","\u2283\u20D2":"&vnsup;","\u2289":"&nsupseteq;","\u2241":"&nsim;","\u2244":"&nsimeq;","\u2247":"&ncong;","\u2249":"&napprox;","\u2224":"&nsmid;",\u{1D4A9}:"&Nscr;",\u00D1:"&Ntilde;",\u039D:"&Nu;",\u0152:"&OElig;",\u00D3:"&Oacute;",\u00D4:"&Ocirc;",\u041E:"&Ocy;",\u0150:"&Odblac;",\u{1D512}:"&Ofr;",\u00D2:"&Ograve;",\u014C:"&Omacr;",\u03A9:"&ohm;",\u039F:"&Omicron;",\u{1D546}:"&Oopf;","\u201C":"&ldquo;","\u2018":"&lsquo;","\u2A54":"&Or;",\u{1D4AA}:"&Oscr;",\u00D8:"&Oslash;",\u00D5:"&Otilde;","\u2A37":"&Otimes;",\u00D6:"&Ouml;","\u203E":"&oline;","\u23DE":"&OverBrace;","\u23B4":"&tbrk;","\u23DC":"&OverParenthesis;","\u2202":"&part;",\u041F:"&Pcy;",\u{1D513}:"&Pfr;",\u03A6:"&Phi;",\u03A0:"&Pi;","\xB1":"&pm;",\u2119:"&primes;","\u2ABB":"&Pr;","\u227A":"&prec;","\u2AAF":"&preceq;","\u227C":"&preccurlyeq;","\u227E":"&prsim;","\u2033":"&Prime;","\u220F":"&prod;","\u221D":"&vprop;",\u{1D4AB}:"&Pscr;",\u03A8:"&Psi;",'"':"&quot;",\u{1D514}:"&Qfr;",\u211A:"&rationals;",\u{1D4AC}:"&Qscr;","\u2910":"&drbkarow;","\xAE":"&reg;",\u0154:"&Racute;","\u27EB":"&Rang;","\u21A0":"&twoheadrightarrow;","\u2916":"&Rarrtl;",\u0158:"&Rcaron;",\u0156:"&Rcedil;",\u0420:"&Rcy;",\u211C:"&realpart;","\u220B":"&niv;","\u21CB":"&lrhar;","\u296F":"&duhar;",\u03A1:"&Rho;","\u27E9":"&rangle;","\u2192":"&srarr;","\u21E5":"&rarrb;","\u21C4":"&rlarr;","\u2309":"&rceil;","\u27E7":"&robrk;","\u295D":"&RightDownTeeVector;","\u21C2":"&downharpoonright;","\u2955":"&RightDownVectorBar;","\u230B":"&rfloor;","\u22A2":"&vdash;","\u21A6":"&mapsto;","\u295B":"&RightTeeVector;","\u22B3":"&vrtri;","\u29D0":"&RightTriangleBar;","\u22B5":"&trianglerighteq;","\u294F":"&RightUpDownVector;","\u295C":"&RightUpTeeVector;","\u21BE":"&upharpoonright;","\u2954":"&RightUpVectorBar;","\u21C0":"&rightharpoonup;","\u2953":"&RightVectorBar;",\u211D:"&reals;","\u2970":"&RoundImplies;","\u21DB":"&rAarr;",\u211B:"&realine;","\u21B1":"&rsh;","\u29F4":"&RuleDelayed;",\u0429:"&SHCHcy;",\u0428:"&SHcy;",\u042C:"&SOFTcy;",\u015A:"&Sacute;","\u2ABC":"&Sc;",\u0160:"&Scaron;",\u015E:"&Scedil;",\u015C:"&Scirc;",\u0421:"&Scy;",\u{1D516}:"&Sfr;","\u2191":"&uparrow;",\u03A3:"&Sigma;","\u2218":"&compfn;",\u{1D54A}:"&Sopf;","\u221A":"&radic;","\u25A1":"&square;","\u2293":"&sqcap;","\u228F":"&sqsubset;","\u2291":"&sqsubseteq;","\u2290":"&sqsupset;","\u2292":"&sqsupseteq;","\u2294":"&sqcup;",\u{1D4AE}:"&Sscr;","\u22C6":"&sstarf;","\u22D0":"&Subset;","\u2286":"&subseteq;","\u227B":"&succ;","\u2AB0":"&succeq;","\u227D":"&succcurlyeq;","\u227F":"&succsim;","\u2211":"&sum;","\u22D1":"&Supset;","\u2283":"&supset;","\u2287":"&supseteq;",\u00DE:"&THORN;","\u2122":"&trade;",\u040B:"&TSHcy;",\u0426:"&TScy;","	":"&Tab;",\u03A4:"&Tau;",\u0164:"&Tcaron;",\u0162:"&Tcedil;",\u0422:"&Tcy;",\u{1D517}:"&Tfr;","\u2234":"&therefore;",\u0398:"&Theta;","\u205F\u200A":"&ThickSpace;","\u2009":"&thinsp;","\u223C":"&thksim;","\u2243":"&simeq;","\u2245":"&cong;","\u2248":"&thkap;",\u{1D54B}:"&Topf;","\u20DB":"&tdot;",\u{1D4AF}:"&Tscr;",\u0166:"&Tstrok;",\u00DA:"&Uacute;","\u219F":"&Uarr;","\u2949":"&Uarrocir;",\u040E:"&Ubrcy;",\u016C:"&Ubreve;",\u00DB:"&Ucirc;",\u0423:"&Ucy;",\u0170:"&Udblac;",\u{1D518}:"&Ufr;",\u00D9:"&Ugrave;",\u016A:"&Umacr;",_:"&lowbar;","\u23DF":"&UnderBrace;","\u23B5":"&bbrk;","\u23DD":"&UnderParenthesis;","\u22C3":"&xcup;","\u228E":"&uplus;",\u0172:"&Uogon;",\u{1D54C}:"&Uopf;","\u2912":"&UpArrowBar;","\u21C5":"&udarr;","\u2195":"&varr;","\u296E":"&udhar;","\u22A5":"&perp;","\u21A5":"&mapstoup;","\u2196":"&nwarrow;","\u2197":"&nearrow;",\u03D2:"&upsih;",\u03A5:"&Upsilon;",\u016E:"&Uring;",\u{1D4B0}:"&Uscr;",\u0168:"&Utilde;",\u00DC:"&Uuml;","\u22AB":"&VDash;","\u2AEB":"&Vbar;",\u0412:"&Vcy;","\u22A9":"&Vdash;","\u2AE6":"&Vdashl;","\u22C1":"&xvee;","\u2016":"&Vert;","\u2223":"&smid;","|":"&vert;","\u2758":"&VerticalSeparator;","\u2240":"&wreath;","\u200A":"&hairsp;",\u{1D519}:"&Vfr;",\u{1D54D}:"&Vopf;",\u{1D4B1}:"&Vscr;","\u22AA":"&Vvdash;",\u0174:"&Wcirc;","\u22C0":"&xwedge;",\u{1D51A}:"&Wfr;",\u{1D54E}:"&Wopf;",\u{1D4B2}:"&Wscr;",\u{1D51B}:"&Xfr;",\u039E:"&Xi;",\u{1D54F}:"&Xopf;",\u{1D4B3}:"&Xscr;",\u042F:"&YAcy;",\u0407:"&YIcy;",\u042E:"&YUcy;",\u00DD:"&Yacute;",\u0176:"&Ycirc;",\u042B:"&Ycy;",\u{1D51C}:"&Yfr;",\u{1D550}:"&Yopf;",\u{1D4B4}:"&Yscr;",\u0178:"&Yuml;",\u0416:"&ZHcy;",\u0179:"&Zacute;",\u017D:"&Zcaron;",\u0417:"&Zcy;",\u017B:"&Zdot;",\u0396:"&Zeta;",\u2128:"&zeetrf;",\u2124:"&integers;",\u{1D4B5}:"&Zscr;",\u00E1:"&aacute;",\u0103:"&abreve;","\u223E":"&mstpos;","\u223E\u0333":"&acE;","\u223F":"&acd;",\u00E2:"&acirc;",\u0430:"&acy;",\u00E6:"&aelig;",\u{1D51E}:"&afr;",\u00E0:"&agrave;",\u2135:"&aleph;",\u03B1:"&alpha;",\u0101:"&amacr;","\u2A3F":"&amalg;","\u2227":"&wedge;","\u2A55":"&andand;","\u2A5C":"&andd;","\u2A58":"&andslope;","\u2A5A":"&andv;","\u2220":"&angle;","\u29A4":"&ange;","\u2221":"&measuredangle;","\u29A8":"&angmsdaa;","\u29A9":"&angmsdab;","\u29AA":"&angmsdac;","\u29AB":"&angmsdad;","\u29AC":"&angmsdae;","\u29AD":"&angmsdaf;","\u29AE":"&angmsdag;","\u29AF":"&angmsdah;","\u221F":"&angrt;","\u22BE":"&angrtvb;","\u299D":"&angrtvbd;","\u2222":"&angsph;","\u237C":"&angzarr;",\u0105:"&aogon;",\u{1D552}:"&aopf;","\u2A70":"&apE;","\u2A6F":"&apacir;","\u224A":"&approxeq;","\u224B":"&apid;","'":"&apos;",\u00E5:"&aring;",\u{1D4B6}:"&ascr;","*":"&midast;",\u00E3:"&atilde;",\u00E4:"&auml;","\u2A11":"&awint;","\u2AED":"&bNot;","\u224C":"&bcong;","\u03F6":"&bepsi;","\u2035":"&bprime;","\u223D":"&bsim;","\u22CD":"&bsime;","\u22BD":"&barvee;","\u2305":"&barwedge;","\u23B6":"&bbrktbrk;",\u0431:"&bcy;","\u201E":"&ldquor;","\u29B0":"&bemptyv;",\u03B2:"&beta;",\u2136:"&beth;","\u226C":"&twixt;",\u{1D51F}:"&bfr;","\u25EF":"&xcirc;","\u2A00":"&xodot;","\u2A01":"&xoplus;","\u2A02":"&xotime;","\u2A06":"&xsqcup;","\u2605":"&starf;","\u25BD":"&xdtri;","\u25B3":"&xutri;","\u2A04":"&xuplus;","\u290D":"&rbarr;","\u29EB":"&lozf;","\u25B4":"&utrif;","\u25BE":"&dtrif;","\u25C2":"&ltrif;","\u25B8":"&rtrif;","\u2423":"&blank;","\u2592":"&blk12;","\u2591":"&blk14;","\u2593":"&blk34;","\u2588":"&block;","=\u20E5":"&bne;","\u2261\u20E5":"&bnequiv;","\u2310":"&bnot;",\u{1D553}:"&bopf;","\u22C8":"&bowtie;","\u2557":"&boxDL;","\u2554":"&boxDR;","\u2556":"&boxDl;","\u2553":"&boxDr;","\u2550":"&boxH;","\u2566":"&boxHD;","\u2569":"&boxHU;","\u2564":"&boxHd;","\u2567":"&boxHu;","\u255D":"&boxUL;","\u255A":"&boxUR;","\u255C":"&boxUl;","\u2559":"&boxUr;","\u2551":"&boxV;","\u256C":"&boxVH;","\u2563":"&boxVL;","\u2560":"&boxVR;","\u256B":"&boxVh;","\u2562":"&boxVl;","\u255F":"&boxVr;","\u29C9":"&boxbox;","\u2555":"&boxdL;","\u2552":"&boxdR;","\u2510":"&boxdl;","\u250C":"&boxdr;","\u2565":"&boxhD;","\u2568":"&boxhU;","\u252C":"&boxhd;","\u2534":"&boxhu;","\u229F":"&minusb;","\u229E":"&plusb;","\u22A0":"&timesb;","\u255B":"&boxuL;","\u2558":"&boxuR;","\u2518":"&boxul;","\u2514":"&boxur;","\u2502":"&boxv;","\u256A":"&boxvH;","\u2561":"&boxvL;","\u255E":"&boxvR;","\u253C":"&boxvh;","\u2524":"&boxvl;","\u251C":"&boxvr;","\xA6":"&brvbar;",\u{1D4B7}:"&bscr;","\u204F":"&bsemi;","\\":"&bsol;","\u29C5":"&bsolb;","\u27C8":"&bsolhsub;","\u2022":"&bullet;","\u2AAE":"&bumpE;",\u0107:"&cacute;","\u2229":"&cap;","\u2A44":"&capand;","\u2A49":"&capbrcup;","\u2A4B":"&capcap;","\u2A47":"&capcup;","\u2A40":"&capdot;","\u2229\uFE00":"&caps;","\u2041":"&caret;","\u2A4D":"&ccaps;",\u010D:"&ccaron;",\u00E7:"&ccedil;",\u0109:"&ccirc;","\u2A4C":"&ccups;","\u2A50":"&ccupssm;",\u010B:"&cdot;","\u29B2":"&cemptyv;","\xA2":"&cent;",\u{1D520}:"&cfr;",\u0447:"&chcy;","\u2713":"&checkmark;",\u03C7:"&chi;","\u25CB":"&cir;","\u29C3":"&cirE;",\u02C6:"&circ;","\u2257":"&cire;","\u21BA":"&olarr;","\u21BB":"&orarr;","\u24C8":"&oS;","\u229B":"&oast;","\u229A":"&ocir;","\u229D":"&odash;","\u2A10":"&cirfnint;","\u2AEF":"&cirmid;","\u29C2":"&cirscir;","\u2663":"&clubsuit;",":":"&colon;",",":"&comma;","@":"&commat;","\u2201":"&complement;","\u2A6D":"&congdot;",\u{1D554}:"&copf;","\u2117":"&copysr;","\u21B5":"&crarr;","\u2717":"&cross;",\u{1D4B8}:"&cscr;","\u2ACF":"&csub;","\u2AD1":"&csube;","\u2AD0":"&csup;","\u2AD2":"&csupe;","\u22EF":"&ctdot;","\u2938":"&cudarrl;","\u2935":"&cudarrr;","\u22DE":"&curlyeqprec;","\u22DF":"&curlyeqsucc;","\u21B6":"&curvearrowleft;","\u293D":"&cularrp;","\u222A":"&cup;","\u2A48":"&cupbrcap;","\u2A46":"&cupcap;","\u2A4A":"&cupcup;","\u228D":"&cupdot;","\u2A45":"&cupor;","\u222A\uFE00":"&cups;","\u21B7":"&curvearrowright;","\u293C":"&curarrm;","\u22CE":"&cuvee;","\u22CF":"&cuwed;","\xA4":"&curren;","\u2231":"&cwint;","\u232D":"&cylcty;","\u2965":"&dHar;","\u2020":"&dagger;",\u2138:"&daleth;","\u2010":"&hyphen;","\u290F":"&rBarr;",\u010F:"&dcaron;",\u0434:"&dcy;","\u21CA":"&downdownarrows;","\u2A77":"&eDDot;","\xB0":"&deg;",\u03B4:"&delta;","\u29B1":"&demptyv;","\u297F":"&dfisht;",\u{1D521}:"&dfr;","\u2666":"&diams;",\u03DD:"&gammad;","\u22F2":"&disin;","\xF7":"&divide;","\u22C7":"&divonx;",\u0452:"&djcy;","\u231E":"&llcorner;","\u230D":"&dlcrop;",$:"&dollar;",\u{1D555}:"&dopf;","\u2251":"&eDot;","\u2238":"&minusd;","\u2214":"&plusdo;","\u22A1":"&sdotb;","\u231F":"&lrcorner;","\u230C":"&drcrop;",\u{1D4B9}:"&dscr;",\u0455:"&dscy;","\u29F6":"&dsol;",\u0111:"&dstrok;","\u22F1":"&dtdot;","\u25BF":"&triangledown;","\u29A6":"&dwangle;",\u045F:"&dzcy;","\u27FF":"&dzigrarr;",\u00E9:"&eacute;","\u2A6E":"&easter;",\u011B:"&ecaron;","\u2256":"&eqcirc;",\u00EA:"&ecirc;","\u2255":"&eqcolon;",\u044D:"&ecy;",\u0117:"&edot;","\u2252":"&fallingdotseq;",\u{1D522}:"&efr;","\u2A9A":"&eg;",\u00E8:"&egrave;","\u2A96":"&eqslantgtr;","\u2A98":"&egsdot;","\u2A99":"&el;","\u23E7":"&elinters;",\u2113:"&ell;","\u2A95":"&eqslantless;","\u2A97":"&elsdot;",\u0113:"&emacr;","\u2205":"&varnothing;","\u2004":"&emsp13;","\u2005":"&emsp14;","\u2003":"&emsp;",\u014B:"&eng;","\u2002":"&ensp;",\u0119:"&eogon;",\u{1D556}:"&eopf;","\u22D5":"&epar;","\u29E3":"&eparsl;","\u2A71":"&eplus;",\u03B5:"&epsilon;",\u03F5:"&varepsilon;","=":"&equals;","\u225F":"&questeq;","\u2A78":"&equivDD;","\u29E5":"&eqvparsl;","\u2253":"&risingdotseq;","\u2971":"&erarr;",\u212F:"&escr;",\u03B7:"&eta;",\u00F0:"&eth;",\u00EB:"&euml;","\u20AC":"&euro;","!":"&excl;",\u0444:"&fcy;","\u2640":"&female;",\uFB03:"&ffilig;",\uFB00:"&fflig;",\uFB04:"&ffllig;",\u{1D523}:"&ffr;",\uFB01:"&filig;",fj:"&fjlig;","\u266D":"&flat;",\uFB02:"&fllig;","\u25B1":"&fltns;",\u0192:"&fnof;",\u{1D557}:"&fopf;","\u22D4":"&pitchfork;","\u2AD9":"&forkv;","\u2A0D":"&fpartint;","\xBD":"&half;","\u2153":"&frac13;","\xBC":"&frac14;","\u2155":"&frac15;","\u2159":"&frac16;","\u215B":"&frac18;","\u2154":"&frac23;","\u2156":"&frac25;","\xBE":"&frac34;","\u2157":"&frac35;","\u215C":"&frac38;","\u2158":"&frac45;","\u215A":"&frac56;","\u215D":"&frac58;","\u215E":"&frac78;","\u2044":"&frasl;","\u2322":"&sfrown;",\u{1D4BB}:"&fscr;","\u2A8C":"&gtreqqless;",\u01F5:"&gacute;",\u03B3:"&gamma;","\u2A86":"&gtrapprox;",\u011F:"&gbreve;",\u011D:"&gcirc;",\u0433:"&gcy;",\u0121:"&gdot;","\u2AA9":"&gescc;","\u2A80":"&gesdot;","\u2A82":"&gesdoto;","\u2A84":"&gesdotol;","\u22DB\uFE00":"&gesl;","\u2A94":"&gesles;",\u{1D524}:"&gfr;",\u2137:"&gimel;",\u0453:"&gjcy;","\u2A92":"&glE;","\u2AA5":"&gla;","\u2AA4":"&glj;","\u2269":"&gneqq;","\u2A8A":"&gnapprox;","\u2A88":"&gneq;","\u22E7":"&gnsim;",\u{1D558}:"&gopf;",\u210A:"&gscr;","\u2A8E":"&gsime;","\u2A90":"&gsiml;","\u2AA7":"&gtcc;","\u2A7A":"&gtcir;","\u22D7":"&gtrdot;","\u2995":"&gtlPar;","\u2A7C":"&gtquest;","\u2978":"&gtrarr;","\u2269\uFE00":"&gvnE;",\u044A:"&hardcy;","\u2948":"&harrcir;","\u21AD":"&leftrightsquigarrow;",\u210F:"&plankv;",\u0125:"&hcirc;","\u2665":"&heartsuit;","\u2026":"&mldr;","\u22B9":"&hercon;",\u{1D525}:"&hfr;","\u2925":"&searhk;","\u2926":"&swarhk;","\u21FF":"&hoarr;","\u223B":"&homtht;","\u21A9":"&larrhk;","\u21AA":"&rarrhk;",\u{1D559}:"&hopf;","\u2015":"&horbar;",\u{1D4BD}:"&hscr;",\u0127:"&hstrok;","\u2043":"&hybull;",\u00ED:"&iacute;",\u00EE:"&icirc;",\u0438:"&icy;",\u0435:"&iecy;","\xA1":"&iexcl;",\u{1D526}:"&ifr;",\u00EC:"&igrave;","\u2A0C":"&qint;","\u222D":"&tint;","\u29DC":"&iinfin;","\u2129":"&iiota;",\u0133:"&ijlig;",\u012B:"&imacr;",\u0131:"&inodot;","\u22B7":"&imof;",\u01B5:"&imped;","\u2105":"&incare;","\u221E":"&infin;","\u29DD":"&infintie;","\u22BA":"&intercal;","\u2A17":"&intlarhk;","\u2A3C":"&iprod;",\u0451:"&iocy;",\u012F:"&iogon;",\u{1D55A}:"&iopf;",\u03B9:"&iota;","\xBF":"&iquest;",\u{1D4BE}:"&iscr;","\u22F9":"&isinE;","\u22F5":"&isindot;","\u22F4":"&isins;","\u22F3":"&isinsv;",\u0129:"&itilde;",\u0456:"&iukcy;",\u00EF:"&iuml;",\u0135:"&jcirc;",\u0439:"&jcy;",\u{1D527}:"&jfr;",\u0237:"&jmath;",\u{1D55B}:"&jopf;",\u{1D4BF}:"&jscr;",\u0458:"&jsercy;",\u0454:"&jukcy;",\u03BA:"&kappa;",\u03F0:"&varkappa;",\u0137:"&kcedil;",\u043A:"&kcy;",\u{1D528}:"&kfr;",\u0138:"&kgreen;",\u0445:"&khcy;",\u045C:"&kjcy;",\u{1D55C}:"&kopf;",\u{1D4C0}:"&kscr;","\u291B":"&lAtail;","\u290E":"&lBarr;","\u2A8B":"&lesseqqgtr;","\u2962":"&lHar;",\u013A:"&lacute;","\u29B4":"&laemptyv;",\u03BB:"&lambda;","\u2991":"&langd;","\u2A85":"&lessapprox;","\xAB":"&laquo;","\u291F":"&larrbfs;","\u291D":"&larrfs;","\u21AB":"&looparrowleft;","\u2939":"&larrpl;","\u2973":"&larrsim;","\u21A2":"&leftarrowtail;","\u2AAB":"&lat;","\u2919":"&latail;","\u2AAD":"&late;","\u2AAD\uFE00":"&lates;","\u290C":"&lbarr;","\u2772":"&lbbrk;","{":"&lcub;","[":"&lsqb;","\u298B":"&lbrke;","\u298F":"&lbrksld;","\u298D":"&lbrkslu;",\u013E:"&lcaron;",\u013C:"&lcedil;",\u043B:"&lcy;","\u2936":"&ldca;","\u2967":"&ldrdhar;","\u294B":"&ldrushar;","\u21B2":"&ldsh;","\u2264":"&leq;","\u21C7":"&llarr;","\u22CB":"&lthree;","\u2AA8":"&lescc;","\u2A7F":"&lesdot;","\u2A81":"&lesdoto;","\u2A83":"&lesdotor;","\u22DA\uFE00":"&lesg;","\u2A93":"&lesges;","\u22D6":"&ltdot;","\u297C":"&lfisht;",\u{1D529}:"&lfr;","\u2A91":"&lgE;","\u296A":"&lharul;","\u2584":"&lhblk;",\u0459:"&ljcy;","\u296B":"&llhard;","\u25FA":"&lltri;",\u0140:"&lmidot;","\u23B0":"&lmoustache;","\u2268":"&lneqq;","\u2A89":"&lnapprox;","\u2A87":"&lneq;","\u22E6":"&lnsim;","\u27EC":"&loang;","\u21FD":"&loarr;","\u27FC":"&xmap;","\u21AC":"&rarrlp;","\u2985":"&lopar;",\u{1D55D}:"&lopf;","\u2A2D":"&loplus;","\u2A34":"&lotimes;","\u2217":"&lowast;","\u25CA":"&lozenge;","(":"&lpar;","\u2993":"&lparlt;","\u296D":"&lrhard;","\u200E":"&lrm;","\u22BF":"&lrtri;","\u2039":"&lsaquo;",\u{1D4C1}:"&lscr;","\u2A8D":"&lsime;","\u2A8F":"&lsimg;","\u201A":"&sbquo;",\u0142:"&lstrok;","\u2AA6":"&ltcc;","\u2A79":"&ltcir;","\u22C9":"&ltimes;","\u2976":"&ltlarr;","\u2A7B":"&ltquest;","\u2996":"&ltrPar;","\u25C3":"&triangleleft;","\u294A":"&lurdshar;","\u2966":"&luruhar;","\u2268\uFE00":"&lvnE;","\u223A":"&mDDot;","\xAF":"&strns;","\u2642":"&male;","\u2720":"&maltese;","\u25AE":"&marker;","\u2A29":"&mcomma;",\u043C:"&mcy;","\u2014":"&mdash;",\u{1D52A}:"&mfr;","\u2127":"&mho;",\u00B5:"&micro;","\u2AF0":"&midcir;","\u2212":"&minus;","\u2A2A":"&minusdu;","\u2ADB":"&mlcp;","\u22A7":"&models;",\u{1D55E}:"&mopf;",\u{1D4C2}:"&mscr;",\u03BC:"&mu;","\u22B8":"&mumap;","\u22D9\u0338":"&nGg;","\u226B\u20D2":"&nGt;","\u21CD":"&nlArr;","\u21CE":"&nhArr;","\u22D8\u0338":"&nLl;","\u226A\u20D2":"&nLt;","\u21CF":"&nrArr;","\u22AF":"&nVDash;","\u22AE":"&nVdash;",\u0144:"&nacute;","\u2220\u20D2":"&nang;","\u2A70\u0338":"&napE;","\u224B\u0338":"&napid;",\u0149:"&napos;","\u266E":"&natural;","\u2A43":"&ncap;",\u0148:"&ncaron;",\u0146:"&ncedil;","\u2A6D\u0338":"&ncongdot;","\u2A42":"&ncup;",\u043D:"&ncy;","\u2013":"&ndash;","\u21D7":"&neArr;","\u2924":"&nearhk;","\u2250\u0338":"&nedot;","\u2928":"&toea;",\u{1D52B}:"&nfr;","\u21AE":"&nleftrightarrow;","\u2AF2":"&nhpar;","\u22FC":"&nis;","\u22FA":"&nisd;",\u045A:"&njcy;","\u2266\u0338":"&nleqq;","\u219A":"&nleftarrow;","\u2025":"&nldr;",\u{1D55F}:"&nopf;","\xAC":"&not;","\u22F9\u0338":"&notinE;","\u22F5\u0338":"&notindot;","\u22F7":"&notinvb;","\u22F6":"&notinvc;","\u22FE":"&notnivb;","\u22FD":"&notnivc;","\u2AFD\u20E5":"&nparsl;","\u2202\u0338":"&npart;","\u2A14":"&npolint;","\u219B":"&nrightarrow;","\u2933\u0338":"&nrarrc;","\u219D\u0338":"&nrarrw;",\u{1D4C3}:"&nscr;","\u2284":"&nsub;","\u2AC5\u0338":"&nsubseteqq;","\u2285":"&nsup;","\u2AC6\u0338":"&nsupseteqq;",\u00F1:"&ntilde;",\u03BD:"&nu;","#":"&num;","\u2116":"&numero;","\u2007":"&numsp;","\u22AD":"&nvDash;","\u2904":"&nvHarr;","\u224D\u20D2":"&nvap;","\u22AC":"&nvdash;","\u2265\u20D2":"&nvge;",">\u20D2":"&nvgt;","\u29DE":"&nvinfin;","\u2902":"&nvlArr;","\u2264\u20D2":"&nvle;","<\u20D2":"&nvlt;","\u22B4\u20D2":"&nvltrie;","\u2903":"&nvrArr;","\u22B5\u20D2":"&nvrtrie;","\u223C\u20D2":"&nvsim;","\u21D6":"&nwArr;","\u2923":"&nwarhk;","\u2927":"&nwnear;",\u00F3:"&oacute;",\u00F4:"&ocirc;",\u043E:"&ocy;",\u0151:"&odblac;","\u2A38":"&odiv;","\u29BC":"&odsold;",\u0153:"&oelig;","\u29BF":"&ofcir;",\u{1D52C}:"&ofr;","\u02DB":"&ogon;",\u00F2:"&ograve;","\u29C1":"&ogt;","\u29B5":"&ohbar;","\u29BE":"&olcir;","\u29BB":"&olcross;","\u29C0":"&olt;",\u014D:"&omacr;",\u03C9:"&omega;",\u03BF:"&omicron;","\u29B6":"&omid;",\u{1D560}:"&oopf;","\u29B7":"&opar;","\u29B9":"&operp;","\u2228":"&vee;","\u2A5D":"&ord;",\u2134:"&oscr;",\u00AA:"&ordf;",\u00BA:"&ordm;","\u22B6":"&origof;","\u2A56":"&oror;","\u2A57":"&orslope;","\u2A5B":"&orv;",\u00F8:"&oslash;","\u2298":"&osol;",\u00F5:"&otilde;","\u2A36":"&otimesas;",\u00F6:"&ouml;","\u233D":"&ovbar;","\xB6":"&para;","\u2AF3":"&parsim;","\u2AFD":"&parsl;",\u043F:"&pcy;","%":"&percnt;",".":"&period;","\u2030":"&permil;","\u2031":"&pertenk;",\u{1D52D}:"&pfr;",\u03C6:"&phi;",\u03D5:"&varphi;","\u260E":"&phone;",\u03C0:"&pi;",\u03D6:"&varpi;",\u210E:"&planckh;","+":"&plus;","\u2A23":"&plusacir;","\u2A22":"&pluscir;","\u2A25":"&plusdu;","\u2A72":"&pluse;","\u2A26":"&plussim;","\u2A27":"&plustwo;","\u2A15":"&pointint;",\u{1D561}:"&popf;","\xA3":"&pound;","\u2AB3":"&prE;","\u2AB7":"&precapprox;","\u2AB9":"&prnap;","\u2AB5":"&prnE;","\u22E8":"&prnsim;","\u2032":"&prime;","\u232E":"&profalar;","\u2312":"&profline;","\u2313":"&profsurf;","\u22B0":"&prurel;",\u{1D4C5}:"&pscr;",\u03C8:"&psi;","\u2008":"&puncsp;",\u{1D52E}:"&qfr;",\u{1D562}:"&qopf;","\u2057":"&qprime;",\u{1D4C6}:"&qscr;","\u2A16":"&quatint;","?":"&quest;","\u291C":"&rAtail;","\u2964":"&rHar;","\u223D\u0331":"&race;",\u0155:"&racute;","\u29B3":"&raemptyv;","\u2992":"&rangd;","\u29A5":"&range;","\xBB":"&raquo;","\u2975":"&rarrap;","\u2920":"&rarrbfs;","\u2933":"&rarrc;","\u291E":"&rarrfs;","\u2945":"&rarrpl;","\u2974":"&rarrsim;","\u21A3":"&rightarrowtail;","\u219D":"&rightsquigarrow;","\u291A":"&ratail;","\u2236":"&ratio;","\u2773":"&rbbrk;","}":"&rcub;","]":"&rsqb;","\u298C":"&rbrke;","\u298E":"&rbrksld;","\u2990":"&rbrkslu;",\u0159:"&rcaron;",\u0157:"&rcedil;",\u0440:"&rcy;","\u2937":"&rdca;","\u2969":"&rdldhar;","\u21B3":"&rdsh;","\u25AD":"&rect;","\u297D":"&rfisht;",\u{1D52F}:"&rfr;","\u296C":"&rharul;",\u03C1:"&rho;",\u03F1:"&varrho;","\u21C9":"&rrarr;","\u22CC":"&rthree;","\u02DA":"&ring;","\u200F":"&rlm;","\u23B1":"&rmoustache;","\u2AEE":"&rnmid;","\u27ED":"&roang;","\u21FE":"&roarr;","\u2986":"&ropar;",\u{1D563}:"&ropf;","\u2A2E":"&roplus;","\u2A35":"&rotimes;",")":"&rpar;","\u2994":"&rpargt;","\u2A12":"&rppolint;","\u203A":"&rsaquo;",\u{1D4C7}:"&rscr;","\u22CA":"&rtimes;","\u25B9":"&triangleright;","\u29CE":"&rtriltri;","\u2968":"&ruluhar;","\u211E":"&rx;",\u015B:"&sacute;","\u2AB4":"&scE;","\u2AB8":"&succapprox;",\u0161:"&scaron;",\u015F:"&scedil;",\u015D:"&scirc;","\u2AB6":"&succneqq;","\u2ABA":"&succnapprox;","\u22E9":"&succnsim;","\u2A13":"&scpolint;",\u0441:"&scy;","\u22C5":"&sdot;","\u2A66":"&sdote;","\u21D8":"&seArr;","\xA7":"&sect;",";":"&semi;","\u2929":"&tosa;","\u2736":"&sext;",\u{1D530}:"&sfr;","\u266F":"&sharp;",\u0449:"&shchcy;",\u0448:"&shcy;","\xAD":"&shy;",\u03C3:"&sigma;",\u03C2:"&varsigma;","\u2A6A":"&simdot;","\u2A9E":"&simg;","\u2AA0":"&simgE;","\u2A9D":"&siml;","\u2A9F":"&simlE;","\u2246":"&simne;","\u2A24":"&simplus;","\u2972":"&simrarr;","\u2A33":"&smashp;","\u29E4":"&smeparsl;","\u2323":"&ssmile;","\u2AAA":"&smt;","\u2AAC":"&smte;","\u2AAC\uFE00":"&smtes;",\u044C:"&softcy;","/":"&sol;","\u29C4":"&solb;","\u233F":"&solbar;",\u{1D564}:"&sopf;","\u2660":"&spadesuit;","\u2293\uFE00":"&sqcaps;","\u2294\uFE00":"&sqcups;",\u{1D4C8}:"&sscr;","\u2606":"&star;","\u2282":"&subset;","\u2AC5":"&subseteqq;","\u2ABD":"&subdot;","\u2AC3":"&subedot;","\u2AC1":"&submult;","\u2ACB":"&subsetneqq;","\u228A":"&subsetneq;","\u2ABF":"&subplus;","\u2979":"&subrarr;","\u2AC7":"&subsim;","\u2AD5":"&subsub;","\u2AD3":"&subsup;","\u266A":"&sung;","\xB9":"&sup1;","\xB2":"&sup2;","\xB3":"&sup3;","\u2AC6":"&supseteqq;","\u2ABE":"&supdot;","\u2AD8":"&supdsub;","\u2AC4":"&supedot;","\u27C9":"&suphsol;","\u2AD7":"&suphsub;","\u297B":"&suplarr;","\u2AC2":"&supmult;","\u2ACC":"&supsetneqq;","\u228B":"&supsetneq;","\u2AC0":"&supplus;","\u2AC8":"&supsim;","\u2AD4":"&supsub;","\u2AD6":"&supsup;","\u21D9":"&swArr;","\u292A":"&swnwar;",\u00DF:"&szlig;","\u2316":"&target;",\u03C4:"&tau;",\u0165:"&tcaron;",\u0163:"&tcedil;",\u0442:"&tcy;","\u2315":"&telrec;",\u{1D531}:"&tfr;",\u03B8:"&theta;",\u03D1:"&vartheta;",\u00FE:"&thorn;","\xD7":"&times;","\u2A31":"&timesbar;","\u2A30":"&timesd;","\u2336":"&topbot;","\u2AF1":"&topcir;",\u{1D565}:"&topf;","\u2ADA":"&topfork;","\u2034":"&tprime;","\u25B5":"&utri;","\u225C":"&trie;","\u25EC":"&tridot;","\u2A3A":"&triminus;","\u2A39":"&triplus;","\u29CD":"&trisb;","\u2A3B":"&tritime;","\u23E2":"&trpezium;",\u{1D4C9}:"&tscr;",\u0446:"&tscy;",\u045B:"&tshcy;",\u0167:"&tstrok;","\u2963":"&uHar;",\u00FA:"&uacute;",\u045E:"&ubrcy;",\u016D:"&ubreve;",\u00FB:"&ucirc;",\u0443:"&ucy;",\u0171:"&udblac;","\u297E":"&ufisht;",\u{1D532}:"&ufr;",\u00F9:"&ugrave;","\u2580":"&uhblk;","\u231C":"&ulcorner;","\u230F":"&ulcrop;","\u25F8":"&ultri;",\u016B:"&umacr;",\u0173:"&uogon;",\u{1D566}:"&uopf;",\u03C5:"&upsilon;","\u21C8":"&uuarr;","\u231D":"&urcorner;","\u230E":"&urcrop;",\u016F:"&uring;","\u25F9":"&urtri;",\u{1D4CA}:"&uscr;","\u22F0":"&utdot;",\u0169:"&utilde;",\u00FC:"&uuml;","\u29A7":"&uwangle;","\u2AE8":"&vBar;","\u2AE9":"&vBarv;","\u299C":"&vangrt;","\u228A\uFE00":"&vsubne;","\u2ACB\uFE00":"&vsubnE;","\u228B\uFE00":"&vsupne;","\u2ACC\uFE00":"&vsupnE;",\u0432:"&vcy;","\u22BB":"&veebar;","\u225A":"&veeeq;","\u22EE":"&vellip;",\u{1D533}:"&vfr;",\u{1D567}:"&vopf;",\u{1D4CB}:"&vscr;","\u299A":"&vzigzag;",\u0175:"&wcirc;","\u2A5F":"&wedbar;","\u2259":"&wedgeq;",\u2118:"&wp;",\u{1D534}:"&wfr;",\u{1D568}:"&wopf;",\u{1D4CC}:"&wscr;",\u{1D535}:"&xfr;",\u03BE:"&xi;","\u22FB":"&xnis;",\u{1D569}:"&xopf;",\u{1D4CD}:"&xscr;",\u00FD:"&yacute;",\u044F:"&yacy;",\u0177:"&ycirc;",\u044B:"&ycy;","\xA5":"&yen;",\u{1D536}:"&yfr;",\u0457:"&yicy;",\u{1D56A}:"&yopf;",\u{1D4CE}:"&yscr;",\u044E:"&yucy;",\u00FF:"&yuml;",\u017A:"&zacute;",\u017E:"&zcaron;",\u0437:"&zcy;",\u017C:"&zdot;",\u03B6:"&zeta;",\u{1D537}:"&zfr;",\u0436:"&zhcy;","\u21DD":"&zigrarr;",\u{1D56B}:"&zopf;",\u{1D4CF}:"&zscr;","\u200D":"&zwj;","\u200C":"&zwnj;"}}}},"__esModule",{value:!0}),ur=Object.defineProperty({numericUnicodeMap:{0:65533,128:8364,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,142:381,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,158:382,159:376}},"__esModule",{value:!0}),wt=Object.defineProperty({fromCodePoint:String.fromCodePoint||function(w){return String.fromCharCode(Math.floor((w-65536)/1024)+55296,(w-65536)%1024+56320)},getCodePoint:String.prototype.codePointAt?function(w,s){return w.codePointAt(s)}:function(w,s){return 1024*(w.charCodeAt(s)-55296)+w.charCodeAt(s+1)-56320+65536},highSurrogateFrom:55296,highSurrogateTo:56319},"__esModule",{value:!0}),Ar=c&&c.__assign||function(){return(Ar=Object.assign||function(w){for(var s,L=1,R=arguments.length;L<R;L++)for(var re in s=arguments[L])Object.prototype.hasOwnProperty.call(s,re)&&(w[re]=s[re]);return w}).apply(this,arguments)},ct=Ar(Ar({},zr.namedReferences),{all:zr.namedReferences.html5}),pt={scope:"body",level:"all"},Yr=/&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);/g,Gr=/&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g,nt={xml:{strict:Yr,attribute:Gr,body:zr.bodyRegExps.xml},html4:{strict:Yr,attribute:Gr,body:zr.bodyRegExps.html4},html5:{strict:Yr,attribute:Gr,body:zr.bodyRegExps.html5}},Rr=Ar(Ar({},nt),{all:nt.html5}),Zr=String.fromCharCode,ot=Zr(65533),dt=function(w,s){var L=s===void 0?pt:s,R=L.level,re=R===void 0?"all":R,le=L.scope,De=le===void 0?re==="xml"?"strict":"body":le;if(!w)return"";var ie=Rr[re][De],ge=ct[re].entities,ae=De==="attribute",m=De==="strict";ie.lastIndex=0;var Re,or=ie.exec(w);if(or){Re="";var be=0;do{be!==or.index&&(Re+=w.substring(be,or.index));var Ye=or[0],sr=Ye,k=Ye[Ye.length-1];if(ae&&k==="=")sr=Ye;else if(m&&k!==";")sr=Ye;else{var Y=ge[Ye];if(Y)sr=Y;else if(Ye[0]==="&"&&Ye[1]==="#"){var fe=Ye[2],Se=fe=="x"||fe=="X"?parseInt(Ye.substr(3),16):parseInt(Ye.substr(2));sr=Se>=1114111?ot:Se>65535?wt.fromCodePoint(Se):Zr(ur.numericUnicodeMap[Se]||Se)}}Re+=sr,be=or.index+Ye.length}while(or=ie.exec(w));be!==w.length&&(Re+=w.substring(be))}else Re=w;return Re};let ht={strictlyTwoElementsInRangeArrays:!1,progressFn:null};function bt(w,s){if(!Array.isArray(w)||!w.length)return w;let L=ye(ye({},ht),s),R,re;if(L.strictlyTwoElementsInRangeArrays&&!w.filter(ie=>ie).every((ie,ge)=>ie.length===2||(R=ge,re=ie.length,!1)))throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${R}th range (${JSON.stringify(w[R],null,4)}) has not two but ${re} elements!`);if(!w.filter(ie=>ie).every((ie,ge)=>!(!Number.isInteger(ie[0])||ie[0]<0||!Number.isInteger(ie[1])||ie[1]<0)||(R=ge,!1)))throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${R}th range (${JSON.stringify(w[R],null,4)}) does not consist of only natural numbers!`);let le=w.filter(ie=>ie).length**2,De=0;return Array.from(w).filter(ie=>ie).sort((ie,ge)=>(L.progressFn&&(De+=1,L.progressFn(Math.floor(100*De/le))),ie[0]===ge[0]?ie[1]<ge[1]?-1:ie[1]>ge[1]?1:0:ie[0]<ge[0]?-1:1))}let qt={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};function yt(w,s){function L(ae){return ae&&typeof ae=="object"&&!Array.isArray(ae)}if(!Array.isArray(w)||!w.length)return null;let R;if(s){if(!L(s))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:
${JSON.stringify(s,null,4)} (type ${typeof s})`);if(R=ye(ye({},qt),s),R.progressFn&&L(R.progressFn)&&!Object.keys(R.progressFn).length)R.progressFn=null;else if(R.progressFn&&typeof R.progressFn!="function")throw new Error(`ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "${typeof R.progressFn}", equal to ${JSON.stringify(R.progressFn,null,4)}`);if(R.mergeType&&+R.mergeType!=1&&+R.mergeType!=2)throw new Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof R.mergeType}", equal to ${JSON.stringify(R.mergeType,null,4)}`);if(typeof R.joinRangesThatTouchEdges!="boolean")throw new Error(`ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof R.joinRangesThatTouchEdges}", equal to ${JSON.stringify(R.joinRangesThatTouchEdges,null,4)}`)}else R=ye({},qt);let re=w.filter(ae=>ae).map(ae=>[...ae]).filter(ae=>ae[2]!==void 0||ae[0]!==ae[1]),le,De,ie;if(le=R.progressFn?bt(re,{progressFn:ae=>{ie=Math.floor(ae/5),ie!==De&&(De=ie,R.progressFn(ie))}}):bt(re),!le)return null;let ge=le.length-1;for(let ae=ge;ae>0;ae--)R.progressFn&&(ie=Math.floor(78*(1-ae/ge))+21,ie!==De&&ie>De&&(De=ie,R.progressFn(ie))),(le[ae][0]<=le[ae-1][0]||!R.joinRangesThatTouchEdges&&le[ae][0]<le[ae-1][1]||R.joinRangesThatTouchEdges&&le[ae][0]<=le[ae-1][1])&&(le[ae-1][0]=Math.min(le[ae][0],le[ae-1][0]),le[ae-1][1]=Math.max(le[ae][1],le[ae-1][1]),le[ae][2]!==void 0&&(le[ae-1][0]>=le[ae][0]||le[ae-1][1]<=le[ae][1])&&le[ae-1][2]!==null&&(le[ae][2]===null&&le[ae-1][2]!==null?le[ae-1][2]=null:le[ae-1][2]!=null?+R.mergeType==2&&le[ae-1][0]===le[ae][0]?le[ae-1][2]=le[ae][2]:le[ae-1][2]+=le[ae][2]:le[ae-1][2]=le[ae][2]),le.splice(ae,1),ae=le.length);return le.length?le:null}function Wr(w,s,L){let R,re=0,le=0;if(arguments.length===0)throw new Error("ranges-apply: [THROW_ID_01] inputs missing!");if(typeof w!="string")throw new TypeError(`ranges-apply: [THROW_ID_02] first input argument must be a string! Currently it's: ${typeof w}, equal to: ${JSON.stringify(w,null,4)}`);if(s&&!Array.isArray(s))throw new TypeError(`ranges-apply: [THROW_ID_03] second input argument must be an array (or null)! Currently it's: ${typeof s}, equal to: ${JSON.stringify(s,null,4)}`);if(L&&typeof L!="function")throw new TypeError(`ranges-apply: [THROW_ID_04] the third input argument must be a function (or falsey)! Currently it's: ${typeof L}, equal to: ${JSON.stringify(L,null,4)}`);if(!s||!s.filter(m=>m).length)return w;R=Array.isArray(s)&&Number.isInteger(s[0])&&Number.isInteger(s[1])?[Array.from(s)]:Array.from(s);let De=R.length,ie=0;R.filter(m=>m).forEach((m,Re)=>{if(L&&(re=Math.floor(ie/De*10),re!==le&&(le=re,L(re))),!Array.isArray(m))throw new TypeError(`ranges-apply: [THROW_ID_05] ranges array, second input arg., has ${Re}th element not an array: ${JSON.stringify(m,null,4)}, which is ${typeof m}`);if(!Number.isInteger(m[0])){if(!Number.isInteger(+m[0])||+m[0]<0)throw new TypeError(`ranges-apply: [THROW_ID_06] ranges array, second input arg. has ${Re}th element, array ${JSON.stringify(m,null,0)}. Its first element is not an integer, string index, but ${typeof m[0]}, equal to: ${JSON.stringify(m[0],null,4)}.`);R[Re][0]=+R[Re][0]}if(!Number.isInteger(m[1])){if(!Number.isInteger(+m[1])||+m[1]<0)throw new TypeError(`ranges-apply: [THROW_ID_07] ranges array, second input arg. has ${Re}th element, array ${JSON.stringify(m,null,0)}. Its second element is not an integer, string index, but ${typeof m[1]}, equal to: ${JSON.stringify(m[1],null,4)}.`);R[Re][1]=+R[Re][1]}ie+=1});let ge=yt(R,{progressFn:m=>{L&&(re=10+Math.floor(m/10),re!==le&&(le=re,L(re)))}}),ae=Array.isArray(ge)?ge.length:0;if(ae>0){let m=w.slice(ge[ae-1][1]);w=ge.reduce((Re,or,be,Ye)=>(L&&(re=20+Math.floor(be/ae*80),re!==le&&(le=re,L(re))),Re+w.slice(be===0?0:Ye[be-1][1],Ye[be][0])+(Ye[be][2]||"")),""),w+=m}return w}function Kr(w,s=1){function L(re){return Array.from(re).reverse().join("")}function R(re,le,De){let ie=De?`
`:"\r",ge=De?"\r":`
`;if(!re)return re;let ae=0,m="";for(let Re=0,or=re.length;Re<or;Re++)(re[Re]===ie||re[Re]===ge&&re[Re-1]!==ie)&&ae++,`\r
`.includes(re[Re])||re[Re]==="\xA0"?re[Re]==="\xA0"?m+=re[Re]:re[Re]===ie?ae<=le&&(m+=re[Re],re[Re+1]===ge&&(m+=re[Re+1],Re++)):re[Re]===ge&&(!re[Re-1]||re[Re-1]!==ie)&&ae<=le&&(m+=re[Re]):re[Re+1]||ae||(m+=" ");return m}if(typeof w=="string"&&w.length){let re=1;typeof+s=="number"&&Number.isInteger(+s)&&+s>=0&&(re=+s);let le="",De="";if(w.trim()){if(!w[0].trim()){for(let ie=0,ge=w.length;ie<ge;ie++)if(w[ie].trim()){le=w.slice(0,ie);break}}}else le=w;if(w.trim()&&(w.slice(-1).trim()===""||w.slice(-1)==="\xA0")){for(let ie=w.length;ie--;)if(w[ie].trim()){De=w.slice(ie+1);break}}return`${R(le,re,!1)}${w.trim()}${L(R(L(De),re,!0))}`}return w}function Ir(w){return w!=null}function xr(w){return Number.isInteger(w)&&w>=0}function wr(w){return typeof w=="string"}let Fr={limitToBeAddedWhitespace:!1,limitLinebreaksCount:1,mergeType:1};class mt{constructor(s){let L=ye(ye({},Fr),s);if(L.mergeType&&L.mergeType!==1&&L.mergeType!==2)if(wr(L.mergeType)&&L.mergeType.trim()==="1")L.mergeType=1;else{if(!wr(L.mergeType)||L.mergeType.trim()!=="2")throw new Error(`ranges-push: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof L.mergeType}", equal to ${JSON.stringify(L.mergeType,null,4)}`);L.mergeType=2}this.opts=L,this.ranges=[]}add(s,L,R){if(s==null&&L==null)return;if(Ir(s)&&!Ir(L)){if(Array.isArray(s)){if(s.length){if(s.some(De=>Array.isArray(De)))return void s.forEach(De=>{Array.isArray(De)&&this.add(...De)});s.length&&xr(+s[0])&&xr(+s[1])&&this.add(...s)}return}throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_12] the first input argument, "from" is set (${JSON.stringify(s,null,0)}) but second-one, "to" is not (${JSON.stringify(L,null,0)})`)}if(!Ir(s)&&Ir(L))throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_13] the second input argument, "to" is set (${JSON.stringify(L,null,0)}) but first-one, "from" is not (${JSON.stringify(s,null,0)})`);let re=+s,le=+L;if(xr(R)&&(R=String(R)),!xr(re)||!xr(le))throw xr(re)&&re>=0?new TypeError(`ranges-push/Ranges/add(): [THROW_ID_10] "to" value, the second input argument, must be a natural number or zero! Currently it's of a type "${typeof le}" equal to: ${JSON.stringify(le,null,4)}`):new TypeError(`ranges-push/Ranges/add(): [THROW_ID_09] "from" value, the first input argument, must be a natural number or zero! Currently it's of a type "${typeof re}" equal to: ${JSON.stringify(re,null,4)}`);if(Ir(R)&&!wr(R)&&!xr(R))throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_08] The third argument, the value to add, was given not as string but ${typeof R}, equal to:
${JSON.stringify(R,null,4)}`);if(Ir(this.ranges)&&Array.isArray(this.last())&&re===this.last()[1]){if(this.last()[1]=le,this.last(),this.last()[2]!==null&&Ir(R)){let De=!(this.last()[2]&&this.last()[2].length>0)||this.opts&&this.opts.mergeType&&this.opts.mergeType!==1?R:this.last()[2]+R;this.opts.limitToBeAddedWhitespace&&(De=Kr(De,this.opts.limitLinebreaksCount)),wr(De)&&!De.length||(this.last()[2]=De)}}else{this.ranges||(this.ranges=[]);let De=R===void 0||wr(R)&&!R.length?[re,le]:[re,le,R&&this.opts.limitToBeAddedWhitespace?Kr(R,this.opts.limitLinebreaksCount):R];this.ranges.push(De)}}push(s,L,R){this.add(s,L,R)}current(){return Array.isArray(this.ranges)&&this.ranges.length?(this.ranges=yt(this.ranges,{mergeType:this.opts.mergeType}),this.ranges&&this.opts.limitToBeAddedWhitespace?this.ranges.map(s=>Ir(s[2])?[s[0],s[1],Kr(s[2],this.opts.limitLinebreaksCount)]:s):this.ranges):null}wipe(){this.ranges=[]}replace(s){if(Array.isArray(s)&&s.length){if(!Array.isArray(s[0])||!xr(s[0][0]))throw new Error(`ranges-push/Ranges/replace(): [THROW_ID_11] Single range was given but we expected array of arrays! The first element, ${JSON.stringify(s[0],null,4)} should be an array and its first element should be an integer, a string index.`);this.ranges=Array.from(s)}else this.ranges=[]}last(){return Array.isArray(this.ranges)&&this.ranges.length?this.ranges[this.ranges.length-1]:null}}(function(w){var s={exports:{}};w(s,s.exports)})(function(w,s){var L="__lodash_hash_undefined__",R=9007199254740991,re="[object Arguments]",le="[object Boolean]",De="[object Date]",ie="[object Function]",ge="[object GeneratorFunction]",ae="[object Map]",m="[object Number]",Re="[object Object]",or="[object Promise]",be="[object RegExp]",Ye="[object Set]",sr="[object String]",k="[object Symbol]",Y="[object WeakMap]",fe="[object ArrayBuffer]",Se="[object DataView]",nr="[object Float32Array]",Xe="[object Float64Array]",ar="[object Int8Array]",mr="[object Int16Array]",Ae="[object Int32Array]",Dr="[object Uint8Array]",T="[object Uint8ClampedArray]",_="[object Uint16Array]",qe="[object Uint32Array]",ce=/\w*$/,d=/^\[object .+?Constructor\]$/,Ie=/^(?:0|[1-9]\d*)$/,p={};p[re]=p["[object Array]"]=p[fe]=p[Se]=p[le]=p[De]=p[nr]=p[Xe]=p[ar]=p[mr]=p[Ae]=p[ae]=p[m]=p[Re]=p[be]=p[Ye]=p[sr]=p[k]=p[Dr]=p[T]=p[_]=p[qe]=!0,p["[object Error]"]=p[ie]=p[Y]=!1;var C=typeof self=="object"&&self&&self.Object===Object&&self,J=typeof c=="object"&&c&&c.Object===Object&&c||C||Function("return this")(),me=s&&!s.nodeType&&s,Oe=me&&w&&!w.nodeType&&w,Ke=Oe&&Oe.exports===me;function hr(F,de){return F.set(de[0],de[1]),F}function Be(F,de){return F.add(de),F}function rr(F,de,Le,Ze){var Vr=-1,at=F?F.length:0;for(Ze&&at&&(Le=F[++Vr]);++Vr<at;)Le=de(Le,F[Vr],Vr,F);return Le}function dr(F){var de=!1;if(F!=null&&typeof F.toString!="function")try{de=!!(F+"")}catch(Le){}return de}function Tr(F){var de=-1,Le=Array(F.size);return F.forEach(function(Ze,Vr){Le[++de]=[Vr,Ze]}),Le}function Xr(F,de){return function(Le){return F(de(Le))}}function B(F){var de=-1,Le=Array(F.size);return F.forEach(function(Ze){Le[++de]=Ze}),Le}var N=Array.prototype,ne=Function.prototype,ke=Object.prototype,cr=J["__core-js_shared__"],Cr=function(){var F=/[^.]+$/.exec(cr&&cr.keys&&cr.keys.IE_PROTO||"");return F?"Symbol(src)_1."+F:""}(),br=ne.toString,Ve=ke.hasOwnProperty,vr=ke.toString,Pr=RegExp("^"+br.call(Ve).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Pt=Ke?J.Buffer:void 0,Gt=J.Symbol,Wt=J.Uint8Array,Qe=Xr(Object.getPrototypeOf,Object),gr=Object.create,Lr=ke.propertyIsEnumerable,gt=N.splice,kt=Object.getOwnPropertySymbols,Ct=Pt?Pt.isBuffer:void 0,qr=Xr(Object.keys,Object),Hr=jt(J,"DataView"),tt=jt(J,"Map"),Jt=jt(J,"Promise"),wa=jt(J,"Set"),va=jt(J,"WeakMap"),Mt=jt(Object,"create"),Hn=Bt(Hr),Vn=Bt(tt),zn=Bt(Jt),Gn=Bt(wa),Wn=Bt(va),Ra=Gt?Gt.prototype:void 0,Fa=Ra?Ra.valueOf:void 0;function Lt(F){var de=-1,Le=F?F.length:0;for(this.clear();++de<Le;){var Ze=F[de];this.set(Ze[0],Ze[1])}}function Dt(F){var de=-1,Le=F?F.length:0;for(this.clear();++de<Le;){var Ze=F[de];this.set(Ze[0],Ze[1])}}function Ft(F){var de=-1,Le=F?F.length:0;for(this.clear();++de<Le;){var Ze=F[de];this.set(Ze[0],Ze[1])}}function Ot(F){this.__data__=new Dt(F)}function Jn(F,de){var Le=Da(F)||function(Nr){return function(Or){return function(St){return!!St&&typeof St=="object"}(Or)&&Va(Or)}(Nr)&&Ve.call(Nr,"callee")&&(!Lr.call(Nr,"callee")||vr.call(Nr)==re)}(F)?function(Nr,Or){for(var St=-1,Et=Array(Nr);++St<Nr;)Et[St]=Or(St);return Et}(F.length,String):[],Ze=Le.length,Vr=!!Ze;for(var at in F)!de&&!Ve.call(F,at)||Vr&&(at=="length"||Yn(at,Ze))||Le.push(at);return Le}function Oa(F,de,Le){var Ze=F[de];Ve.call(F,de)&&Ha(Ze,Le)&&(Le!==void 0||de in F)||(F[de]=Le)}function Qt(F,de){for(var Le=F.length;Le--;)if(Ha(F[Le][0],de))return Le;return-1}function qa(F,de,Le,Ze,Vr,at,Nr){var Or;if(Ze&&(Or=at?Ze(F,Vr,at,Nr):Ze(F)),Or!==void 0)return Or;if(!ea(F))return F;var St=Da(F);if(St){if(Or=function(er){var yr=er.length,jr=er.constructor(yr);return yr&&typeof er[0]=="string"&&Ve.call(er,"index")&&(jr.index=er.index,jr.input=er.input),jr}(F),!de)return function(er,yr){var jr=-1,vt=er.length;for(yr||(yr=Array(vt));++jr<vt;)yr[jr]=er[jr];return yr}(F,Or)}else{var Et=$t(F),Ga=Et==ie||Et==ge;if(Zn(F))return function(er,yr){if(yr)return er.slice();var jr=new er.constructor(er.length);return er.copy(jr),jr}(F,de);if(Et==Re||Et==re||Ga&&!at){if(dr(F))return at?F:{};if(Or=function(er){return typeof er.constructor!="function"||_a(er)?{}:(yr=Qe(er),ea(yr)?gr(yr):{});var yr}(Ga?{}:F),!de)return function(er,yr){return ja(er,Ua(er),yr)}(F,function(er,yr){return er&&ja(yr,Sa(yr),er)}(Or,F))}else{if(!p[Et])return at?F:{};Or=function(er,yr,jr,vt){var Yt=er.constructor;switch(yr){case fe:return xa(er);case le:case De:return new Yt(+er);case Se:return function(Sr,it){var It=it?xa(Sr.buffer):Sr.buffer;return new Sr.constructor(It,Sr.byteOffset,Sr.byteLength)}(er,vt);case nr:case Xe:case ar:case mr:case Ae:case Dr:case T:case _:case qe:return function(Sr,it){var It=it?xa(Sr.buffer):Sr.buffer;return new Sr.constructor(It,Sr.byteOffset,Sr.length)}(er,vt);case ae:return function(Sr,it,It){return rr(it?It(Tr(Sr),!0):Tr(Sr),hr,new Sr.constructor)}(er,vt,jr);case m:case sr:return new Yt(er);case be:return function(Sr){var it=new Sr.constructor(Sr.source,ce.exec(Sr));return it.lastIndex=Sr.lastIndex,it}(er);case Ye:return function(Sr,it,It){return rr(it?It(B(Sr),!0):B(Sr),Be,new Sr.constructor)}(er,vt,jr);case k:return Ut=er,Fa?Object(Fa.call(Ut)):{}}var Ut}(F,Et,qa,de)}}Nr||(Nr=new Ot);var Wa=Nr.get(F);if(Wa)return Wa;if(Nr.set(F,Or),!St)var Ja=Le?function(er){return function(yr,jr,vt){var Yt=jr(yr);return Da(yr)?Yt:function(Ut,Sr){for(var it=-1,It=Sr.length,Kn=Ut.length;++it<It;)Ut[Kn+it]=Sr[it];return Ut}(Yt,vt(yr))}(er,Sa,Ua)}(F):Sa(F);return function(er,yr){for(var jr=-1,vt=er?er.length:0;++jr<vt&&yr(er[jr],jr,er)!==!1;);}(Ja||F,function(er,yr){Ja&&(er=F[yr=er]),Oa(Or,yr,qa(er,de,Le,Ze,yr,F,Nr))}),Or}function Mn(F){return!(!ea(F)||function(de){return!!Cr&&Cr in de}(F))&&(za(F)||dr(F)?Pr:d).test(Bt(F))}function xa(F){var de=new F.constructor(F.byteLength);return new Wt(de).set(new Wt(F)),de}function ja(F,de,Le,Ze){Le||(Le={});for(var Vr=-1,at=de.length;++Vr<at;){var Nr=de[Vr],Or=Ze?Ze(Le[Nr],F[Nr],Nr,Le,F):void 0;Oa(Le,Nr,Or===void 0?F[Nr]:Or)}return Le}function Xt(F,de){var Le,Ze,Vr=F.__data__;return((Ze=typeof(Le=de))=="string"||Ze=="number"||Ze=="symbol"||Ze=="boolean"?Le!=="__proto__":Le===null)?Vr[typeof de=="string"?"string":"hash"]:Vr.map}function jt(F,de){var Le=function(Ze,Vr){return Ze==null?void 0:Ze[Vr]}(F,de);return Mn(Le)?Le:void 0}Lt.prototype.clear=function(){this.__data__=Mt?Mt(null):{}},Lt.prototype.delete=function(F){return this.has(F)&&delete this.__data__[F]},Lt.prototype.get=function(F){var de=this.__data__;if(Mt){var Le=de[F];return Le===L?void 0:Le}return Ve.call(de,F)?de[F]:void 0},Lt.prototype.has=function(F){var de=this.__data__;return Mt?de[F]!==void 0:Ve.call(de,F)},Lt.prototype.set=function(F,de){return this.__data__[F]=Mt&&de===void 0?L:de,this},Dt.prototype.clear=function(){this.__data__=[]},Dt.prototype.delete=function(F){var de=this.__data__,Le=Qt(de,F);return!(Le<0)&&(Le==de.length-1?de.pop():gt.call(de,Le,1),!0)},Dt.prototype.get=function(F){var de=this.__data__,Le=Qt(de,F);return Le<0?void 0:de[Le][1]},Dt.prototype.has=function(F){return Qt(this.__data__,F)>-1},Dt.prototype.set=function(F,de){var Le=this.__data__,Ze=Qt(Le,F);return Ze<0?Le.push([F,de]):Le[Ze][1]=de,this},Ft.prototype.clear=function(){this.__data__={hash:new Lt,map:new(tt||Dt),string:new Lt}},Ft.prototype.delete=function(F){return Xt(this,F).delete(F)},Ft.prototype.get=function(F){return Xt(this,F).get(F)},Ft.prototype.has=function(F){return Xt(this,F).has(F)},Ft.prototype.set=function(F,de){return Xt(this,F).set(F,de),this},Ot.prototype.clear=function(){this.__data__=new Dt},Ot.prototype.delete=function(F){return this.__data__.delete(F)},Ot.prototype.get=function(F){return this.__data__.get(F)},Ot.prototype.has=function(F){return this.__data__.has(F)},Ot.prototype.set=function(F,de){var Le=this.__data__;if(Le instanceof Dt){var Ze=Le.__data__;if(!tt||Ze.length<199)return Ze.push([F,de]),this;Le=this.__data__=new Ft(Ze)}return Le.set(F,de),this};var Ua=kt?Xr(kt,Object):function(){return[]},$t=function(F){return vr.call(F)};function Yn(F,de){return!!(de=de==null?R:de)&&(typeof F=="number"||Ie.test(F))&&F>-1&&F%1==0&&F<de}function _a(F){var de=F&&F.constructor;return F===(typeof de=="function"&&de.prototype||ke)}function Bt(F){if(F!=null){try{return br.call(F)}catch(de){}try{return F+""}catch(de){}}return""}function Ha(F,de){return F===de||F!=F&&de!=de}(Hr&&$t(new Hr(new ArrayBuffer(1)))!=Se||tt&&$t(new tt)!=ae||Jt&&$t(Jt.resolve())!=or||wa&&$t(new wa)!=Ye||va&&$t(new va)!=Y)&&($t=function(F){var de=vr.call(F),Le=de==Re?F.constructor:void 0,Ze=Le?Bt(Le):void 0;if(Ze)switch(Ze){case Hn:return Se;case Vn:return ae;case zn:return or;case Gn:return Ye;case Wn:return Y}return de});var Da=Array.isArray;function Va(F){return F!=null&&function(de){return typeof de=="number"&&de>-1&&de%1==0&&de<=R}(F.length)&&!za(F)}var Zn=Ct||function(){return!1};function za(F){var de=ea(F)?vr.call(F):"";return de==ie||de==ge}function ea(F){var de=typeof F;return!!F&&(de=="object"||de=="function")}function Sa(F){return Va(F)?Jn(F):function(de){if(!_a(de))return qr(de);var Le=[];for(var Ze in Object(de))Ve.call(de,Ze)&&Ze!="constructor"&&Le.push(Ze);return Le}(F)}w.exports=function(F){return qa(F,!0,!0)}});function st(w,s=0){return function({str:L,idx:R=0,stopAtNewlines:re=!1,stopAtRawNbsp:le=!1}){if(typeof L!="string"||!L.length||(R&&typeof R=="number"||(R=0),!L[R+1]))return null;if(L[R+1]&&(L[R+1].trim()||re&&`
\r`.includes(L[R+1])||le&&L[R+1]==="\xA0"))return R+1;if(L[R+2]&&(L[R+2].trim()||re&&`
\r`.includes(L[R+2])||le&&L[R+2]==="\xA0"))return R+2;for(let De=R+1,ie=L.length;De<ie;De++)if(L[De].trim()||re&&`
\r`.includes(L[De])||le&&L[De]==="\xA0")return De;return null}({str:w,idx:s,stopAtNewlines:!1,stopAtRawNbsp:!1})}function Qr(w,s){if(!w)return[];if(Array.isArray(w))return w.filter(L=>typeof L=="string"&&L.trim());if(typeof w=="string")return w.trim()?[w]:[];throw new TypeError(`string-strip-html/stripHtml(): [THROW_ID_03] ${s} must be array containing zero or more strings or something falsey. Currently it's equal to: ${w}, that a type of ${typeof w}.`)}function rt(w,s,L){return!w||!w.quotes||!function(R,re,le,De){for(let ie=re,ge=R.length;ie<ge;ie++){if(R.startsWith(le,ie))return!0;if(R.startsWith(De,ie))return!1}return!1}(s,L+1,w.quotes.value,">")}let _r={ignoreTags:[],onlyStripTags:[],stripTogetherWithTheirContents:["script","style","xml"],skipHtmlDecoding:!1,trimOnlySpaces:!1,dumpLinkHrefsNearby:{enabled:!1,putOnNewLine:!1,wrapHeads:"",wrapTails:""},cb:null};e.defaults=_r,e.stripHtml=function w(s,L){let R=Date.now(),re=new Set(["!doctype","abbr","address","area","article","aside","audio","base","bdi","bdo","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","doctype","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","math","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","param","picture","pre","progress","rb","rp","rt","rtc","ruby","samp","script","section","select","slot","small","source","span","strong","style","sub","summary","sup","svg","table","tbody","td","template","textarea","tfoot","th","thead","time","title","tr","track","ul","var","video","wbr","xml"]),le=new Set(["a","b","i","p","q","s","u"]),De=new Set([".",",","?",";",")","\u2026",'"',"\xBB"]),ie=[],ge=[],ae=[],m={};m={attributes:[]};let Re=null,or=null,be={},Ye={tagName:"",hrefValue:"",openingTagEnds:void 0},sr="",k=!1,Y=null;function fe(d,Ie,p){if(Array.isArray(Ie.stripTogetherWithTheirContents)&&(Ie.stripTogetherWithTheirContents.includes(m.name)||Ie.stripTogetherWithTheirContents.includes("*")))if(Array.isArray(ie)&&ie.some(C=>C.name===m.name&&C.lastClosingBracketAt<d)){for(let C=ie.length;C--;)if(ie[C].name===m.name){(Ie.stripTogetherWithTheirContents.includes(m.name)||Ie.stripTogetherWithTheirContents.includes("*"))&&(ae=ae.filter(([me,Oe])=>(me<ie[C].lastOpeningBracketAt||me>=d+1)&&(Oe<=ie[C].lastOpeningBracketAt||Oe>d+1)));let J=d+1;m.lastClosingBracketAt&&(J=m.lastClosingBracketAt+1),ae.push([ie[C].lastOpeningBracketAt,J]),De.has(s[d])&&Ie.cb?Ie.cb({tag:m,deleteFrom:ie[C].lastOpeningBracketAt,deleteTo:d+1,insert:null,rangesArr:p,proposedReturn:[ie[C].lastOpeningBracketAt,d,null]}):Ie.cb&&Ie.cb({tag:m,deleteFrom:ie[C].lastOpeningBracketAt,deleteTo:d,insert:"",rangesArr:p,proposedReturn:[ie[C].lastOpeningBracketAt,d,""]}),ie.splice(C,1);break}}else ie.push(m)}function Se(d,Ie,p,C,J,me){let Oe="";if(Number.isInteger(p)&&p<J&&(Oe+=d.slice(p,J)),Number.isInteger(C)&&C>me+1){let Ke=d.slice(me+1,C);Ke.includes(`
`)&&Xe(C,d)?Oe+=" ":Oe+=Ke}if(!De.has(d[Ie])&&d[Ie]!=="!"){let Ke=Oe.match(/\n/g);return Array.isArray(Ke)&&Ke.length?Ke.length===1?`
`:Ke.length===2?`

`:`


`:" "}return""}function nr(d){if(d.dumpLinkHrefsNearby.enabled&&Ye.tagName&&Ye.tagName===m.name&&m.lastOpeningBracketAt&&(Ye.openingTagEnds&&m.lastOpeningBracketAt>Ye.openingTagEnds||!Ye.openingTagEnds)&&(k=!0),k){let Ie=d.dumpLinkHrefsNearby.putOnNewLine?`

`:"";sr=`${Ie}${Ye.hrefValue}${Ie}`}}function Xe(d,Ie){return Ie?Ie[d]==="<"&&Ie[d+1]!=="%":s[d]==="<"&&s[d+1]!=="%"}function ar(d){return s[d]===">"&&s[d-1]!=="%"}if(typeof s!="string")throw new TypeError(`string-strip-html/stripHtml(): [THROW_ID_01] Input must be string! Currently it's: ${(typeof s).toLowerCase()}, equal to:
${JSON.stringify(s,null,4)}`);if(L&&!o(L))throw new TypeError(`string-strip-html/stripHtml(): [THROW_ID_02] Optional Options Object must be a plain object! Currently it's: ${(typeof L).toLowerCase()}, equal to:
${JSON.stringify(L,null,4)}`);function mr(){k&&(Ye={tagName:"",hrefValue:"",openingTagEnds:void 0},k=!1)}let Ae=ye(ye({},_r),L);if(Object.prototype.hasOwnProperty.call(Ae,"returnRangesOnly"))throw new TypeError("string-strip-html/stripHtml(): [THROW_ID_03] opts.returnRangesOnly has been removed from the API since v.5 release.");Ae.ignoreTags=Qr(Ae.ignoreTags,"opts.ignoreTags"),Ae.onlyStripTags=Qr(Ae.onlyStripTags,"opts.onlyStripTags");let Dr=!!Ae.onlyStripTags.length;if(Ae.onlyStripTags.length&&Ae.ignoreTags.length&&(Ae.onlyStripTags=ut(Ae.onlyStripTags,...Ae.ignoreTags)),o(Ae.dumpLinkHrefsNearby)||(Ae.dumpLinkHrefsNearby=ye({},_r.dumpLinkHrefsNearby)),Ae.dumpLinkHrefsNearby=_r.dumpLinkHrefsNearby,L&&Object.prototype.hasOwnProperty.call(L,"dumpLinkHrefsNearby")&&L.dumpLinkHrefsNearby!=null){if(o(L.dumpLinkHrefsNearby))Ae.dumpLinkHrefsNearby=ye(ye({},_r.dumpLinkHrefsNearby),L.dumpLinkHrefsNearby);else if(L.dumpLinkHrefsNearby)throw new TypeError(`string-strip-html/stripHtml(): [THROW_ID_04] Optional Options Object's key dumpLinkHrefsNearby was set to ${typeof L.dumpLinkHrefsNearby}, equal to ${JSON.stringify(L.dumpLinkHrefsNearby,null,4)}. The only allowed value is a plain object. See the API reference.`)}Ae.stripTogetherWithTheirContents?typeof Ae.stripTogetherWithTheirContents=="string"&&Ae.stripTogetherWithTheirContents.length&&(Ae.stripTogetherWithTheirContents=[Ae.stripTogetherWithTheirContents]):Ae.stripTogetherWithTheirContents=[];let T={};if(Ae.stripTogetherWithTheirContents&&Array.isArray(Ae.stripTogetherWithTheirContents)&&Ae.stripTogetherWithTheirContents.length&&!Ae.stripTogetherWithTheirContents.every((d,Ie)=>typeof d=="string"||(T.el=d,T.i=Ie,!1)))throw new TypeError(`string-strip-html/stripHtml(): [THROW_ID_05] Optional Options Object's key stripTogetherWithTheirContents was set to contain not just string elements! For example, element at index ${T.i} has a value ${T.el} which is not string but ${(typeof T.el).toLowerCase()}.`);Ae.cb||(Ae.cb=({rangesArr:d,proposedReturn:Ie})=>{Ie&&d.push(...Ie)});let _=new mt({limitToBeAddedWhitespace:!0,limitLinebreaksCount:2});if(!Ae.skipHtmlDecoding)for(;s!==dt(s,{scope:"strict"});)s=dt(s,{scope:"strict"});for(let d=0,Ie=s.length;d<Ie;d++){if(Object.keys(m).length>1&&m.lastClosingBracketAt&&m.lastClosingBracketAt<d&&s[d]!==" "&&Y===null&&(Y=d),ar(d)&&(!m||Object.keys(m).length<2)&&d>1){for(let p=d;p--;)if(s[p-1]===void 0||ar(p)){let C=s[p-1]===void 0?p:p+1,J=s.slice(C,d+1);if(s!==`<${xe(J.trim(),"/>")}>`&&[...re].some(me=>xe(J.trim().split(/\s+/).filter(Oe=>Oe.trim()).filter((Oe,Ke)=>Ke===0),"/>").toLowerCase()===me)&&w(`<${J.trim()}>`,Ae).result===""){ge.length&&ge[ge.length-1][0]===m.lastOpeningBracketAt||ge.push([C,d+1]),ae.length&&ae[ae.length-1][0]===m.lastOpeningBracketAt||ae.push([C,d+1]);let me=Se(s,d,C,d+1,C,d+1),Oe=d+1;if(s[Oe]&&!s[Oe].trim()){for(let Ke=Oe;Ke<Ie;Ke++)if(s[Ke].trim()){Oe=Ke;break}}Ae.cb({tag:m,deleteFrom:C,deleteTo:Oe,insert:me,rangesArr:_,proposedReturn:[C,Oe,me]})}break}}if(s[d]!=="/"||m.quotes&&m.quotes.value||!Number.isInteger(m.lastOpeningBracketAt)||Number.isInteger(m.lastClosingBracketAt)||(m.slashPresent=d),s[d]==='"'||s[d]==="'")if(m.nameStarts&&m.quotes&&m.quotes.value&&m.quotes.value===s[d]){let p;be.valueEnds=d,be.value=s.slice(be.valueStarts,d),m.attributes.push(be),be={},m.quotes=void 0,Ae.dumpLinkHrefsNearby.enabled&&m.attributes.some(C=>{if(C.name&&C.name.toLowerCase()==="href")return p=`${Ae.dumpLinkHrefsNearby.wrapHeads||""}${C.value}${Ae.dumpLinkHrefsNearby.wrapTails||""}`,!0})&&(Ye={tagName:m.name,hrefValue:p,openingTagEnds:void 0})}else!m.quotes&&m.nameStarts&&(m.quotes={},m.quotes.value=s[d],m.quotes.start=d,be.nameStarts&&be.nameEnds&&be.nameEnds<d&&be.nameStarts<d&&!be.valueStarts&&(be.name=s.slice(be.nameStarts,be.nameEnds)));if(!(m.nameStarts===void 0||m.nameEnds!==void 0||s[d].trim()&&(qe=s[d],/[-_A-Za-z0-9]/.test(qe)))){if(m.nameEnds=d,m.name=s.slice(m.nameStarts,m.nameEnds+(ar(d)||s[d]==="/"||s[d+1]!==void 0?0:1)),s[m.nameStarts-1]!=="!"&&!m.name.replace(/-/g,"").length||/^\d+$/.test(m.name[0])){m={};continue}if(Xe(d)){nr(Ae);let p=Se(s,d,m.leftOuterWhitespace,d,m.lastOpeningBracketAt,d);(Ae.stripTogetherWithTheirContents.includes(m.name)||Ae.stripTogetherWithTheirContents.includes("*"))&&(ae=ae.filter(([C,J])=>!(C===m.leftOuterWhitespace&&J===d))),Ae.cb({tag:m,deleteFrom:m.leftOuterWhitespace,deleteTo:d,insert:`${p}${sr}${p}`,rangesArr:_,proposedReturn:[m.leftOuterWhitespace,d,`${p}${sr}${p}`]}),mr(),fe(d,Ae,_)}}if(m.quotes&&m.quotes.start&&m.quotes.start<d&&!m.quotes.end&&be.nameEnds&&be.equalsAt&&!be.valueStarts&&(be.valueStarts=d),m.quotes||!be.nameEnds||s[d]!=="="||be.valueStarts||be.equalsAt||(be.equalsAt=d),!m.quotes&&be.nameStarts&&be.nameEnds&&!be.valueStarts&&s[d].trim()&&s[d]!=="="&&(m.attributes.push(be),be={}),m.quotes||!be.nameStarts||be.nameEnds||(s[d].trim()?s[d]==="="?be.equalsAt||(be.nameEnds=d,be.equalsAt=d,be.name=s.slice(be.nameStarts,be.nameEnds)):(s[d]==="/"||ar(d)||Xe(d))&&(be.nameEnds=d,be.name=s.slice(be.nameStarts,be.nameEnds),m.attributes.push(be),be={}):(be.nameEnds=d,be.name=s.slice(be.nameStarts,be.nameEnds))),m.quotes||!(m.nameEnds<d)||s[d-1].trim()||!s[d].trim()||"<>/!".includes(s[d])||be.nameStarts||m.lastClosingBracketAt||(be.nameStarts=d),m.lastOpeningBracketAt!==null&&m.lastOpeningBracketAt<d&&s[d]==="/"&&m.onlyPlausible&&(m.onlyPlausible=!1),m.lastOpeningBracketAt!==null&&m.lastOpeningBracketAt<d&&s[d]!=="/"&&(m.onlyPlausible===void 0&&(m.onlyPlausible=!(s[d].trim()&&!Xe(d)||m.slashPresent)),!s[d].trim()||m.nameStarts!==void 0||Xe(d)||s[d]==="/"||ar(d)||s[d]==="!"||(m.nameStarts=d,m.nameContainsLetters=!1)),m.nameStarts&&!m.quotes&&s[d].toLowerCase()!==s[d].toUpperCase()&&(m.nameContainsLetters=!0),ar(d)&&rt(m,s,d)&&m.lastOpeningBracketAt!==void 0&&(m.lastClosingBracketAt=d,Y=null,Object.keys(be).length&&(m.attributes.push(be),be={}),Ae.dumpLinkHrefsNearby.enabled&&Ye.tagName&&!Ye.openingTagEnds&&(Ye.openingTagEnds=d)),m.lastOpeningBracketAt!==void 0){if(m.lastClosingBracketAt===void 0){if(m.lastOpeningBracketAt<d&&!Xe(d)&&(s[d+1]===void 0||Xe(d+1))&&m.nameContainsLetters){if(m.name=s.slice(m.nameStarts,m.nameEnds?m.nameEnds:d+1).toLowerCase(),ge.length&&ge[ge.length-1][0]===m.lastOpeningBracketAt||ge.push([m.lastOpeningBracketAt,d+1]),Ae.ignoreTags.includes(m.name)||m.onlyPlausible&&!re.has(m.name)){m={},be={};continue}if((re.has(m.name)||le.has(m.name))&&(m.onlyPlausible===!1||m.onlyPlausible===!0&&m.attributes.length)||s[d+1]===void 0){nr(Ae);let p=Se(s,d,m.leftOuterWhitespace,d+1,m.lastOpeningBracketAt,m.lastClosingBracketAt);Ae.cb({tag:m,deleteFrom:m.leftOuterWhitespace,deleteTo:d+1,insert:`${p}${sr}${p}`,rangesArr:_,proposedReturn:[m.leftOuterWhitespace,d+1,`${p}${sr}${p}`]}),mr(),fe(d,Ae,_)}if(!ae.length||ae[ae.length-1][0]!==m.lastOpeningBracketAt&&ae[ae.length-1][1]!==d+1)if(Ae.stripTogetherWithTheirContents.includes(m.name)||Ae.stripTogetherWithTheirContents.includes("*")){let p;for(let C=ie.length;C--;)ie[C].name===m.name&&(p=ie[C]);p?(ae=ae.filter(([C])=>C!==p.lastOpeningBracketAt),ae.push([p.lastOpeningBracketAt,d+1])):ae.push([m.lastOpeningBracketAt,d+1])}else ae.push([m.lastOpeningBracketAt,d+1])}}else if(d>m.lastClosingBracketAt&&s[d].trim()||s[d+1]===void 0){let p=m.lastClosingBracketAt===d?d+1:d;if(Ae.trimOnlySpaces&&p===Ie-1&&Y!==null&&Y<d&&(p=Y),ge.length&&ge[ge.length-1][0]===m.lastOpeningBracketAt||ge.push([m.lastOpeningBracketAt,m.lastClosingBracketAt+1]),!Dr&&Ae.ignoreTags.includes(m.name)||Dr&&!Ae.onlyStripTags.includes(m.name))Ae.cb({tag:m,deleteFrom:null,deleteTo:null,insert:null,rangesArr:_,proposedReturn:null}),m={},be={};else if(!m.onlyPlausible||m.attributes.length===0&&m.name&&(re.has(m.name.toLowerCase())||le.has(m.name.toLowerCase()))||m.attributes&&m.attributes.some(C=>C.equalsAt)){ae.length&&ae[ae.length-1][0]===m.lastOpeningBracketAt||ae.push([m.lastOpeningBracketAt,m.lastClosingBracketAt+1]);let C=Se(s,d,m.leftOuterWhitespace,p,m.lastOpeningBracketAt,m.lastClosingBracketAt),J;sr="",k=!1,nr(Ae),J=typeof sr=="string"&&sr.length?`${C}${sr}${C===`

`?`
`:C}`:C,m.leftOuterWhitespace!==0&&st(s,p-1)||(J=""),Ae.cb({tag:m,deleteFrom:m.leftOuterWhitespace,deleteTo:p,insert:J,rangesArr:_,proposedReturn:[m.leftOuterWhitespace,p,J]}),mr(),fe(d,Ae,_)}else m={};ar(d)||(m={})}}if(Xe(d)&&!Xe(d-1)&&!`'"`.includes(s[d+1])&&(!`'"`.includes(s[d+2])||/\w/.test(s[d+1]))&&(s[d+1]!=="c"||s[d+2]!==":")&&(s[d+1]!=="f"||s[d+2]!=="m"||s[d+3]!=="t"||s[d+4]!==":")&&(s[d+1]!=="s"||s[d+2]!=="q"||s[d+3]!=="l"||s[d+4]!==":")&&(s[d+1]!=="x"||s[d+2]!==":")&&(s[d+1]!=="f"||s[d+2]!=="n"||s[d+3]!==":")&&rt(m,s,d)){if(ar(st(s,d)))continue;if(m.nameEnds&&m.nameEnds<d&&!m.lastClosingBracketAt&&(m.onlyPlausible===!0&&m.attributes&&m.attributes.length||m.onlyPlausible===!1)){let p=Se(s,d,m.leftOuterWhitespace,d,m.lastOpeningBracketAt,d);Ae.cb({tag:m,deleteFrom:m.leftOuterWhitespace,deleteTo:d,insert:p,rangesArr:_,proposedReturn:[m.leftOuterWhitespace,d,p]}),fe(d,Ae,_),m={},be={}}if(m.lastOpeningBracketAt!==void 0&&m.onlyPlausible&&m.name&&!m.quotes&&(m.lastOpeningBracketAt=void 0,m.name=void 0,m.onlyPlausible=!1),!(m.lastOpeningBracketAt!==void 0&&m.onlyPlausible||m.quotes)&&(m.lastOpeningBracketAt=d,m.slashPresent=!1,m.attributes=[],m.leftOuterWhitespace=Re===null?d:Ae.trimOnlySpaces&&Re===0?or||d:Re,`${s[d+1]}${s[d+2]}${s[d+3]}`=="!--"||`${s[d+1]}${s[d+2]}${s[d+3]}${s[d+4]}${s[d+5]}${s[d+6]}${s[d+7]}${s[d+8]}`=="![CDATA[")){let p,C=!0;s[d+2]==="-"&&(C=!1);for(let J=d;J<Ie;J++)if((!p&&C&&`${s[J-2]}${s[J-1]}${s[J]}`=="]]>"||!C&&`${s[J-2]}${s[J-1]}${s[J]}`=="-->")&&(p=J),p&&(p<J&&s[J].trim()||s[J+1]===void 0)){let me=J;(s[J+1]===void 0&&!s[J].trim()||s[J]===">")&&(me+=1),ge.length&&ge[ge.length-1][0]===m.lastOpeningBracketAt||ge.push([m.lastOpeningBracketAt,p+1]),ae.length&&ae[ae.length-1][0]===m.lastOpeningBracketAt||ae.push([m.lastOpeningBracketAt,p+1]);let Oe=Se(s,J,m.leftOuterWhitespace,me,m.lastOpeningBracketAt,p);Ae.cb({tag:m,deleteFrom:m.leftOuterWhitespace,deleteTo:me,insert:Oe,rangesArr:_,proposedReturn:[m.leftOuterWhitespace,me,Oe]}),d=J-1,s[J]===">"&&(d=J),m={},be={};break}}}s[d].trim()?Re!==null&&(!m.quotes&&be.equalsAt>Re-1&&be.nameEnds&&be.equalsAt>be.nameEnds&&s[d]!=='"'&&s[d]!=="'"&&(o(be)&&m.attributes.push(be),be={},m.equalsSpottedAt=void 0),Re=null):Re===null&&(Re=d,m.lastOpeningBracketAt!==void 0&&m.lastOpeningBracketAt<d&&m.nameStarts&&m.nameStarts<m.lastOpeningBracketAt&&d===m.lastOpeningBracketAt+1&&!ie.some(p=>p.name===m.name)&&(m.onlyPlausible=!0,m.name=void 0,m.nameStarts=void 0)),s[d]===" "?or===null&&(or=d):or!==null&&(or=null)}var qe;if(s&&(Ae.trimOnlySpaces&&s[0]===" "||!Ae.trimOnlySpaces&&!s[0].trim()))for(let d=0,Ie=s.length;d<Ie;d++){if(Ae.trimOnlySpaces&&s[d]!==" "||!Ae.trimOnlySpaces&&s[d].trim()){_.push([0,d]);break}s[d+1]||_.push([0,d+1])}if(s&&(Ae.trimOnlySpaces&&s[s.length-1]===" "||!Ae.trimOnlySpaces&&!s[s.length-1].trim())){for(let d=s.length;d--;)if(Ae.trimOnlySpaces&&s[d]!==" "||!Ae.trimOnlySpaces&&s[d].trim()){_.push([d+1,s.length]);break}}let ce=_.current();if((!L||!L.cb)&&ce&&(ce[0]&&!ce[0][0]&&(_.ranges[0]=[_.ranges[0][0],_.ranges[0][1]]),ce[ce.length-1]&&ce[ce.length-1][1]===s.length&&_.ranges)){let d=_.ranges[_.ranges.length-1][0];s[d-1]&&(Ae.trimOnlySpaces&&s[d-1]===" "||!Ae.trimOnlySpaces&&!s[d-1].trim())&&(d-=1);let Ie=_.ranges[_.ranges.length-1][2];_.ranges[_.ranges.length-1]=[d,_.ranges[_.ranges.length-1][1]],Ie&&Ie.trim()&&_.ranges[_.ranges.length-1].push(Ie.trimEnd())}return{log:{timeTakenInMilliseconds:Date.now()-R},result:Wr(s,_.current()),ranges:_.current(),allTagLocations:ge,filteredTagLocations:ae}},e.version="8.2.9",Object.defineProperty(e,"__esModule",{value:!0})})});var dn=et((la,pn)=>{(function(e,y){typeof la=="object"&&typeof pn!="undefined"?y(la):typeof define=="function"&&define.amd?define(["exports"],y):y((e=typeof globalThis!="undefined"?globalThis:e||self).rangesInvert={})})(la,function(e){"use strict";let y={strictlyTwoElementsInRangeArrays:!1,progressFn:null};function h(pe,U){if(!Array.isArray(pe)||!pe.length)return pe;let l=ye(ye({},y),U),r,o;if(l.strictlyTwoElementsInRangeArrays&&!pe.filter(n=>n).every((n,P)=>n.length===2||(r=P,o=n.length,!1)))throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${r}th range (${JSON.stringify(pe[r],null,4)}) has not two but ${o} elements!`);if(!pe.filter(n=>n).every((n,P)=>!(!Number.isInteger(n[0])||n[0]<0||!Number.isInteger(n[1])||n[1]<0)||(r=P,!1)))throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${r}th range (${JSON.stringify(pe[r],null,4)}) does not consist of only natural numbers!`);let c=pe.filter(n=>n).length**2,b=0;return Array.from(pe).filter(n=>n).sort((n,P)=>(l.progressFn&&(b+=1,l.progressFn(Math.floor(100*b/c))),n[0]===P[0]?n[1]<P[1]?-1:n[1]>P[1]?1:0:n[0]<P[0]?-1:1))}let a={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};function g(pe,U){function l(u){return u&&typeof u=="object"&&!Array.isArray(u)}if(!Array.isArray(pe)||!pe.length)return null;let r;if(U){if(!l(U))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:
${JSON.stringify(U,null,4)} (type ${typeof U})`);if(r=ye(ye({},a),U),r.progressFn&&l(r.progressFn)&&!Object.keys(r.progressFn).length)r.progressFn=null;else if(r.progressFn&&typeof r.progressFn!="function")throw new Error(`ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "${typeof r.progressFn}", equal to ${JSON.stringify(r.progressFn,null,4)}`);if(r.mergeType&&+r.mergeType!=1&&+r.mergeType!=2)throw new Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof r.mergeType}", equal to ${JSON.stringify(r.mergeType,null,4)}`);if(typeof r.joinRangesThatTouchEdges!="boolean")throw new Error(`ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof r.joinRangesThatTouchEdges}", equal to ${JSON.stringify(r.joinRangesThatTouchEdges,null,4)}`)}else r=ye({},a);let o=pe.filter(u=>u).map(u=>[...u]).filter(u=>u[2]!==void 0||u[0]!==u[1]),c,b,n;if(c=r.progressFn?h(o,{progressFn:u=>{n=Math.floor(u/5),n!==b&&(b=n,r.progressFn(n))}}):h(o),!c)return null;let P=c.length-1;for(let u=P;u>0;u--)r.progressFn&&(n=Math.floor(78*(1-u/P))+21,n!==b&&n>b&&(b=n,r.progressFn(n))),(c[u][0]<=c[u-1][0]||!r.joinRangesThatTouchEdges&&c[u][0]<c[u-1][1]||r.joinRangesThatTouchEdges&&c[u][0]<=c[u-1][1])&&(c[u-1][0]=Math.min(c[u][0],c[u-1][0]),c[u-1][1]=Math.max(c[u][1],c[u-1][1]),c[u][2]!==void 0&&(c[u-1][0]>=c[u][0]||c[u-1][1]<=c[u][1])&&c[u-1][2]!==null&&(c[u][2]===null&&c[u-1][2]!==null?c[u-1][2]=null:c[u-1][2]!=null?+r.mergeType==2&&c[u-1][0]===c[u][0]?c[u-1][2]=c[u][2]:c[u-1][2]+=c[u][2]:c[u-1][2]=c[u][2]),c.splice(u,1),u=c.length);return c.length?c:null}e.rInvert=function(pe,U,l){if(!Array.isArray(pe)&&pe!==null)throw new TypeError(`ranges-invert: [THROW_ID_01] Input's first argument must be an array, consisting of range arrays! Currently its type is: ${typeof pe}, equal to: ${JSON.stringify(pe,null,4)}`);if(!Number.isInteger(U)||U<0)throw new TypeError(`ranges-invert: [THROW_ID_02] Input's second argument must be a natural number or zero (coming from String.length)! Currently its type is: ${typeof U}, equal to: ${JSON.stringify(U,null,4)}`);if(Array.isArray(pe)&&typeof pe[0]=="number"&&typeof pe[1]=="number")throw new TypeError(`ranges-invert: [THROW_ID_07] The first argument should be AN ARRAY OF RANGES, not a single range! Currently arrOfRanges = ${JSON.stringify(pe,null,0)}!`);if(!Array.isArray(pe)||!pe.filter(n=>Array.isArray(n)&&n[0]!==n[1]).length||!U)return U?[[0,U]]:null;let r=ye({strictlyTwoElementsInRangeArrays:!1,skipChecks:!1},l),o,c,b=0;if(!r.skipChecks&&r.strictlyTwoElementsInRangeArrays&&!pe.filter(n=>n).every((n,P)=>n.length===2||(b=P,o=n.length,!1)))throw new TypeError(`ranges-invert: [THROW_ID_04] Because opts.strictlyTwoElementsInRangeArrays was enabled, all ranges must be strictly two-element-long. However, the ${b}th range (${JSON.stringify(pe[b],null,0)}) has not two but ${o} elements!`);if(!r.skipChecks&&!pe.every((n,P)=>!(!Number.isInteger(n[0])||n[0]<0||!Number.isInteger(n[1])||n[1]<0)||(b=P,!1)))throw new TypeError(`ranges-invert: [THROW_ID_05] The first argument should be AN ARRAY OF ARRAYS! Each sub-array means string slice indexes. In our case, here ${b+1}th range (${JSON.stringify(pe[b],null,0)}) does not consist of only natural numbers!`);return c=r.skipChecks?pe.filter(n=>n[0]!==n[1]):g(pe.filter(n=>n[0]!==n[1])),function(n,P){if(n===null)return null;if(!Array.isArray(n))throw new TypeError(`ranges-crop: [THROW_ID_01] The first input's argument must be an array, consisting of range arrays! Currently its type is: ${typeof n}, equal to: ${JSON.stringify(n,null,4)}`);if(!Number.isInteger(P))throw new TypeError(`ranges-crop: [THROW_ID_02] The second input's argument must be a natural number or zero (coming from String.length)! Currently its type is: ${typeof P}, equal to: ${JSON.stringify(P,null,4)}`);if(!n.filter(t=>t).length)return n.filter(t=>t);let u=0;if(!n.filter(t=>t).every((t,O)=>!(!Number.isInteger(t[0])||!Number.isInteger(t[1]))||(u=O,!1)))throw Array.isArray(n)&&typeof n[0]=="number"&&typeof n[1]=="number"?new TypeError(`ranges-crop: [THROW_ID_03] The first argument should be AN ARRAY OF RANGES, not a single range! Currently arrOfRanges = ${JSON.stringify(n,null,0)}!`):new TypeError(`ranges-crop: [THROW_ID_04] The first argument should be AN ARRAY OF ARRAYS! Each sub-array means string slice indexes. In our case, here ${u}th range (${JSON.stringify(n[u],null,0)}) does not consist of only natural numbers!`);if(!n.filter(t=>t).every((t,O)=>t[2]==null||typeof t[2]=="string"||(u=O,!1)))throw new TypeError(`ranges-crop: [THROW_ID_05] The third argument, if present at all, should be of a string-type or null. Currently the ${u}th range ${JSON.stringify(n[u],null,0)} has a argument in the range of a type ${typeof n[u][2]}`);let i=(g(n)||[]).filter(t=>t[0]<=P&&(t[2]!=null||t[0]<P)).map(t=>t[1]>P?t[2]!=null?[t[0],P,t[2]]:[t[0],P]:t);return i===[]?null:i}(c.reduce((n,P,u,i)=>{let t=[];u===0&&i[0][0]!==0&&t.push([0,i[0][0]]);let O=u<i.length-1?i[u+1][0]:U;if(P[1]!==O){if(r.skipChecks&&P[1]>O)throw new TypeError(`ranges-invert: [THROW_ID_08] The checking (opts.skipChecks) is off and input ranges were not sorted! We nearly wrote range [${P[1]}, ${O}] which is backwards. For investigation, whole ranges array is:
${JSON.stringify(i,null,0)}`);t.push([P[1],O])}return n.concat(t)},[]),U)},e.version="4.0.12",Object.defineProperty(e,"__esModule",{value:!0})})});var gn=et((ua,mn)=>{(function(e,y){typeof ua=="object"&&typeof mn!="undefined"?y(ua):typeof define=="function"&&define.amd?define(["exports"],y):y((e=typeof globalThis!="undefined"?globalThis:e||self).rangesApply={})})(ua,function(e){"use strict";let y={strictlyTwoElementsInRangeArrays:!1,progressFn:null};function h(pe,U){if(!Array.isArray(pe)||!pe.length)return pe;let l=ye(ye({},y),U),r,o;if(l.strictlyTwoElementsInRangeArrays&&!pe.filter(n=>n).every((n,P)=>n.length===2||(r=P,o=n.length,!1)))throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${r}th range (${JSON.stringify(pe[r],null,4)}) has not two but ${o} elements!`);if(!pe.filter(n=>n).every((n,P)=>!(!Number.isInteger(n[0])||n[0]<0||!Number.isInteger(n[1])||n[1]<0)||(r=P,!1)))throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${r}th range (${JSON.stringify(pe[r],null,4)}) does not consist of only natural numbers!`);let c=pe.filter(n=>n).length**2,b=0;return Array.from(pe).filter(n=>n).sort((n,P)=>(l.progressFn&&(b+=1,l.progressFn(Math.floor(100*b/c))),n[0]===P[0]?n[1]<P[1]?-1:n[1]>P[1]?1:0:n[0]<P[0]?-1:1))}let a={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};function g(pe,U){function l(u){return u&&typeof u=="object"&&!Array.isArray(u)}if(!Array.isArray(pe)||!pe.length)return null;let r;if(U){if(!l(U))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:
${JSON.stringify(U,null,4)} (type ${typeof U})`);if(r=ye(ye({},a),U),r.progressFn&&l(r.progressFn)&&!Object.keys(r.progressFn).length)r.progressFn=null;else if(r.progressFn&&typeof r.progressFn!="function")throw new Error(`ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "${typeof r.progressFn}", equal to ${JSON.stringify(r.progressFn,null,4)}`);if(r.mergeType&&+r.mergeType!=1&&+r.mergeType!=2)throw new Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof r.mergeType}", equal to ${JSON.stringify(r.mergeType,null,4)}`);if(typeof r.joinRangesThatTouchEdges!="boolean")throw new Error(`ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof r.joinRangesThatTouchEdges}", equal to ${JSON.stringify(r.joinRangesThatTouchEdges,null,4)}`)}else r=ye({},a);let o=pe.filter(u=>u).map(u=>[...u]).filter(u=>u[2]!==void 0||u[0]!==u[1]),c,b,n;if(c=r.progressFn?h(o,{progressFn:u=>{n=Math.floor(u/5),n!==b&&(b=n,r.progressFn(n))}}):h(o),!c)return null;let P=c.length-1;for(let u=P;u>0;u--)r.progressFn&&(n=Math.floor(78*(1-u/P))+21,n!==b&&n>b&&(b=n,r.progressFn(n))),(c[u][0]<=c[u-1][0]||!r.joinRangesThatTouchEdges&&c[u][0]<c[u-1][1]||r.joinRangesThatTouchEdges&&c[u][0]<=c[u-1][1])&&(c[u-1][0]=Math.min(c[u][0],c[u-1][0]),c[u-1][1]=Math.max(c[u][1],c[u-1][1]),c[u][2]!==void 0&&(c[u-1][0]>=c[u][0]||c[u-1][1]<=c[u][1])&&c[u-1][2]!==null&&(c[u][2]===null&&c[u-1][2]!==null?c[u-1][2]=null:c[u-1][2]!=null?+r.mergeType==2&&c[u-1][0]===c[u][0]?c[u-1][2]=c[u][2]:c[u-1][2]+=c[u][2]:c[u-1][2]=c[u][2]),c.splice(u,1),u=c.length);return c.length?c:null}e.rApply=function(pe,U,l){let r,o=0,c=0;if(arguments.length===0)throw new Error("ranges-apply: [THROW_ID_01] inputs missing!");if(typeof pe!="string")throw new TypeError(`ranges-apply: [THROW_ID_02] first input argument must be a string! Currently it's: ${typeof pe}, equal to: ${JSON.stringify(pe,null,4)}`);if(U&&!Array.isArray(U))throw new TypeError(`ranges-apply: [THROW_ID_03] second input argument must be an array (or null)! Currently it's: ${typeof U}, equal to: ${JSON.stringify(U,null,4)}`);if(l&&typeof l!="function")throw new TypeError(`ranges-apply: [THROW_ID_04] the third input argument must be a function (or falsey)! Currently it's: ${typeof l}, equal to: ${JSON.stringify(l,null,4)}`);if(!U||!U.filter(i=>i).length)return pe;r=Array.isArray(U)&&Number.isInteger(U[0])&&Number.isInteger(U[1])?[Array.from(U)]:Array.from(U);let b=r.length,n=0;r.filter(i=>i).forEach((i,t)=>{if(l&&(o=Math.floor(n/b*10),o!==c&&(c=o,l(o))),!Array.isArray(i))throw new TypeError(`ranges-apply: [THROW_ID_05] ranges array, second input arg., has ${t}th element not an array: ${JSON.stringify(i,null,4)}, which is ${typeof i}`);if(!Number.isInteger(i[0])){if(!Number.isInteger(+i[0])||+i[0]<0)throw new TypeError(`ranges-apply: [THROW_ID_06] ranges array, second input arg. has ${t}th element, array ${JSON.stringify(i,null,0)}. Its first element is not an integer, string index, but ${typeof i[0]}, equal to: ${JSON.stringify(i[0],null,4)}.`);r[t][0]=+r[t][0]}if(!Number.isInteger(i[1])){if(!Number.isInteger(+i[1])||+i[1]<0)throw new TypeError(`ranges-apply: [THROW_ID_07] ranges array, second input arg. has ${t}th element, array ${JSON.stringify(i,null,0)}. Its second element is not an integer, string index, but ${typeof i[1]}, equal to: ${JSON.stringify(i[1],null,4)}.`);r[t][1]=+r[t][1]}n+=1});let P=g(r,{progressFn:i=>{l&&(o=10+Math.floor(i/10),o!==c&&(c=o,l(o)))}}),u=Array.isArray(P)?P.length:0;if(u>0){let i=pe.slice(P[u-1][1]);pe=P.reduce((t,O,v,M)=>(l&&(o=20+Math.floor(v/u*80),o!==c&&(c=o,l(o))),t+pe.slice(v===0?0:M[v-1][1],M[v][0])+(M[v][2]||"")),""),pe+=i}return pe},e.version="5.0.12",Object.defineProperty(e,"__esModule",{value:!0})})});var hn=et((po,fn)=>{"use strict";fn.exports=({onlyFirst:e=!1}={})=>{let y=["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");return new RegExp(y,e?void 0:"g")}});var yn=et((ca,bn)=>{(function(e,y){typeof ca=="object"&&typeof bn!="undefined"?y(ca):typeof define=="function"&&define.amd?define(["exports"],y):y((e=typeof globalThis!="undefined"?globalThis:e||self).rangesPush={})})(ca,function(e){"use strict";function y(o,c=1){function b(P){return Array.from(P).reverse().join("")}function n(P,u,i){let t=i?`
`:"\r",O=i?"\r":`
`;if(!P)return P;let v=0,M="";for(let q=0,Q=P.length;q<Q;q++)(P[q]===t||P[q]===O&&P[q-1]!==t)&&v++,`\r
`.includes(P[q])||P[q]==="\xA0"?P[q]==="\xA0"?M+=P[q]:P[q]===t?v<=u&&(M+=P[q],P[q+1]===O&&(M+=P[q+1],q++)):P[q]===O&&(!P[q-1]||P[q-1]!==t)&&v<=u&&(M+=P[q]):P[q+1]||v||(M+=" ");return M}if(typeof o=="string"&&o.length){let P=1;typeof+c=="number"&&Number.isInteger(+c)&&+c>=0&&(P=+c);let u="",i="";if(o.trim()){if(!o[0].trim()){for(let t=0,O=o.length;t<O;t++)if(o[t].trim()){u=o.slice(0,t);break}}}else u=o;if(o.trim()&&(o.slice(-1).trim()===""||o.slice(-1)==="\xA0")){for(let t=o.length;t--;)if(o[t].trim()){i=o.slice(t+1);break}}return`${n(u,P,!1)}${o.trim()}${b(n(b(i),P,!0))}`}return o}let h={strictlyTwoElementsInRangeArrays:!1,progressFn:null};function a(o,c){if(!Array.isArray(o)||!o.length)return o;let b=ye(ye({},h),c),n,P;if(b.strictlyTwoElementsInRangeArrays&&!o.filter(t=>t).every((t,O)=>t.length===2||(n=O,P=t.length,!1)))throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${n}th range (${JSON.stringify(o[n],null,4)}) has not two but ${P} elements!`);if(!o.filter(t=>t).every((t,O)=>!(!Number.isInteger(t[0])||t[0]<0||!Number.isInteger(t[1])||t[1]<0)||(n=O,!1)))throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${n}th range (${JSON.stringify(o[n],null,4)}) does not consist of only natural numbers!`);let u=o.filter(t=>t).length**2,i=0;return Array.from(o).filter(t=>t).sort((t,O)=>(b.progressFn&&(i+=1,b.progressFn(Math.floor(100*i/u))),t[0]===O[0]?t[1]<O[1]?-1:t[1]>O[1]?1:0:t[0]<O[0]?-1:1))}let g={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};function pe(o){return o!=null}function U(o){return Number.isInteger(o)&&o>=0}function l(o){return typeof o=="string"}let r={limitToBeAddedWhitespace:!1,limitLinebreaksCount:1,mergeType:1};e.Ranges=class{constructor(o){let c=ye(ye({},r),o);if(c.mergeType&&c.mergeType!==1&&c.mergeType!==2)if(l(c.mergeType)&&c.mergeType.trim()==="1")c.mergeType=1;else{if(!l(c.mergeType)||c.mergeType.trim()!=="2")throw new Error(`ranges-push: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof c.mergeType}", equal to ${JSON.stringify(c.mergeType,null,4)}`);c.mergeType=2}this.opts=c,this.ranges=[]}add(o,c,b){if(o==null&&c==null)return;if(pe(o)&&!pe(c)){if(Array.isArray(o)){if(o.length){if(o.some(u=>Array.isArray(u)))return void o.forEach(u=>{Array.isArray(u)&&this.add(...u)});o.length&&U(+o[0])&&U(+o[1])&&this.add(...o)}return}throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_12] the first input argument, "from" is set (${JSON.stringify(o,null,0)}) but second-one, "to" is not (${JSON.stringify(c,null,0)})`)}if(!pe(o)&&pe(c))throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_13] the second input argument, "to" is set (${JSON.stringify(c,null,0)}) but first-one, "from" is not (${JSON.stringify(o,null,0)})`);let n=+o,P=+c;if(U(b)&&(b=String(b)),!U(n)||!U(P))throw U(n)&&n>=0?new TypeError(`ranges-push/Ranges/add(): [THROW_ID_10] "to" value, the second input argument, must be a natural number or zero! Currently it's of a type "${typeof P}" equal to: ${JSON.stringify(P,null,4)}`):new TypeError(`ranges-push/Ranges/add(): [THROW_ID_09] "from" value, the first input argument, must be a natural number or zero! Currently it's of a type "${typeof n}" equal to: ${JSON.stringify(n,null,4)}`);if(pe(b)&&!l(b)&&!U(b))throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_08] The third argument, the value to add, was given not as string but ${typeof b}, equal to:
${JSON.stringify(b,null,4)}`);if(pe(this.ranges)&&Array.isArray(this.last())&&n===this.last()[1]){if(this.last()[1]=P,this.last(),this.last()[2]!==null&&pe(b)){let u=!(this.last()[2]&&this.last()[2].length>0)||this.opts&&this.opts.mergeType&&this.opts.mergeType!==1?b:this.last()[2]+b;this.opts.limitToBeAddedWhitespace&&(u=y(u,this.opts.limitLinebreaksCount)),l(u)&&!u.length||(this.last()[2]=u)}}else{this.ranges||(this.ranges=[]);let u=b===void 0||l(b)&&!b.length?[n,P]:[n,P,b&&this.opts.limitToBeAddedWhitespace?y(b,this.opts.limitLinebreaksCount):b];this.ranges.push(u)}}push(o,c,b){this.add(o,c,b)}current(){return Array.isArray(this.ranges)&&this.ranges.length?(this.ranges=function(o,c){function b(v){return v&&typeof v=="object"&&!Array.isArray(v)}if(!Array.isArray(o)||!o.length)return null;let n;if(c){if(!b(c))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:
${JSON.stringify(c,null,4)} (type ${typeof c})`);if(n=ye(ye({},g),c),n.progressFn&&b(n.progressFn)&&!Object.keys(n.progressFn).length)n.progressFn=null;else if(n.progressFn&&typeof n.progressFn!="function")throw new Error(`ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "${typeof n.progressFn}", equal to ${JSON.stringify(n.progressFn,null,4)}`);if(n.mergeType&&+n.mergeType!=1&&+n.mergeType!=2)throw new Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof n.mergeType}", equal to ${JSON.stringify(n.mergeType,null,4)}`);if(typeof n.joinRangesThatTouchEdges!="boolean")throw new Error(`ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof n.joinRangesThatTouchEdges}", equal to ${JSON.stringify(n.joinRangesThatTouchEdges,null,4)}`)}else n=ye({},g);let P=o.filter(v=>v).map(v=>[...v]).filter(v=>v[2]!==void 0||v[0]!==v[1]),u,i,t;if(u=n.progressFn?a(P,{progressFn:v=>{t=Math.floor(v/5),t!==i&&(i=t,n.progressFn(t))}}):a(P),!u)return null;let O=u.length-1;for(let v=O;v>0;v--)n.progressFn&&(t=Math.floor(78*(1-v/O))+21,t!==i&&t>i&&(i=t,n.progressFn(t))),(u[v][0]<=u[v-1][0]||!n.joinRangesThatTouchEdges&&u[v][0]<u[v-1][1]||n.joinRangesThatTouchEdges&&u[v][0]<=u[v-1][1])&&(u[v-1][0]=Math.min(u[v][0],u[v-1][0]),u[v-1][1]=Math.max(u[v][1],u[v-1][1]),u[v][2]!==void 0&&(u[v-1][0]>=u[v][0]||u[v-1][1]<=u[v][1])&&u[v-1][2]!==null&&(u[v][2]===null&&u[v-1][2]!==null?u[v-1][2]=null:u[v-1][2]!=null?+n.mergeType==2&&u[v-1][0]===u[v][0]?u[v-1][2]=u[v][2]:u[v-1][2]+=u[v][2]:u[v-1][2]=u[v][2]),u.splice(v,1),v=u.length);return u.length?u:null}(this.ranges,{mergeType:this.opts.mergeType}),this.ranges&&this.opts.limitToBeAddedWhitespace?this.ranges.map(o=>pe(o[2])?[o[0],o[1],y(o[2],this.opts.limitLinebreaksCount)]:o):this.ranges):null}wipe(){this.ranges=[]}replace(o){if(Array.isArray(o)&&o.length){if(!Array.isArray(o[0])||!U(o[0][0]))throw new Error(`ranges-push/Ranges/replace(): [THROW_ID_11] Single range was given but we expected array of arrays! The first element, ${JSON.stringify(o[0],null,4)} should be an array and its first element should be an integer, a string index.`);this.ranges=Array.from(o)}else this.ranges=[]}last(){return Array.isArray(this.ranges)&&this.ranges.length?this.ranges[this.ranges.length-1]:null}},e.defaults=r,e.version="5.0.12",Object.defineProperty(e,"__esModule",{value:!0})})});var da=et((pa,Kt)=>{(function(e){var y=typeof pa=="object"&&pa,h=typeof Kt=="object"&&Kt&&Kt.exports==y&&Kt,a=typeof global=="object"&&global;(a.global===a||a.window===a)&&(e=a);var g=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,pe=/[\x01-\x7F]/g,U=/[\x01-\t\x0B\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g,l=/<\u20D2|=\u20E5|>\u20D2|\u205F\u200A|\u219D\u0338|\u2202\u0338|\u2220\u20D2|\u2229\uFE00|\u222A\uFE00|\u223C\u20D2|\u223D\u0331|\u223E\u0333|\u2242\u0338|\u224B\u0338|\u224D\u20D2|\u224E\u0338|\u224F\u0338|\u2250\u0338|\u2261\u20E5|\u2264\u20D2|\u2265\u20D2|\u2266\u0338|\u2267\u0338|\u2268\uFE00|\u2269\uFE00|\u226A\u0338|\u226A\u20D2|\u226B\u0338|\u226B\u20D2|\u227F\u0338|\u2282\u20D2|\u2283\u20D2|\u228A\uFE00|\u228B\uFE00|\u228F\u0338|\u2290\u0338|\u2293\uFE00|\u2294\uFE00|\u22B4\u20D2|\u22B5\u20D2|\u22D8\u0338|\u22D9\u0338|\u22DA\uFE00|\u22DB\uFE00|\u22F5\u0338|\u22F9\u0338|\u2933\u0338|\u29CF\u0338|\u29D0\u0338|\u2A6D\u0338|\u2A70\u0338|\u2A7D\u0338|\u2A7E\u0338|\u2AA1\u0338|\u2AA2\u0338|\u2AAC\uFE00|\u2AAD\uFE00|\u2AAF\u0338|\u2AB0\u0338|\u2AC5\u0338|\u2AC6\u0338|\u2ACB\uFE00|\u2ACC\uFE00|\u2AFD\u20E5|[\xA0-\u0113\u0116-\u0122\u0124-\u012B\u012E-\u014D\u0150-\u017E\u0192\u01B5\u01F5\u0237\u02C6\u02C7\u02D8-\u02DD\u0311\u0391-\u03A1\u03A3-\u03A9\u03B1-\u03C9\u03D1\u03D2\u03D5\u03D6\u03DC\u03DD\u03F0\u03F1\u03F5\u03F6\u0401-\u040C\u040E-\u044F\u0451-\u045C\u045E\u045F\u2002-\u2005\u2007-\u2010\u2013-\u2016\u2018-\u201A\u201C-\u201E\u2020-\u2022\u2025\u2026\u2030-\u2035\u2039\u203A\u203E\u2041\u2043\u2044\u204F\u2057\u205F-\u2063\u20AC\u20DB\u20DC\u2102\u2105\u210A-\u2113\u2115-\u211E\u2122\u2124\u2127-\u2129\u212C\u212D\u212F-\u2131\u2133-\u2138\u2145-\u2148\u2153-\u215E\u2190-\u219B\u219D-\u21A7\u21A9-\u21AE\u21B0-\u21B3\u21B5-\u21B7\u21BA-\u21DB\u21DD\u21E4\u21E5\u21F5\u21FD-\u2205\u2207-\u2209\u220B\u220C\u220F-\u2214\u2216-\u2218\u221A\u221D-\u2238\u223A-\u2257\u2259\u225A\u225C\u225F-\u2262\u2264-\u228B\u228D-\u229B\u229D-\u22A5\u22A7-\u22B0\u22B2-\u22BB\u22BD-\u22DB\u22DE-\u22E3\u22E6-\u22F7\u22F9-\u22FE\u2305\u2306\u2308-\u2310\u2312\u2313\u2315\u2316\u231C-\u231F\u2322\u2323\u232D\u232E\u2336\u233D\u233F\u237C\u23B0\u23B1\u23B4-\u23B6\u23DC-\u23DF\u23E2\u23E7\u2423\u24C8\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2550-\u256C\u2580\u2584\u2588\u2591-\u2593\u25A1\u25AA\u25AB\u25AD\u25AE\u25B1\u25B3-\u25B5\u25B8\u25B9\u25BD-\u25BF\u25C2\u25C3\u25CA\u25CB\u25EC\u25EF\u25F8-\u25FC\u2605\u2606\u260E\u2640\u2642\u2660\u2663\u2665\u2666\u266A\u266D-\u266F\u2713\u2717\u2720\u2736\u2758\u2772\u2773\u27C8\u27C9\u27E6-\u27ED\u27F5-\u27FA\u27FC\u27FF\u2902-\u2905\u290C-\u2913\u2916\u2919-\u2920\u2923-\u292A\u2933\u2935-\u2939\u293C\u293D\u2945\u2948-\u294B\u294E-\u2976\u2978\u2979\u297B-\u297F\u2985\u2986\u298B-\u2996\u299A\u299C\u299D\u29A4-\u29B7\u29B9\u29BB\u29BC\u29BE-\u29C5\u29C9\u29CD-\u29D0\u29DC-\u29DE\u29E3-\u29E5\u29EB\u29F4\u29F6\u2A00-\u2A02\u2A04\u2A06\u2A0C\u2A0D\u2A10-\u2A17\u2A22-\u2A27\u2A29\u2A2A\u2A2D-\u2A31\u2A33-\u2A3C\u2A3F\u2A40\u2A42-\u2A4D\u2A50\u2A53-\u2A58\u2A5A-\u2A5D\u2A5F\u2A66\u2A6A\u2A6D-\u2A75\u2A77-\u2A9A\u2A9D-\u2AA2\u2AA4-\u2AB0\u2AB3-\u2AC8\u2ACB\u2ACC\u2ACF-\u2ADB\u2AE4\u2AE6-\u2AE9\u2AEB-\u2AF3\u2AFD\uFB00-\uFB04]|\uD835[\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDD6B]/g,r={"\xAD":"shy","\u200C":"zwnj","\u200D":"zwj","\u200E":"lrm","\u2063":"ic","\u2062":"it","\u2061":"af","\u200F":"rlm","\u200B":"ZeroWidthSpace","\u2060":"NoBreak","\u0311":"DownBreve","\u20DB":"tdot","\u20DC":"DotDot","	":"Tab","\n":"NewLine","\u2008":"puncsp","\u205F":"MediumSpace","\u2009":"thinsp","\u200A":"hairsp","\u2004":"emsp13","\u2002":"ensp","\u2005":"emsp14","\u2003":"emsp","\u2007":"numsp","\xA0":"nbsp","\u205F\u200A":"ThickSpace","\u203E":"oline",_:"lowbar","\u2010":"dash","\u2013":"ndash","\u2014":"mdash","\u2015":"horbar",",":"comma",";":"semi","\u204F":"bsemi",":":"colon","\u2A74":"Colone","!":"excl","\xA1":"iexcl","?":"quest","\xBF":"iquest",".":"period","\u2025":"nldr","\u2026":"mldr","\xB7":"middot","'":"apos","\u2018":"lsquo","\u2019":"rsquo","\u201A":"sbquo","\u2039":"lsaquo","\u203A":"rsaquo",'"':"quot","\u201C":"ldquo","\u201D":"rdquo","\u201E":"bdquo","\xAB":"laquo","\xBB":"raquo","(":"lpar",")":"rpar","[":"lsqb","]":"rsqb","{":"lcub","}":"rcub","\u2308":"lceil","\u2309":"rceil","\u230A":"lfloor","\u230B":"rfloor","\u2985":"lopar","\u2986":"ropar","\u298B":"lbrke","\u298C":"rbrke","\u298D":"lbrkslu","\u298E":"rbrksld","\u298F":"lbrksld","\u2990":"rbrkslu","\u2991":"langd","\u2992":"rangd","\u2993":"lparlt","\u2994":"rpargt","\u2995":"gtlPar","\u2996":"ltrPar","\u27E6":"lobrk","\u27E7":"robrk","\u27E8":"lang","\u27E9":"rang","\u27EA":"Lang","\u27EB":"Rang","\u27EC":"loang","\u27ED":"roang","\u2772":"lbbrk","\u2773":"rbbrk","\u2016":"Vert","\xA7":"sect","\xB6":"para","@":"commat","*":"ast","/":"sol",undefined:null,"&":"amp","#":"num","%":"percnt","\u2030":"permil","\u2031":"pertenk","\u2020":"dagger","\u2021":"Dagger","\u2022":"bull","\u2043":"hybull","\u2032":"prime","\u2033":"Prime","\u2034":"tprime","\u2057":"qprime","\u2035":"bprime","\u2041":"caret","`":"grave","\xB4":"acute","\u02DC":"tilde","^":"Hat","\xAF":"macr","\u02D8":"breve","\u02D9":"dot","\xA8":"die","\u02DA":"ring","\u02DD":"dblac","\xB8":"cedil","\u02DB":"ogon",\u02C6:"circ",\u02C7:"caron","\xB0":"deg","\xA9":"copy","\xAE":"reg","\u2117":"copysr",\u2118:"wp","\u211E":"rx","\u2127":"mho","\u2129":"iiota","\u2190":"larr","\u219A":"nlarr","\u2192":"rarr","\u219B":"nrarr","\u2191":"uarr","\u2193":"darr","\u2194":"harr","\u21AE":"nharr","\u2195":"varr","\u2196":"nwarr","\u2197":"nearr","\u2198":"searr","\u2199":"swarr","\u219D":"rarrw","\u219D\u0338":"nrarrw","\u219E":"Larr","\u219F":"Uarr","\u21A0":"Rarr","\u21A1":"Darr","\u21A2":"larrtl","\u21A3":"rarrtl","\u21A4":"mapstoleft","\u21A5":"mapstoup","\u21A6":"map","\u21A7":"mapstodown","\u21A9":"larrhk","\u21AA":"rarrhk","\u21AB":"larrlp","\u21AC":"rarrlp","\u21AD":"harrw","\u21B0":"lsh","\u21B1":"rsh","\u21B2":"ldsh","\u21B3":"rdsh","\u21B5":"crarr","\u21B6":"cularr","\u21B7":"curarr","\u21BA":"olarr","\u21BB":"orarr","\u21BC":"lharu","\u21BD":"lhard","\u21BE":"uharr","\u21BF":"uharl","\u21C0":"rharu","\u21C1":"rhard","\u21C2":"dharr","\u21C3":"dharl","\u21C4":"rlarr","\u21C5":"udarr","\u21C6":"lrarr","\u21C7":"llarr","\u21C8":"uuarr","\u21C9":"rrarr","\u21CA":"ddarr","\u21CB":"lrhar","\u21CC":"rlhar","\u21D0":"lArr","\u21CD":"nlArr","\u21D1":"uArr","\u21D2":"rArr","\u21CF":"nrArr","\u21D3":"dArr","\u21D4":"iff","\u21CE":"nhArr","\u21D5":"vArr","\u21D6":"nwArr","\u21D7":"neArr","\u21D8":"seArr","\u21D9":"swArr","\u21DA":"lAarr","\u21DB":"rAarr","\u21DD":"zigrarr","\u21E4":"larrb","\u21E5":"rarrb","\u21F5":"duarr","\u21FD":"loarr","\u21FE":"roarr","\u21FF":"hoarr","\u2200":"forall","\u2201":"comp","\u2202":"part","\u2202\u0338":"npart","\u2203":"exist","\u2204":"nexist","\u2205":"empty","\u2207":"Del","\u2208":"in","\u2209":"notin","\u220B":"ni","\u220C":"notni","\u03F6":"bepsi","\u220F":"prod","\u2210":"coprod","\u2211":"sum","+":"plus","\xB1":"pm","\xF7":"div","\xD7":"times","<":"lt","\u226E":"nlt","<\u20D2":"nvlt","=":"equals","\u2260":"ne","=\u20E5":"bne","\u2A75":"Equal",">":"gt","\u226F":"ngt",">\u20D2":"nvgt","\xAC":"not","|":"vert","\xA6":"brvbar","\u2212":"minus","\u2213":"mp","\u2214":"plusdo","\u2044":"frasl","\u2216":"setmn","\u2217":"lowast","\u2218":"compfn","\u221A":"Sqrt","\u221D":"prop","\u221E":"infin","\u221F":"angrt","\u2220":"ang","\u2220\u20D2":"nang","\u2221":"angmsd","\u2222":"angsph","\u2223":"mid","\u2224":"nmid","\u2225":"par","\u2226":"npar","\u2227":"and","\u2228":"or","\u2229":"cap","\u2229\uFE00":"caps","\u222A":"cup","\u222A\uFE00":"cups","\u222B":"int","\u222C":"Int","\u222D":"tint","\u2A0C":"qint","\u222E":"oint","\u222F":"Conint","\u2230":"Cconint","\u2231":"cwint","\u2232":"cwconint","\u2233":"awconint","\u2234":"there4","\u2235":"becaus","\u2236":"ratio","\u2237":"Colon","\u2238":"minusd","\u223A":"mDDot","\u223B":"homtht","\u223C":"sim","\u2241":"nsim","\u223C\u20D2":"nvsim","\u223D":"bsim","\u223D\u0331":"race","\u223E":"ac","\u223E\u0333":"acE","\u223F":"acd","\u2240":"wr","\u2242":"esim","\u2242\u0338":"nesim","\u2243":"sime","\u2244":"nsime","\u2245":"cong","\u2247":"ncong","\u2246":"simne","\u2248":"ap","\u2249":"nap","\u224A":"ape","\u224B":"apid","\u224B\u0338":"napid","\u224C":"bcong","\u224D":"CupCap","\u226D":"NotCupCap","\u224D\u20D2":"nvap","\u224E":"bump","\u224E\u0338":"nbump","\u224F":"bumpe","\u224F\u0338":"nbumpe","\u2250":"doteq","\u2250\u0338":"nedot","\u2251":"eDot","\u2252":"efDot","\u2253":"erDot","\u2254":"colone","\u2255":"ecolon","\u2256":"ecir","\u2257":"cire","\u2259":"wedgeq","\u225A":"veeeq","\u225C":"trie","\u225F":"equest","\u2261":"equiv","\u2262":"nequiv","\u2261\u20E5":"bnequiv","\u2264":"le","\u2270":"nle","\u2264\u20D2":"nvle","\u2265":"ge","\u2271":"nge","\u2265\u20D2":"nvge","\u2266":"lE","\u2266\u0338":"nlE","\u2267":"gE","\u2267\u0338":"ngE","\u2268\uFE00":"lvnE","\u2268":"lnE","\u2269":"gnE","\u2269\uFE00":"gvnE","\u226A":"ll","\u226A\u0338":"nLtv","\u226A\u20D2":"nLt","\u226B":"gg","\u226B\u0338":"nGtv","\u226B\u20D2":"nGt","\u226C":"twixt","\u2272":"lsim","\u2274":"nlsim","\u2273":"gsim","\u2275":"ngsim","\u2276":"lg","\u2278":"ntlg","\u2277":"gl","\u2279":"ntgl","\u227A":"pr","\u2280":"npr","\u227B":"sc","\u2281":"nsc","\u227C":"prcue","\u22E0":"nprcue","\u227D":"sccue","\u22E1":"nsccue","\u227E":"prsim","\u227F":"scsim","\u227F\u0338":"NotSucceedsTilde","\u2282":"sub","\u2284":"nsub","\u2282\u20D2":"vnsub","\u2283":"sup","\u2285":"nsup","\u2283\u20D2":"vnsup","\u2286":"sube","\u2288":"nsube","\u2287":"supe","\u2289":"nsupe","\u228A\uFE00":"vsubne","\u228A":"subne","\u228B\uFE00":"vsupne","\u228B":"supne","\u228D":"cupdot","\u228E":"uplus","\u228F":"sqsub","\u228F\u0338":"NotSquareSubset","\u2290":"sqsup","\u2290\u0338":"NotSquareSuperset","\u2291":"sqsube","\u22E2":"nsqsube","\u2292":"sqsupe","\u22E3":"nsqsupe","\u2293":"sqcap","\u2293\uFE00":"sqcaps","\u2294":"sqcup","\u2294\uFE00":"sqcups","\u2295":"oplus","\u2296":"ominus","\u2297":"otimes","\u2298":"osol","\u2299":"odot","\u229A":"ocir","\u229B":"oast","\u229D":"odash","\u229E":"plusb","\u229F":"minusb","\u22A0":"timesb","\u22A1":"sdotb","\u22A2":"vdash","\u22AC":"nvdash","\u22A3":"dashv","\u22A4":"top","\u22A5":"bot","\u22A7":"models","\u22A8":"vDash","\u22AD":"nvDash","\u22A9":"Vdash","\u22AE":"nVdash","\u22AA":"Vvdash","\u22AB":"VDash","\u22AF":"nVDash","\u22B0":"prurel","\u22B2":"vltri","\u22EA":"nltri","\u22B3":"vrtri","\u22EB":"nrtri","\u22B4":"ltrie","\u22EC":"nltrie","\u22B4\u20D2":"nvltrie","\u22B5":"rtrie","\u22ED":"nrtrie","\u22B5\u20D2":"nvrtrie","\u22B6":"origof","\u22B7":"imof","\u22B8":"mumap","\u22B9":"hercon","\u22BA":"intcal","\u22BB":"veebar","\u22BD":"barvee","\u22BE":"angrtvb","\u22BF":"lrtri","\u22C0":"Wedge","\u22C1":"Vee","\u22C2":"xcap","\u22C3":"xcup","\u22C4":"diam","\u22C5":"sdot","\u22C6":"Star","\u22C7":"divonx","\u22C8":"bowtie","\u22C9":"ltimes","\u22CA":"rtimes","\u22CB":"lthree","\u22CC":"rthree","\u22CD":"bsime","\u22CE":"cuvee","\u22CF":"cuwed","\u22D0":"Sub","\u22D1":"Sup","\u22D2":"Cap","\u22D3":"Cup","\u22D4":"fork","\u22D5":"epar","\u22D6":"ltdot","\u22D7":"gtdot","\u22D8":"Ll","\u22D8\u0338":"nLl","\u22D9":"Gg","\u22D9\u0338":"nGg","\u22DA\uFE00":"lesg","\u22DA":"leg","\u22DB":"gel","\u22DB\uFE00":"gesl","\u22DE":"cuepr","\u22DF":"cuesc","\u22E6":"lnsim","\u22E7":"gnsim","\u22E8":"prnsim","\u22E9":"scnsim","\u22EE":"vellip","\u22EF":"ctdot","\u22F0":"utdot","\u22F1":"dtdot","\u22F2":"disin","\u22F3":"isinsv","\u22F4":"isins","\u22F5":"isindot","\u22F5\u0338":"notindot","\u22F6":"notinvc","\u22F7":"notinvb","\u22F9":"isinE","\u22F9\u0338":"notinE","\u22FA":"nisd","\u22FB":"xnis","\u22FC":"nis","\u22FD":"notnivc","\u22FE":"notnivb","\u2305":"barwed","\u2306":"Barwed","\u230C":"drcrop","\u230D":"dlcrop","\u230E":"urcrop","\u230F":"ulcrop","\u2310":"bnot","\u2312":"profline","\u2313":"profsurf","\u2315":"telrec","\u2316":"target","\u231C":"ulcorn","\u231D":"urcorn","\u231E":"dlcorn","\u231F":"drcorn","\u2322":"frown","\u2323":"smile","\u232D":"cylcty","\u232E":"profalar","\u2336":"topbot","\u233D":"ovbar","\u233F":"solbar","\u237C":"angzarr","\u23B0":"lmoust","\u23B1":"rmoust","\u23B4":"tbrk","\u23B5":"bbrk","\u23B6":"bbrktbrk","\u23DC":"OverParenthesis","\u23DD":"UnderParenthesis","\u23DE":"OverBrace","\u23DF":"UnderBrace","\u23E2":"trpezium","\u23E7":"elinters","\u2423":"blank","\u2500":"boxh","\u2502":"boxv","\u250C":"boxdr","\u2510":"boxdl","\u2514":"boxur","\u2518":"boxul","\u251C":"boxvr","\u2524":"boxvl","\u252C":"boxhd","\u2534":"boxhu","\u253C":"boxvh","\u2550":"boxH","\u2551":"boxV","\u2552":"boxdR","\u2553":"boxDr","\u2554":"boxDR","\u2555":"boxdL","\u2556":"boxDl","\u2557":"boxDL","\u2558":"boxuR","\u2559":"boxUr","\u255A":"boxUR","\u255B":"boxuL","\u255C":"boxUl","\u255D":"boxUL","\u255E":"boxvR","\u255F":"boxVr","\u2560":"boxVR","\u2561":"boxvL","\u2562":"boxVl","\u2563":"boxVL","\u2564":"boxHd","\u2565":"boxhD","\u2566":"boxHD","\u2567":"boxHu","\u2568":"boxhU","\u2569":"boxHU","\u256A":"boxvH","\u256B":"boxVh","\u256C":"boxVH","\u2580":"uhblk","\u2584":"lhblk","\u2588":"block","\u2591":"blk14","\u2592":"blk12","\u2593":"blk34","\u25A1":"squ","\u25AA":"squf","\u25AB":"EmptyVerySmallSquare","\u25AD":"rect","\u25AE":"marker","\u25B1":"fltns","\u25B3":"xutri","\u25B4":"utrif","\u25B5":"utri","\u25B8":"rtrif","\u25B9":"rtri","\u25BD":"xdtri","\u25BE":"dtrif","\u25BF":"dtri","\u25C2":"ltrif","\u25C3":"ltri","\u25CA":"loz","\u25CB":"cir","\u25EC":"tridot","\u25EF":"xcirc","\u25F8":"ultri","\u25F9":"urtri","\u25FA":"lltri","\u25FB":"EmptySmallSquare","\u25FC":"FilledSmallSquare","\u2605":"starf","\u2606":"star","\u260E":"phone","\u2640":"female","\u2642":"male","\u2660":"spades","\u2663":"clubs","\u2665":"hearts","\u2666":"diams","\u266A":"sung","\u2713":"check","\u2717":"cross","\u2720":"malt","\u2736":"sext","\u2758":"VerticalSeparator","\u27C8":"bsolhsub","\u27C9":"suphsol","\u27F5":"xlarr","\u27F6":"xrarr","\u27F7":"xharr","\u27F8":"xlArr","\u27F9":"xrArr","\u27FA":"xhArr","\u27FC":"xmap","\u27FF":"dzigrarr","\u2902":"nvlArr","\u2903":"nvrArr","\u2904":"nvHarr","\u2905":"Map","\u290C":"lbarr","\u290D":"rbarr","\u290E":"lBarr","\u290F":"rBarr","\u2910":"RBarr","\u2911":"DDotrahd","\u2912":"UpArrowBar","\u2913":"DownArrowBar","\u2916":"Rarrtl","\u2919":"latail","\u291A":"ratail","\u291B":"lAtail","\u291C":"rAtail","\u291D":"larrfs","\u291E":"rarrfs","\u291F":"larrbfs","\u2920":"rarrbfs","\u2923":"nwarhk","\u2924":"nearhk","\u2925":"searhk","\u2926":"swarhk","\u2927":"nwnear","\u2928":"toea","\u2929":"tosa","\u292A":"swnwar","\u2933":"rarrc","\u2933\u0338":"nrarrc","\u2935":"cudarrr","\u2936":"ldca","\u2937":"rdca","\u2938":"cudarrl","\u2939":"larrpl","\u293C":"curarrm","\u293D":"cularrp","\u2945":"rarrpl","\u2948":"harrcir","\u2949":"Uarrocir","\u294A":"lurdshar","\u294B":"ldrushar","\u294E":"LeftRightVector","\u294F":"RightUpDownVector","\u2950":"DownLeftRightVector","\u2951":"LeftUpDownVector","\u2952":"LeftVectorBar","\u2953":"RightVectorBar","\u2954":"RightUpVectorBar","\u2955":"RightDownVectorBar","\u2956":"DownLeftVectorBar","\u2957":"DownRightVectorBar","\u2958":"LeftUpVectorBar","\u2959":"LeftDownVectorBar","\u295A":"LeftTeeVector","\u295B":"RightTeeVector","\u295C":"RightUpTeeVector","\u295D":"RightDownTeeVector","\u295E":"DownLeftTeeVector","\u295F":"DownRightTeeVector","\u2960":"LeftUpTeeVector","\u2961":"LeftDownTeeVector","\u2962":"lHar","\u2963":"uHar","\u2964":"rHar","\u2965":"dHar","\u2966":"luruhar","\u2967":"ldrdhar","\u2968":"ruluhar","\u2969":"rdldhar","\u296A":"lharul","\u296B":"llhard","\u296C":"rharul","\u296D":"lrhard","\u296E":"udhar","\u296F":"duhar","\u2970":"RoundImplies","\u2971":"erarr","\u2972":"simrarr","\u2973":"larrsim","\u2974":"rarrsim","\u2975":"rarrap","\u2976":"ltlarr","\u2978":"gtrarr","\u2979":"subrarr","\u297B":"suplarr","\u297C":"lfisht","\u297D":"rfisht","\u297E":"ufisht","\u297F":"dfisht","\u299A":"vzigzag","\u299C":"vangrt","\u299D":"angrtvbd","\u29A4":"ange","\u29A5":"range","\u29A6":"dwangle","\u29A7":"uwangle","\u29A8":"angmsdaa","\u29A9":"angmsdab","\u29AA":"angmsdac","\u29AB":"angmsdad","\u29AC":"angmsdae","\u29AD":"angmsdaf","\u29AE":"angmsdag","\u29AF":"angmsdah","\u29B0":"bemptyv","\u29B1":"demptyv","\u29B2":"cemptyv","\u29B3":"raemptyv","\u29B4":"laemptyv","\u29B5":"ohbar","\u29B6":"omid","\u29B7":"opar","\u29B9":"operp","\u29BB":"olcross","\u29BC":"odsold","\u29BE":"olcir","\u29BF":"ofcir","\u29C0":"olt","\u29C1":"ogt","\u29C2":"cirscir","\u29C3":"cirE","\u29C4":"solb","\u29C5":"bsolb","\u29C9":"boxbox","\u29CD":"trisb","\u29CE":"rtriltri","\u29CF":"LeftTriangleBar","\u29CF\u0338":"NotLeftTriangleBar","\u29D0":"RightTriangleBar","\u29D0\u0338":"NotRightTriangleBar","\u29DC":"iinfin","\u29DD":"infintie","\u29DE":"nvinfin","\u29E3":"eparsl","\u29E4":"smeparsl","\u29E5":"eqvparsl","\u29EB":"lozf","\u29F4":"RuleDelayed","\u29F6":"dsol","\u2A00":"xodot","\u2A01":"xoplus","\u2A02":"xotime","\u2A04":"xuplus","\u2A06":"xsqcup","\u2A0D":"fpartint","\u2A10":"cirfnint","\u2A11":"awint","\u2A12":"rppolint","\u2A13":"scpolint","\u2A14":"npolint","\u2A15":"pointint","\u2A16":"quatint","\u2A17":"intlarhk","\u2A22":"pluscir","\u2A23":"plusacir","\u2A24":"simplus","\u2A25":"plusdu","\u2A26":"plussim","\u2A27":"plustwo","\u2A29":"mcomma","\u2A2A":"minusdu","\u2A2D":"loplus","\u2A2E":"roplus","\u2A2F":"Cross","\u2A30":"timesd","\u2A31":"timesbar","\u2A33":"smashp","\u2A34":"lotimes","\u2A35":"rotimes","\u2A36":"otimesas","\u2A37":"Otimes","\u2A38":"odiv","\u2A39":"triplus","\u2A3A":"triminus","\u2A3B":"tritime","\u2A3C":"iprod","\u2A3F":"amalg","\u2A40":"capdot","\u2A42":"ncup","\u2A43":"ncap","\u2A44":"capand","\u2A45":"cupor","\u2A46":"cupcap","\u2A47":"capcup","\u2A48":"cupbrcap","\u2A49":"capbrcup","\u2A4A":"cupcup","\u2A4B":"capcap","\u2A4C":"ccups","\u2A4D":"ccaps","\u2A50":"ccupssm","\u2A53":"And","\u2A54":"Or","\u2A55":"andand","\u2A56":"oror","\u2A57":"orslope","\u2A58":"andslope","\u2A5A":"andv","\u2A5B":"orv","\u2A5C":"andd","\u2A5D":"ord","\u2A5F":"wedbar","\u2A66":"sdote","\u2A6A":"simdot","\u2A6D":"congdot","\u2A6D\u0338":"ncongdot","\u2A6E":"easter","\u2A6F":"apacir","\u2A70":"apE","\u2A70\u0338":"napE","\u2A71":"eplus","\u2A72":"pluse","\u2A73":"Esim","\u2A77":"eDDot","\u2A78":"equivDD","\u2A79":"ltcir","\u2A7A":"gtcir","\u2A7B":"ltquest","\u2A7C":"gtquest","\u2A7D":"les","\u2A7D\u0338":"nles","\u2A7E":"ges","\u2A7E\u0338":"nges","\u2A7F":"lesdot","\u2A80":"gesdot","\u2A81":"lesdoto","\u2A82":"gesdoto","\u2A83":"lesdotor","\u2A84":"gesdotol","\u2A85":"lap","\u2A86":"gap","\u2A87":"lne","\u2A88":"gne","\u2A89":"lnap","\u2A8A":"gnap","\u2A8B":"lEg","\u2A8C":"gEl","\u2A8D":"lsime","\u2A8E":"gsime","\u2A8F":"lsimg","\u2A90":"gsiml","\u2A91":"lgE","\u2A92":"glE","\u2A93":"lesges","\u2A94":"gesles","\u2A95":"els","\u2A96":"egs","\u2A97":"elsdot","\u2A98":"egsdot","\u2A99":"el","\u2A9A":"eg","\u2A9D":"siml","\u2A9E":"simg","\u2A9F":"simlE","\u2AA0":"simgE","\u2AA1":"LessLess","\u2AA1\u0338":"NotNestedLessLess","\u2AA2":"GreaterGreater","\u2AA2\u0338":"NotNestedGreaterGreater","\u2AA4":"glj","\u2AA5":"gla","\u2AA6":"ltcc","\u2AA7":"gtcc","\u2AA8":"lescc","\u2AA9":"gescc","\u2AAA":"smt","\u2AAB":"lat","\u2AAC":"smte","\u2AAC\uFE00":"smtes","\u2AAD":"late","\u2AAD\uFE00":"lates","\u2AAE":"bumpE","\u2AAF":"pre","\u2AAF\u0338":"npre","\u2AB0":"sce","\u2AB0\u0338":"nsce","\u2AB3":"prE","\u2AB4":"scE","\u2AB5":"prnE","\u2AB6":"scnE","\u2AB7":"prap","\u2AB8":"scap","\u2AB9":"prnap","\u2ABA":"scnap","\u2ABB":"Pr","\u2ABC":"Sc","\u2ABD":"subdot","\u2ABE":"supdot","\u2ABF":"subplus","\u2AC0":"supplus","\u2AC1":"submult","\u2AC2":"supmult","\u2AC3":"subedot","\u2AC4":"supedot","\u2AC5":"subE","\u2AC5\u0338":"nsubE","\u2AC6":"supE","\u2AC6\u0338":"nsupE","\u2AC7":"subsim","\u2AC8":"supsim","\u2ACB\uFE00":"vsubnE","\u2ACB":"subnE","\u2ACC\uFE00":"vsupnE","\u2ACC":"supnE","\u2ACF":"csub","\u2AD0":"csup","\u2AD1":"csube","\u2AD2":"csupe","\u2AD3":"subsup","\u2AD4":"supsub","\u2AD5":"subsub","\u2AD6":"supsup","\u2AD7":"suphsub","\u2AD8":"supdsub","\u2AD9":"forkv","\u2ADA":"topfork","\u2ADB":"mlcp","\u2AE4":"Dashv","\u2AE6":"Vdashl","\u2AE7":"Barv","\u2AE8":"vBar","\u2AE9":"vBarv","\u2AEB":"Vbar","\u2AEC":"Not","\u2AED":"bNot","\u2AEE":"rnmid","\u2AEF":"cirmid","\u2AF0":"midcir","\u2AF1":"topcir","\u2AF2":"nhpar","\u2AF3":"parsim","\u2AFD":"parsl","\u2AFD\u20E5":"nparsl","\u266D":"flat","\u266E":"natur","\u266F":"sharp","\xA4":"curren","\xA2":"cent",$:"dollar","\xA3":"pound","\xA5":"yen","\u20AC":"euro","\xB9":"sup1","\xBD":"half","\u2153":"frac13","\xBC":"frac14","\u2155":"frac15","\u2159":"frac16","\u215B":"frac18","\xB2":"sup2","\u2154":"frac23","\u2156":"frac25","\xB3":"sup3","\xBE":"frac34","\u2157":"frac35","\u215C":"frac38","\u2158":"frac45","\u215A":"frac56","\u215D":"frac58","\u215E":"frac78",\u{1D4B6}:"ascr",\u{1D552}:"aopf",\u{1D51E}:"afr",\u{1D538}:"Aopf",\u{1D504}:"Afr",\u{1D49C}:"Ascr",\u00AA:"ordf",\u00E1:"aacute",\u00C1:"Aacute",\u00E0:"agrave",\u00C0:"Agrave",\u0103:"abreve",\u0102:"Abreve",\u00E2:"acirc",\u00C2:"Acirc",\u00E5:"aring",\u00C5:"angst",\u00E4:"auml",\u00C4:"Auml",\u00E3:"atilde",\u00C3:"Atilde",\u0105:"aogon",\u0104:"Aogon",\u0101:"amacr",\u0100:"Amacr",\u00E6:"aelig",\u00C6:"AElig",\u{1D4B7}:"bscr",\u{1D553}:"bopf",\u{1D51F}:"bfr",\u{1D539}:"Bopf",\u212C:"Bscr",\u{1D505}:"Bfr",\u{1D520}:"cfr",\u{1D4B8}:"cscr",\u{1D554}:"copf",\u212D:"Cfr",\u{1D49E}:"Cscr",\u2102:"Copf",\u0107:"cacute",\u0106:"Cacute",\u0109:"ccirc",\u0108:"Ccirc",\u010D:"ccaron",\u010C:"Ccaron",\u010B:"cdot",\u010A:"Cdot",\u00E7:"ccedil",\u00C7:"Ccedil","\u2105":"incare",\u{1D521}:"dfr",\u2146:"dd",\u{1D555}:"dopf",\u{1D4B9}:"dscr",\u{1D49F}:"Dscr",\u{1D507}:"Dfr",\u2145:"DD",\u{1D53B}:"Dopf",\u010F:"dcaron",\u010E:"Dcaron",\u0111:"dstrok",\u0110:"Dstrok",\u00F0:"eth",\u00D0:"ETH",\u2147:"ee",\u212F:"escr",\u{1D522}:"efr",\u{1D556}:"eopf",\u2130:"Escr",\u{1D508}:"Efr",\u{1D53C}:"Eopf",\u00E9:"eacute",\u00C9:"Eacute",\u00E8:"egrave",\u00C8:"Egrave",\u00EA:"ecirc",\u00CA:"Ecirc",\u011B:"ecaron",\u011A:"Ecaron",\u00EB:"euml",\u00CB:"Euml",\u0117:"edot",\u0116:"Edot",\u0119:"eogon",\u0118:"Eogon",\u0113:"emacr",\u0112:"Emacr",\u{1D523}:"ffr",\u{1D557}:"fopf",\u{1D4BB}:"fscr",\u{1D509}:"Ffr",\u{1D53D}:"Fopf",\u2131:"Fscr",\uFB00:"fflig",\uFB03:"ffilig",\uFB04:"ffllig",\uFB01:"filig",fj:"fjlig",\uFB02:"fllig",\u0192:"fnof",\u210A:"gscr",\u{1D558}:"gopf",\u{1D524}:"gfr",\u{1D4A2}:"Gscr",\u{1D53E}:"Gopf",\u{1D50A}:"Gfr",\u01F5:"gacute",\u011F:"gbreve",\u011E:"Gbreve",\u011D:"gcirc",\u011C:"Gcirc",\u0121:"gdot",\u0120:"Gdot",\u0122:"Gcedil",\u{1D525}:"hfr",\u210E:"planckh",\u{1D4BD}:"hscr",\u{1D559}:"hopf",\u210B:"Hscr",\u210C:"Hfr",\u210D:"Hopf",\u0125:"hcirc",\u0124:"Hcirc",\u210F:"hbar",\u0127:"hstrok",\u0126:"Hstrok",\u{1D55A}:"iopf",\u{1D526}:"ifr",\u{1D4BE}:"iscr",\u2148:"ii",\u{1D540}:"Iopf",\u2110:"Iscr",\u2111:"Im",\u00ED:"iacute",\u00CD:"Iacute",\u00EC:"igrave",\u00CC:"Igrave",\u00EE:"icirc",\u00CE:"Icirc",\u00EF:"iuml",\u00CF:"Iuml",\u0129:"itilde",\u0128:"Itilde",\u0130:"Idot",\u012F:"iogon",\u012E:"Iogon",\u012B:"imacr",\u012A:"Imacr",\u0133:"ijlig",\u0132:"IJlig",\u0131:"imath",\u{1D4BF}:"jscr",\u{1D55B}:"jopf",\u{1D527}:"jfr",\u{1D4A5}:"Jscr",\u{1D50D}:"Jfr",\u{1D541}:"Jopf",\u0135:"jcirc",\u0134:"Jcirc",\u0237:"jmath",\u{1D55C}:"kopf",\u{1D4C0}:"kscr",\u{1D528}:"kfr",\u{1D4A6}:"Kscr",\u{1D542}:"Kopf",\u{1D50E}:"Kfr",\u0137:"kcedil",\u0136:"Kcedil",\u{1D529}:"lfr",\u{1D4C1}:"lscr",\u2113:"ell",\u{1D55D}:"lopf",\u2112:"Lscr",\u{1D50F}:"Lfr",\u{1D543}:"Lopf",\u013A:"lacute",\u0139:"Lacute",\u013E:"lcaron",\u013D:"Lcaron",\u013C:"lcedil",\u013B:"Lcedil",\u0142:"lstrok",\u0141:"Lstrok",\u0140:"lmidot",\u013F:"Lmidot",\u{1D52A}:"mfr",\u{1D55E}:"mopf",\u{1D4C2}:"mscr",\u{1D510}:"Mfr",\u{1D544}:"Mopf",\u2133:"Mscr",\u{1D52B}:"nfr",\u{1D55F}:"nopf",\u{1D4C3}:"nscr",\u2115:"Nopf",\u{1D4A9}:"Nscr",\u{1D511}:"Nfr",\u0144:"nacute",\u0143:"Nacute",\u0148:"ncaron",\u0147:"Ncaron",\u00F1:"ntilde",\u00D1:"Ntilde",\u0146:"ncedil",\u0145:"Ncedil","\u2116":"numero",\u014B:"eng",\u014A:"ENG",\u{1D560}:"oopf",\u{1D52C}:"ofr",\u2134:"oscr",\u{1D4AA}:"Oscr",\u{1D512}:"Ofr",\u{1D546}:"Oopf",\u00BA:"ordm",\u00F3:"oacute",\u00D3:"Oacute",\u00F2:"ograve",\u00D2:"Ograve",\u00F4:"ocirc",\u00D4:"Ocirc",\u00F6:"ouml",\u00D6:"Ouml",\u0151:"odblac",\u0150:"Odblac",\u00F5:"otilde",\u00D5:"Otilde",\u00F8:"oslash",\u00D8:"Oslash",\u014D:"omacr",\u014C:"Omacr",\u0153:"oelig",\u0152:"OElig",\u{1D52D}:"pfr",\u{1D4C5}:"pscr",\u{1D561}:"popf",\u2119:"Popf",\u{1D513}:"Pfr",\u{1D4AB}:"Pscr",\u{1D562}:"qopf",\u{1D52E}:"qfr",\u{1D4C6}:"qscr",\u{1D4AC}:"Qscr",\u{1D514}:"Qfr",\u211A:"Qopf",\u0138:"kgreen",\u{1D52F}:"rfr",\u{1D563}:"ropf",\u{1D4C7}:"rscr",\u211B:"Rscr",\u211C:"Re",\u211D:"Ropf",\u0155:"racute",\u0154:"Racute",\u0159:"rcaron",\u0158:"Rcaron",\u0157:"rcedil",\u0156:"Rcedil",\u{1D564}:"sopf",\u{1D4C8}:"sscr",\u{1D530}:"sfr",\u{1D54A}:"Sopf",\u{1D516}:"Sfr",\u{1D4AE}:"Sscr","\u24C8":"oS",\u015B:"sacute",\u015A:"Sacute",\u015D:"scirc",\u015C:"Scirc",\u0161:"scaron",\u0160:"Scaron",\u015F:"scedil",\u015E:"Scedil",\u00DF:"szlig",\u{1D531}:"tfr",\u{1D4C9}:"tscr",\u{1D565}:"topf",\u{1D4AF}:"Tscr",\u{1D517}:"Tfr",\u{1D54B}:"Topf",\u0165:"tcaron",\u0164:"Tcaron",\u0163:"tcedil",\u0162:"Tcedil","\u2122":"trade",\u0167:"tstrok",\u0166:"Tstrok",\u{1D4CA}:"uscr",\u{1D566}:"uopf",\u{1D532}:"ufr",\u{1D54C}:"Uopf",\u{1D518}:"Ufr",\u{1D4B0}:"Uscr",\u00FA:"uacute",\u00DA:"Uacute",\u00F9:"ugrave",\u00D9:"Ugrave",\u016D:"ubreve",\u016C:"Ubreve",\u00FB:"ucirc",\u00DB:"Ucirc",\u016F:"uring",\u016E:"Uring",\u00FC:"uuml",\u00DC:"Uuml",\u0171:"udblac",\u0170:"Udblac",\u0169:"utilde",\u0168:"Utilde",\u0173:"uogon",\u0172:"Uogon",\u016B:"umacr",\u016A:"Umacr",\u{1D533}:"vfr",\u{1D567}:"vopf",\u{1D4CB}:"vscr",\u{1D519}:"Vfr",\u{1D54D}:"Vopf",\u{1D4B1}:"Vscr",\u{1D568}:"wopf",\u{1D4CC}:"wscr",\u{1D534}:"wfr",\u{1D4B2}:"Wscr",\u{1D54E}:"Wopf",\u{1D51A}:"Wfr",\u0175:"wcirc",\u0174:"Wcirc",\u{1D535}:"xfr",\u{1D4CD}:"xscr",\u{1D569}:"xopf",\u{1D54F}:"Xopf",\u{1D51B}:"Xfr",\u{1D4B3}:"Xscr",\u{1D536}:"yfr",\u{1D4CE}:"yscr",\u{1D56A}:"yopf",\u{1D4B4}:"Yscr",\u{1D51C}:"Yfr",\u{1D550}:"Yopf",\u00FD:"yacute",\u00DD:"Yacute",\u0177:"ycirc",\u0176:"Ycirc",\u00FF:"yuml",\u0178:"Yuml",\u{1D4CF}:"zscr",\u{1D537}:"zfr",\u{1D56B}:"zopf",\u2128:"Zfr",\u2124:"Zopf",\u{1D4B5}:"Zscr",\u017A:"zacute",\u0179:"Zacute",\u017E:"zcaron",\u017D:"Zcaron",\u017C:"zdot",\u017B:"Zdot",\u01B5:"imped",\u00FE:"thorn",\u00DE:"THORN",\u0149:"napos",\u03B1:"alpha",\u0391:"Alpha",\u03B2:"beta",\u0392:"Beta",\u03B3:"gamma",\u0393:"Gamma",\u03B4:"delta",\u0394:"Delta",\u03B5:"epsi",\u03F5:"epsiv",\u0395:"Epsilon",\u03DD:"gammad",\u03DC:"Gammad",\u03B6:"zeta",\u0396:"Zeta",\u03B7:"eta",\u0397:"Eta",\u03B8:"theta",\u03D1:"thetav",\u0398:"Theta",\u03B9:"iota",\u0399:"Iota",\u03BA:"kappa",\u03F0:"kappav",\u039A:"Kappa",\u03BB:"lambda",\u039B:"Lambda",\u03BC:"mu",\u00B5:"micro",\u039C:"Mu",\u03BD:"nu",\u039D:"Nu",\u03BE:"xi",\u039E:"Xi",\u03BF:"omicron",\u039F:"Omicron",\u03C0:"pi",\u03D6:"piv",\u03A0:"Pi",\u03C1:"rho",\u03F1:"rhov",\u03A1:"Rho",\u03C3:"sigma",\u03A3:"Sigma",\u03C2:"sigmaf",\u03C4:"tau",\u03A4:"Tau",\u03C5:"upsi",\u03A5:"Upsilon",\u03D2:"Upsi",\u03C6:"phi",\u03D5:"phiv",\u03A6:"Phi",\u03C7:"chi",\u03A7:"Chi",\u03C8:"psi",\u03A8:"Psi",\u03C9:"omega",\u03A9:"ohm",\u0430:"acy",\u0410:"Acy",\u0431:"bcy",\u0411:"Bcy",\u0432:"vcy",\u0412:"Vcy",\u0433:"gcy",\u0413:"Gcy",\u0453:"gjcy",\u0403:"GJcy",\u0434:"dcy",\u0414:"Dcy",\u0452:"djcy",\u0402:"DJcy",\u0435:"iecy",\u0415:"IEcy",\u0451:"iocy",\u0401:"IOcy",\u0454:"jukcy",\u0404:"Jukcy",\u0436:"zhcy",\u0416:"ZHcy",\u0437:"zcy",\u0417:"Zcy",\u0455:"dscy",\u0405:"DScy",\u0438:"icy",\u0418:"Icy",\u0456:"iukcy",\u0406:"Iukcy",\u0457:"yicy",\u0407:"YIcy",\u0439:"jcy",\u0419:"Jcy",\u0458:"jsercy",\u0408:"Jsercy",\u043A:"kcy",\u041A:"Kcy",\u045C:"kjcy",\u040C:"KJcy",\u043B:"lcy",\u041B:"Lcy",\u0459:"ljcy",\u0409:"LJcy",\u043C:"mcy",\u041C:"Mcy",\u043D:"ncy",\u041D:"Ncy",\u045A:"njcy",\u040A:"NJcy",\u043E:"ocy",\u041E:"Ocy",\u043F:"pcy",\u041F:"Pcy",\u0440:"rcy",\u0420:"Rcy",\u0441:"scy",\u0421:"Scy",\u0442:"tcy",\u0422:"Tcy",\u045B:"tshcy",\u040B:"TSHcy",\u0443:"ucy",\u0423:"Ucy",\u045E:"ubrcy",\u040E:"Ubrcy",\u0444:"fcy",\u0424:"Fcy",\u0445:"khcy",\u0425:"KHcy",\u0446:"tscy",\u0426:"TScy",\u0447:"chcy",\u0427:"CHcy",\u045F:"dzcy",\u040F:"DZcy",\u0448:"shcy",\u0428:"SHcy",\u0449:"shchcy",\u0429:"SHCHcy",\u044A:"hardcy",\u042A:"HARDcy",\u044B:"ycy",\u042B:"Ycy",\u044C:"softcy",\u042C:"SOFTcy",\u044D:"ecy",\u042D:"Ecy",\u044E:"yucy",\u042E:"YUcy",\u044F:"yacy",\u042F:"YAcy",\u2135:"aleph",\u2136:"beth",\u2137:"gimel",\u2138:"daleth"},o=/["&'<>`]/g,c={'"':"&quot;","&":"&amp;","'":"&#x27;","<":"&lt;",">":"&gt;","`":"&#x60;"},b=/&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/,n=/[\0-\x08\x0B\x0E-\x1F\x7F-\x9F\uFDD0-\uFDEF\uFFFE\uFFFF]|[\uD83F\uD87F\uD8BF\uD8FF\uD93F\uD97F\uD9BF\uD9FF\uDA3F\uDA7F\uDABF\uDAFF\uDB3F\uDB7F\uDBBF\uDBFF][\uDFFE\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,P=/&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g,u={aacute:"\xE1",Aacute:"\xC1",abreve:"\u0103",Abreve:"\u0102",ac:"\u223E",acd:"\u223F",acE:"\u223E\u0333",acirc:"\xE2",Acirc:"\xC2",acute:"\xB4",acy:"\u0430",Acy:"\u0410",aelig:"\xE6",AElig:"\xC6",af:"\u2061",afr:"\u{1D51E}",Afr:"\u{1D504}",agrave:"\xE0",Agrave:"\xC0",alefsym:"\u2135",aleph:"\u2135",alpha:"\u03B1",Alpha:"\u0391",amacr:"\u0101",Amacr:"\u0100",amalg:"\u2A3F",amp:"&",AMP:"&",and:"\u2227",And:"\u2A53",andand:"\u2A55",andd:"\u2A5C",andslope:"\u2A58",andv:"\u2A5A",ang:"\u2220",ange:"\u29A4",angle:"\u2220",angmsd:"\u2221",angmsdaa:"\u29A8",angmsdab:"\u29A9",angmsdac:"\u29AA",angmsdad:"\u29AB",angmsdae:"\u29AC",angmsdaf:"\u29AD",angmsdag:"\u29AE",angmsdah:"\u29AF",angrt:"\u221F",angrtvb:"\u22BE",angrtvbd:"\u299D",angsph:"\u2222",angst:"\xC5",angzarr:"\u237C",aogon:"\u0105",Aogon:"\u0104",aopf:"\u{1D552}",Aopf:"\u{1D538}",ap:"\u2248",apacir:"\u2A6F",ape:"\u224A",apE:"\u2A70",apid:"\u224B",apos:"'",ApplyFunction:"\u2061",approx:"\u2248",approxeq:"\u224A",aring:"\xE5",Aring:"\xC5",ascr:"\u{1D4B6}",Ascr:"\u{1D49C}",Assign:"\u2254",ast:"*",asymp:"\u2248",asympeq:"\u224D",atilde:"\xE3",Atilde:"\xC3",auml:"\xE4",Auml:"\xC4",awconint:"\u2233",awint:"\u2A11",backcong:"\u224C",backepsilon:"\u03F6",backprime:"\u2035",backsim:"\u223D",backsimeq:"\u22CD",Backslash:"\u2216",Barv:"\u2AE7",barvee:"\u22BD",barwed:"\u2305",Barwed:"\u2306",barwedge:"\u2305",bbrk:"\u23B5",bbrktbrk:"\u23B6",bcong:"\u224C",bcy:"\u0431",Bcy:"\u0411",bdquo:"\u201E",becaus:"\u2235",because:"\u2235",Because:"\u2235",bemptyv:"\u29B0",bepsi:"\u03F6",bernou:"\u212C",Bernoullis:"\u212C",beta:"\u03B2",Beta:"\u0392",beth:"\u2136",between:"\u226C",bfr:"\u{1D51F}",Bfr:"\u{1D505}",bigcap:"\u22C2",bigcirc:"\u25EF",bigcup:"\u22C3",bigodot:"\u2A00",bigoplus:"\u2A01",bigotimes:"\u2A02",bigsqcup:"\u2A06",bigstar:"\u2605",bigtriangledown:"\u25BD",bigtriangleup:"\u25B3",biguplus:"\u2A04",bigvee:"\u22C1",bigwedge:"\u22C0",bkarow:"\u290D",blacklozenge:"\u29EB",blacksquare:"\u25AA",blacktriangle:"\u25B4",blacktriangledown:"\u25BE",blacktriangleleft:"\u25C2",blacktriangleright:"\u25B8",blank:"\u2423",blk12:"\u2592",blk14:"\u2591",blk34:"\u2593",block:"\u2588",bne:"=\u20E5",bnequiv:"\u2261\u20E5",bnot:"\u2310",bNot:"\u2AED",bopf:"\u{1D553}",Bopf:"\u{1D539}",bot:"\u22A5",bottom:"\u22A5",bowtie:"\u22C8",boxbox:"\u29C9",boxdl:"\u2510",boxdL:"\u2555",boxDl:"\u2556",boxDL:"\u2557",boxdr:"\u250C",boxdR:"\u2552",boxDr:"\u2553",boxDR:"\u2554",boxh:"\u2500",boxH:"\u2550",boxhd:"\u252C",boxhD:"\u2565",boxHd:"\u2564",boxHD:"\u2566",boxhu:"\u2534",boxhU:"\u2568",boxHu:"\u2567",boxHU:"\u2569",boxminus:"\u229F",boxplus:"\u229E",boxtimes:"\u22A0",boxul:"\u2518",boxuL:"\u255B",boxUl:"\u255C",boxUL:"\u255D",boxur:"\u2514",boxuR:"\u2558",boxUr:"\u2559",boxUR:"\u255A",boxv:"\u2502",boxV:"\u2551",boxvh:"\u253C",boxvH:"\u256A",boxVh:"\u256B",boxVH:"\u256C",boxvl:"\u2524",boxvL:"\u2561",boxVl:"\u2562",boxVL:"\u2563",boxvr:"\u251C",boxvR:"\u255E",boxVr:"\u255F",boxVR:"\u2560",bprime:"\u2035",breve:"\u02D8",Breve:"\u02D8",brvbar:"\xA6",bscr:"\u{1D4B7}",Bscr:"\u212C",bsemi:"\u204F",bsim:"\u223D",bsime:"\u22CD",bsol:"\\",bsolb:"\u29C5",bsolhsub:"\u27C8",bull:"\u2022",bullet:"\u2022",bump:"\u224E",bumpe:"\u224F",bumpE:"\u2AAE",bumpeq:"\u224F",Bumpeq:"\u224E",cacute:"\u0107",Cacute:"\u0106",cap:"\u2229",Cap:"\u22D2",capand:"\u2A44",capbrcup:"\u2A49",capcap:"\u2A4B",capcup:"\u2A47",capdot:"\u2A40",CapitalDifferentialD:"\u2145",caps:"\u2229\uFE00",caret:"\u2041",caron:"\u02C7",Cayleys:"\u212D",ccaps:"\u2A4D",ccaron:"\u010D",Ccaron:"\u010C",ccedil:"\xE7",Ccedil:"\xC7",ccirc:"\u0109",Ccirc:"\u0108",Cconint:"\u2230",ccups:"\u2A4C",ccupssm:"\u2A50",cdot:"\u010B",Cdot:"\u010A",cedil:"\xB8",Cedilla:"\xB8",cemptyv:"\u29B2",cent:"\xA2",centerdot:"\xB7",CenterDot:"\xB7",cfr:"\u{1D520}",Cfr:"\u212D",chcy:"\u0447",CHcy:"\u0427",check:"\u2713",checkmark:"\u2713",chi:"\u03C7",Chi:"\u03A7",cir:"\u25CB",circ:"\u02C6",circeq:"\u2257",circlearrowleft:"\u21BA",circlearrowright:"\u21BB",circledast:"\u229B",circledcirc:"\u229A",circleddash:"\u229D",CircleDot:"\u2299",circledR:"\xAE",circledS:"\u24C8",CircleMinus:"\u2296",CirclePlus:"\u2295",CircleTimes:"\u2297",cire:"\u2257",cirE:"\u29C3",cirfnint:"\u2A10",cirmid:"\u2AEF",cirscir:"\u29C2",ClockwiseContourIntegral:"\u2232",CloseCurlyDoubleQuote:"\u201D",CloseCurlyQuote:"\u2019",clubs:"\u2663",clubsuit:"\u2663",colon:":",Colon:"\u2237",colone:"\u2254",Colone:"\u2A74",coloneq:"\u2254",comma:",",commat:"@",comp:"\u2201",compfn:"\u2218",complement:"\u2201",complexes:"\u2102",cong:"\u2245",congdot:"\u2A6D",Congruent:"\u2261",conint:"\u222E",Conint:"\u222F",ContourIntegral:"\u222E",copf:"\u{1D554}",Copf:"\u2102",coprod:"\u2210",Coproduct:"\u2210",copy:"\xA9",COPY:"\xA9",copysr:"\u2117",CounterClockwiseContourIntegral:"\u2233",crarr:"\u21B5",cross:"\u2717",Cross:"\u2A2F",cscr:"\u{1D4B8}",Cscr:"\u{1D49E}",csub:"\u2ACF",csube:"\u2AD1",csup:"\u2AD0",csupe:"\u2AD2",ctdot:"\u22EF",cudarrl:"\u2938",cudarrr:"\u2935",cuepr:"\u22DE",cuesc:"\u22DF",cularr:"\u21B6",cularrp:"\u293D",cup:"\u222A",Cup:"\u22D3",cupbrcap:"\u2A48",cupcap:"\u2A46",CupCap:"\u224D",cupcup:"\u2A4A",cupdot:"\u228D",cupor:"\u2A45",cups:"\u222A\uFE00",curarr:"\u21B7",curarrm:"\u293C",curlyeqprec:"\u22DE",curlyeqsucc:"\u22DF",curlyvee:"\u22CE",curlywedge:"\u22CF",curren:"\xA4",curvearrowleft:"\u21B6",curvearrowright:"\u21B7",cuvee:"\u22CE",cuwed:"\u22CF",cwconint:"\u2232",cwint:"\u2231",cylcty:"\u232D",dagger:"\u2020",Dagger:"\u2021",daleth:"\u2138",darr:"\u2193",dArr:"\u21D3",Darr:"\u21A1",dash:"\u2010",dashv:"\u22A3",Dashv:"\u2AE4",dbkarow:"\u290F",dblac:"\u02DD",dcaron:"\u010F",Dcaron:"\u010E",dcy:"\u0434",Dcy:"\u0414",dd:"\u2146",DD:"\u2145",ddagger:"\u2021",ddarr:"\u21CA",DDotrahd:"\u2911",ddotseq:"\u2A77",deg:"\xB0",Del:"\u2207",delta:"\u03B4",Delta:"\u0394",demptyv:"\u29B1",dfisht:"\u297F",dfr:"\u{1D521}",Dfr:"\u{1D507}",dHar:"\u2965",dharl:"\u21C3",dharr:"\u21C2",DiacriticalAcute:"\xB4",DiacriticalDot:"\u02D9",DiacriticalDoubleAcute:"\u02DD",DiacriticalGrave:"`",DiacriticalTilde:"\u02DC",diam:"\u22C4",diamond:"\u22C4",Diamond:"\u22C4",diamondsuit:"\u2666",diams:"\u2666",die:"\xA8",DifferentialD:"\u2146",digamma:"\u03DD",disin:"\u22F2",div:"\xF7",divide:"\xF7",divideontimes:"\u22C7",divonx:"\u22C7",djcy:"\u0452",DJcy:"\u0402",dlcorn:"\u231E",dlcrop:"\u230D",dollar:"$",dopf:"\u{1D555}",Dopf:"\u{1D53B}",dot:"\u02D9",Dot:"\xA8",DotDot:"\u20DC",doteq:"\u2250",doteqdot:"\u2251",DotEqual:"\u2250",dotminus:"\u2238",dotplus:"\u2214",dotsquare:"\u22A1",doublebarwedge:"\u2306",DoubleContourIntegral:"\u222F",DoubleDot:"\xA8",DoubleDownArrow:"\u21D3",DoubleLeftArrow:"\u21D0",DoubleLeftRightArrow:"\u21D4",DoubleLeftTee:"\u2AE4",DoubleLongLeftArrow:"\u27F8",DoubleLongLeftRightArrow:"\u27FA",DoubleLongRightArrow:"\u27F9",DoubleRightArrow:"\u21D2",DoubleRightTee:"\u22A8",DoubleUpArrow:"\u21D1",DoubleUpDownArrow:"\u21D5",DoubleVerticalBar:"\u2225",downarrow:"\u2193",Downarrow:"\u21D3",DownArrow:"\u2193",DownArrowBar:"\u2913",DownArrowUpArrow:"\u21F5",DownBreve:"\u0311",downdownarrows:"\u21CA",downharpoonleft:"\u21C3",downharpoonright:"\u21C2",DownLeftRightVector:"\u2950",DownLeftTeeVector:"\u295E",DownLeftVector:"\u21BD",DownLeftVectorBar:"\u2956",DownRightTeeVector:"\u295F",DownRightVector:"\u21C1",DownRightVectorBar:"\u2957",DownTee:"\u22A4",DownTeeArrow:"\u21A7",drbkarow:"\u2910",drcorn:"\u231F",drcrop:"\u230C",dscr:"\u{1D4B9}",Dscr:"\u{1D49F}",dscy:"\u0455",DScy:"\u0405",dsol:"\u29F6",dstrok:"\u0111",Dstrok:"\u0110",dtdot:"\u22F1",dtri:"\u25BF",dtrif:"\u25BE",duarr:"\u21F5",duhar:"\u296F",dwangle:"\u29A6",dzcy:"\u045F",DZcy:"\u040F",dzigrarr:"\u27FF",eacute:"\xE9",Eacute:"\xC9",easter:"\u2A6E",ecaron:"\u011B",Ecaron:"\u011A",ecir:"\u2256",ecirc:"\xEA",Ecirc:"\xCA",ecolon:"\u2255",ecy:"\u044D",Ecy:"\u042D",eDDot:"\u2A77",edot:"\u0117",eDot:"\u2251",Edot:"\u0116",ee:"\u2147",efDot:"\u2252",efr:"\u{1D522}",Efr:"\u{1D508}",eg:"\u2A9A",egrave:"\xE8",Egrave:"\xC8",egs:"\u2A96",egsdot:"\u2A98",el:"\u2A99",Element:"\u2208",elinters:"\u23E7",ell:"\u2113",els:"\u2A95",elsdot:"\u2A97",emacr:"\u0113",Emacr:"\u0112",empty:"\u2205",emptyset:"\u2205",EmptySmallSquare:"\u25FB",emptyv:"\u2205",EmptyVerySmallSquare:"\u25AB",emsp:"\u2003",emsp13:"\u2004",emsp14:"\u2005",eng:"\u014B",ENG:"\u014A",ensp:"\u2002",eogon:"\u0119",Eogon:"\u0118",eopf:"\u{1D556}",Eopf:"\u{1D53C}",epar:"\u22D5",eparsl:"\u29E3",eplus:"\u2A71",epsi:"\u03B5",epsilon:"\u03B5",Epsilon:"\u0395",epsiv:"\u03F5",eqcirc:"\u2256",eqcolon:"\u2255",eqsim:"\u2242",eqslantgtr:"\u2A96",eqslantless:"\u2A95",Equal:"\u2A75",equals:"=",EqualTilde:"\u2242",equest:"\u225F",Equilibrium:"\u21CC",equiv:"\u2261",equivDD:"\u2A78",eqvparsl:"\u29E5",erarr:"\u2971",erDot:"\u2253",escr:"\u212F",Escr:"\u2130",esdot:"\u2250",esim:"\u2242",Esim:"\u2A73",eta:"\u03B7",Eta:"\u0397",eth:"\xF0",ETH:"\xD0",euml:"\xEB",Euml:"\xCB",euro:"\u20AC",excl:"!",exist:"\u2203",Exists:"\u2203",expectation:"\u2130",exponentiale:"\u2147",ExponentialE:"\u2147",fallingdotseq:"\u2252",fcy:"\u0444",Fcy:"\u0424",female:"\u2640",ffilig:"\uFB03",fflig:"\uFB00",ffllig:"\uFB04",ffr:"\u{1D523}",Ffr:"\u{1D509}",filig:"\uFB01",FilledSmallSquare:"\u25FC",FilledVerySmallSquare:"\u25AA",fjlig:"fj",flat:"\u266D",fllig:"\uFB02",fltns:"\u25B1",fnof:"\u0192",fopf:"\u{1D557}",Fopf:"\u{1D53D}",forall:"\u2200",ForAll:"\u2200",fork:"\u22D4",forkv:"\u2AD9",Fouriertrf:"\u2131",fpartint:"\u2A0D",frac12:"\xBD",frac13:"\u2153",frac14:"\xBC",frac15:"\u2155",frac16:"\u2159",frac18:"\u215B",frac23:"\u2154",frac25:"\u2156",frac34:"\xBE",frac35:"\u2157",frac38:"\u215C",frac45:"\u2158",frac56:"\u215A",frac58:"\u215D",frac78:"\u215E",frasl:"\u2044",frown:"\u2322",fscr:"\u{1D4BB}",Fscr:"\u2131",gacute:"\u01F5",gamma:"\u03B3",Gamma:"\u0393",gammad:"\u03DD",Gammad:"\u03DC",gap:"\u2A86",gbreve:"\u011F",Gbreve:"\u011E",Gcedil:"\u0122",gcirc:"\u011D",Gcirc:"\u011C",gcy:"\u0433",Gcy:"\u0413",gdot:"\u0121",Gdot:"\u0120",ge:"\u2265",gE:"\u2267",gel:"\u22DB",gEl:"\u2A8C",geq:"\u2265",geqq:"\u2267",geqslant:"\u2A7E",ges:"\u2A7E",gescc:"\u2AA9",gesdot:"\u2A80",gesdoto:"\u2A82",gesdotol:"\u2A84",gesl:"\u22DB\uFE00",gesles:"\u2A94",gfr:"\u{1D524}",Gfr:"\u{1D50A}",gg:"\u226B",Gg:"\u22D9",ggg:"\u22D9",gimel:"\u2137",gjcy:"\u0453",GJcy:"\u0403",gl:"\u2277",gla:"\u2AA5",glE:"\u2A92",glj:"\u2AA4",gnap:"\u2A8A",gnapprox:"\u2A8A",gne:"\u2A88",gnE:"\u2269",gneq:"\u2A88",gneqq:"\u2269",gnsim:"\u22E7",gopf:"\u{1D558}",Gopf:"\u{1D53E}",grave:"`",GreaterEqual:"\u2265",GreaterEqualLess:"\u22DB",GreaterFullEqual:"\u2267",GreaterGreater:"\u2AA2",GreaterLess:"\u2277",GreaterSlantEqual:"\u2A7E",GreaterTilde:"\u2273",gscr:"\u210A",Gscr:"\u{1D4A2}",gsim:"\u2273",gsime:"\u2A8E",gsiml:"\u2A90",gt:">",Gt:"\u226B",GT:">",gtcc:"\u2AA7",gtcir:"\u2A7A",gtdot:"\u22D7",gtlPar:"\u2995",gtquest:"\u2A7C",gtrapprox:"\u2A86",gtrarr:"\u2978",gtrdot:"\u22D7",gtreqless:"\u22DB",gtreqqless:"\u2A8C",gtrless:"\u2277",gtrsim:"\u2273",gvertneqq:"\u2269\uFE00",gvnE:"\u2269\uFE00",Hacek:"\u02C7",hairsp:"\u200A",half:"\xBD",hamilt:"\u210B",hardcy:"\u044A",HARDcy:"\u042A",harr:"\u2194",hArr:"\u21D4",harrcir:"\u2948",harrw:"\u21AD",Hat:"^",hbar:"\u210F",hcirc:"\u0125",Hcirc:"\u0124",hearts:"\u2665",heartsuit:"\u2665",hellip:"\u2026",hercon:"\u22B9",hfr:"\u{1D525}",Hfr:"\u210C",HilbertSpace:"\u210B",hksearow:"\u2925",hkswarow:"\u2926",hoarr:"\u21FF",homtht:"\u223B",hookleftarrow:"\u21A9",hookrightarrow:"\u21AA",hopf:"\u{1D559}",Hopf:"\u210D",horbar:"\u2015",HorizontalLine:"\u2500",hscr:"\u{1D4BD}",Hscr:"\u210B",hslash:"\u210F",hstrok:"\u0127",Hstrok:"\u0126",HumpDownHump:"\u224E",HumpEqual:"\u224F",hybull:"\u2043",hyphen:"\u2010",iacute:"\xED",Iacute:"\xCD",ic:"\u2063",icirc:"\xEE",Icirc:"\xCE",icy:"\u0438",Icy:"\u0418",Idot:"\u0130",iecy:"\u0435",IEcy:"\u0415",iexcl:"\xA1",iff:"\u21D4",ifr:"\u{1D526}",Ifr:"\u2111",igrave:"\xEC",Igrave:"\xCC",ii:"\u2148",iiiint:"\u2A0C",iiint:"\u222D",iinfin:"\u29DC",iiota:"\u2129",ijlig:"\u0133",IJlig:"\u0132",Im:"\u2111",imacr:"\u012B",Imacr:"\u012A",image:"\u2111",ImaginaryI:"\u2148",imagline:"\u2110",imagpart:"\u2111",imath:"\u0131",imof:"\u22B7",imped:"\u01B5",Implies:"\u21D2",in:"\u2208",incare:"\u2105",infin:"\u221E",infintie:"\u29DD",inodot:"\u0131",int:"\u222B",Int:"\u222C",intcal:"\u22BA",integers:"\u2124",Integral:"\u222B",intercal:"\u22BA",Intersection:"\u22C2",intlarhk:"\u2A17",intprod:"\u2A3C",InvisibleComma:"\u2063",InvisibleTimes:"\u2062",iocy:"\u0451",IOcy:"\u0401",iogon:"\u012F",Iogon:"\u012E",iopf:"\u{1D55A}",Iopf:"\u{1D540}",iota:"\u03B9",Iota:"\u0399",iprod:"\u2A3C",iquest:"\xBF",iscr:"\u{1D4BE}",Iscr:"\u2110",isin:"\u2208",isindot:"\u22F5",isinE:"\u22F9",isins:"\u22F4",isinsv:"\u22F3",isinv:"\u2208",it:"\u2062",itilde:"\u0129",Itilde:"\u0128",iukcy:"\u0456",Iukcy:"\u0406",iuml:"\xEF",Iuml:"\xCF",jcirc:"\u0135",Jcirc:"\u0134",jcy:"\u0439",Jcy:"\u0419",jfr:"\u{1D527}",Jfr:"\u{1D50D}",jmath:"\u0237",jopf:"\u{1D55B}",Jopf:"\u{1D541}",jscr:"\u{1D4BF}",Jscr:"\u{1D4A5}",jsercy:"\u0458",Jsercy:"\u0408",jukcy:"\u0454",Jukcy:"\u0404",kappa:"\u03BA",Kappa:"\u039A",kappav:"\u03F0",kcedil:"\u0137",Kcedil:"\u0136",kcy:"\u043A",Kcy:"\u041A",kfr:"\u{1D528}",Kfr:"\u{1D50E}",kgreen:"\u0138",khcy:"\u0445",KHcy:"\u0425",kjcy:"\u045C",KJcy:"\u040C",kopf:"\u{1D55C}",Kopf:"\u{1D542}",kscr:"\u{1D4C0}",Kscr:"\u{1D4A6}",lAarr:"\u21DA",lacute:"\u013A",Lacute:"\u0139",laemptyv:"\u29B4",lagran:"\u2112",lambda:"\u03BB",Lambda:"\u039B",lang:"\u27E8",Lang:"\u27EA",langd:"\u2991",langle:"\u27E8",lap:"\u2A85",Laplacetrf:"\u2112",laquo:"\xAB",larr:"\u2190",lArr:"\u21D0",Larr:"\u219E",larrb:"\u21E4",larrbfs:"\u291F",larrfs:"\u291D",larrhk:"\u21A9",larrlp:"\u21AB",larrpl:"\u2939",larrsim:"\u2973",larrtl:"\u21A2",lat:"\u2AAB",latail:"\u2919",lAtail:"\u291B",late:"\u2AAD",lates:"\u2AAD\uFE00",lbarr:"\u290C",lBarr:"\u290E",lbbrk:"\u2772",lbrace:"{",lbrack:"[",lbrke:"\u298B",lbrksld:"\u298F",lbrkslu:"\u298D",lcaron:"\u013E",Lcaron:"\u013D",lcedil:"\u013C",Lcedil:"\u013B",lceil:"\u2308",lcub:"{",lcy:"\u043B",Lcy:"\u041B",ldca:"\u2936",ldquo:"\u201C",ldquor:"\u201E",ldrdhar:"\u2967",ldrushar:"\u294B",ldsh:"\u21B2",le:"\u2264",lE:"\u2266",LeftAngleBracket:"\u27E8",leftarrow:"\u2190",Leftarrow:"\u21D0",LeftArrow:"\u2190",LeftArrowBar:"\u21E4",LeftArrowRightArrow:"\u21C6",leftarrowtail:"\u21A2",LeftCeiling:"\u2308",LeftDoubleBracket:"\u27E6",LeftDownTeeVector:"\u2961",LeftDownVector:"\u21C3",LeftDownVectorBar:"\u2959",LeftFloor:"\u230A",leftharpoondown:"\u21BD",leftharpoonup:"\u21BC",leftleftarrows:"\u21C7",leftrightarrow:"\u2194",Leftrightarrow:"\u21D4",LeftRightArrow:"\u2194",leftrightarrows:"\u21C6",leftrightharpoons:"\u21CB",leftrightsquigarrow:"\u21AD",LeftRightVector:"\u294E",LeftTee:"\u22A3",LeftTeeArrow:"\u21A4",LeftTeeVector:"\u295A",leftthreetimes:"\u22CB",LeftTriangle:"\u22B2",LeftTriangleBar:"\u29CF",LeftTriangleEqual:"\u22B4",LeftUpDownVector:"\u2951",LeftUpTeeVector:"\u2960",LeftUpVector:"\u21BF",LeftUpVectorBar:"\u2958",LeftVector:"\u21BC",LeftVectorBar:"\u2952",leg:"\u22DA",lEg:"\u2A8B",leq:"\u2264",leqq:"\u2266",leqslant:"\u2A7D",les:"\u2A7D",lescc:"\u2AA8",lesdot:"\u2A7F",lesdoto:"\u2A81",lesdotor:"\u2A83",lesg:"\u22DA\uFE00",lesges:"\u2A93",lessapprox:"\u2A85",lessdot:"\u22D6",lesseqgtr:"\u22DA",lesseqqgtr:"\u2A8B",LessEqualGreater:"\u22DA",LessFullEqual:"\u2266",LessGreater:"\u2276",lessgtr:"\u2276",LessLess:"\u2AA1",lesssim:"\u2272",LessSlantEqual:"\u2A7D",LessTilde:"\u2272",lfisht:"\u297C",lfloor:"\u230A",lfr:"\u{1D529}",Lfr:"\u{1D50F}",lg:"\u2276",lgE:"\u2A91",lHar:"\u2962",lhard:"\u21BD",lharu:"\u21BC",lharul:"\u296A",lhblk:"\u2584",ljcy:"\u0459",LJcy:"\u0409",ll:"\u226A",Ll:"\u22D8",llarr:"\u21C7",llcorner:"\u231E",Lleftarrow:"\u21DA",llhard:"\u296B",lltri:"\u25FA",lmidot:"\u0140",Lmidot:"\u013F",lmoust:"\u23B0",lmoustache:"\u23B0",lnap:"\u2A89",lnapprox:"\u2A89",lne:"\u2A87",lnE:"\u2268",lneq:"\u2A87",lneqq:"\u2268",lnsim:"\u22E6",loang:"\u27EC",loarr:"\u21FD",lobrk:"\u27E6",longleftarrow:"\u27F5",Longleftarrow:"\u27F8",LongLeftArrow:"\u27F5",longleftrightarrow:"\u27F7",Longleftrightarrow:"\u27FA",LongLeftRightArrow:"\u27F7",longmapsto:"\u27FC",longrightarrow:"\u27F6",Longrightarrow:"\u27F9",LongRightArrow:"\u27F6",looparrowleft:"\u21AB",looparrowright:"\u21AC",lopar:"\u2985",lopf:"\u{1D55D}",Lopf:"\u{1D543}",loplus:"\u2A2D",lotimes:"\u2A34",lowast:"\u2217",lowbar:"_",LowerLeftArrow:"\u2199",LowerRightArrow:"\u2198",loz:"\u25CA",lozenge:"\u25CA",lozf:"\u29EB",lpar:"(",lparlt:"\u2993",lrarr:"\u21C6",lrcorner:"\u231F",lrhar:"\u21CB",lrhard:"\u296D",lrm:"\u200E",lrtri:"\u22BF",lsaquo:"\u2039",lscr:"\u{1D4C1}",Lscr:"\u2112",lsh:"\u21B0",Lsh:"\u21B0",lsim:"\u2272",lsime:"\u2A8D",lsimg:"\u2A8F",lsqb:"[",lsquo:"\u2018",lsquor:"\u201A",lstrok:"\u0142",Lstrok:"\u0141",lt:"<",Lt:"\u226A",LT:"<",ltcc:"\u2AA6",ltcir:"\u2A79",ltdot:"\u22D6",lthree:"\u22CB",ltimes:"\u22C9",ltlarr:"\u2976",ltquest:"\u2A7B",ltri:"\u25C3",ltrie:"\u22B4",ltrif:"\u25C2",ltrPar:"\u2996",lurdshar:"\u294A",luruhar:"\u2966",lvertneqq:"\u2268\uFE00",lvnE:"\u2268\uFE00",macr:"\xAF",male:"\u2642",malt:"\u2720",maltese:"\u2720",map:"\u21A6",Map:"\u2905",mapsto:"\u21A6",mapstodown:"\u21A7",mapstoleft:"\u21A4",mapstoup:"\u21A5",marker:"\u25AE",mcomma:"\u2A29",mcy:"\u043C",Mcy:"\u041C",mdash:"\u2014",mDDot:"\u223A",measuredangle:"\u2221",MediumSpace:"\u205F",Mellintrf:"\u2133",mfr:"\u{1D52A}",Mfr:"\u{1D510}",mho:"\u2127",micro:"\xB5",mid:"\u2223",midast:"*",midcir:"\u2AF0",middot:"\xB7",minus:"\u2212",minusb:"\u229F",minusd:"\u2238",minusdu:"\u2A2A",MinusPlus:"\u2213",mlcp:"\u2ADB",mldr:"\u2026",mnplus:"\u2213",models:"\u22A7",mopf:"\u{1D55E}",Mopf:"\u{1D544}",mp:"\u2213",mscr:"\u{1D4C2}",Mscr:"\u2133",mstpos:"\u223E",mu:"\u03BC",Mu:"\u039C",multimap:"\u22B8",mumap:"\u22B8",nabla:"\u2207",nacute:"\u0144",Nacute:"\u0143",nang:"\u2220\u20D2",nap:"\u2249",napE:"\u2A70\u0338",napid:"\u224B\u0338",napos:"\u0149",napprox:"\u2249",natur:"\u266E",natural:"\u266E",naturals:"\u2115",nbsp:"\xA0",nbump:"\u224E\u0338",nbumpe:"\u224F\u0338",ncap:"\u2A43",ncaron:"\u0148",Ncaron:"\u0147",ncedil:"\u0146",Ncedil:"\u0145",ncong:"\u2247",ncongdot:"\u2A6D\u0338",ncup:"\u2A42",ncy:"\u043D",Ncy:"\u041D",ndash:"\u2013",ne:"\u2260",nearhk:"\u2924",nearr:"\u2197",neArr:"\u21D7",nearrow:"\u2197",nedot:"\u2250\u0338",NegativeMediumSpace:"\u200B",NegativeThickSpace:"\u200B",NegativeThinSpace:"\u200B",NegativeVeryThinSpace:"\u200B",nequiv:"\u2262",nesear:"\u2928",nesim:"\u2242\u0338",NestedGreaterGreater:"\u226B",NestedLessLess:"\u226A",NewLine:`
`,nexist:"\u2204",nexists:"\u2204",nfr:"\u{1D52B}",Nfr:"\u{1D511}",nge:"\u2271",ngE:"\u2267\u0338",ngeq:"\u2271",ngeqq:"\u2267\u0338",ngeqslant:"\u2A7E\u0338",nges:"\u2A7E\u0338",nGg:"\u22D9\u0338",ngsim:"\u2275",ngt:"\u226F",nGt:"\u226B\u20D2",ngtr:"\u226F",nGtv:"\u226B\u0338",nharr:"\u21AE",nhArr:"\u21CE",nhpar:"\u2AF2",ni:"\u220B",nis:"\u22FC",nisd:"\u22FA",niv:"\u220B",njcy:"\u045A",NJcy:"\u040A",nlarr:"\u219A",nlArr:"\u21CD",nldr:"\u2025",nle:"\u2270",nlE:"\u2266\u0338",nleftarrow:"\u219A",nLeftarrow:"\u21CD",nleftrightarrow:"\u21AE",nLeftrightarrow:"\u21CE",nleq:"\u2270",nleqq:"\u2266\u0338",nleqslant:"\u2A7D\u0338",nles:"\u2A7D\u0338",nless:"\u226E",nLl:"\u22D8\u0338",nlsim:"\u2274",nlt:"\u226E",nLt:"\u226A\u20D2",nltri:"\u22EA",nltrie:"\u22EC",nLtv:"\u226A\u0338",nmid:"\u2224",NoBreak:"\u2060",NonBreakingSpace:"\xA0",nopf:"\u{1D55F}",Nopf:"\u2115",not:"\xAC",Not:"\u2AEC",NotCongruent:"\u2262",NotCupCap:"\u226D",NotDoubleVerticalBar:"\u2226",NotElement:"\u2209",NotEqual:"\u2260",NotEqualTilde:"\u2242\u0338",NotExists:"\u2204",NotGreater:"\u226F",NotGreaterEqual:"\u2271",NotGreaterFullEqual:"\u2267\u0338",NotGreaterGreater:"\u226B\u0338",NotGreaterLess:"\u2279",NotGreaterSlantEqual:"\u2A7E\u0338",NotGreaterTilde:"\u2275",NotHumpDownHump:"\u224E\u0338",NotHumpEqual:"\u224F\u0338",notin:"\u2209",notindot:"\u22F5\u0338",notinE:"\u22F9\u0338",notinva:"\u2209",notinvb:"\u22F7",notinvc:"\u22F6",NotLeftTriangle:"\u22EA",NotLeftTriangleBar:"\u29CF\u0338",NotLeftTriangleEqual:"\u22EC",NotLess:"\u226E",NotLessEqual:"\u2270",NotLessGreater:"\u2278",NotLessLess:"\u226A\u0338",NotLessSlantEqual:"\u2A7D\u0338",NotLessTilde:"\u2274",NotNestedGreaterGreater:"\u2AA2\u0338",NotNestedLessLess:"\u2AA1\u0338",notni:"\u220C",notniva:"\u220C",notnivb:"\u22FE",notnivc:"\u22FD",NotPrecedes:"\u2280",NotPrecedesEqual:"\u2AAF\u0338",NotPrecedesSlantEqual:"\u22E0",NotReverseElement:"\u220C",NotRightTriangle:"\u22EB",NotRightTriangleBar:"\u29D0\u0338",NotRightTriangleEqual:"\u22ED",NotSquareSubset:"\u228F\u0338",NotSquareSubsetEqual:"\u22E2",NotSquareSuperset:"\u2290\u0338",NotSquareSupersetEqual:"\u22E3",NotSubset:"\u2282\u20D2",NotSubsetEqual:"\u2288",NotSucceeds:"\u2281",NotSucceedsEqual:"\u2AB0\u0338",NotSucceedsSlantEqual:"\u22E1",NotSucceedsTilde:"\u227F\u0338",NotSuperset:"\u2283\u20D2",NotSupersetEqual:"\u2289",NotTilde:"\u2241",NotTildeEqual:"\u2244",NotTildeFullEqual:"\u2247",NotTildeTilde:"\u2249",NotVerticalBar:"\u2224",npar:"\u2226",nparallel:"\u2226",nparsl:"\u2AFD\u20E5",npart:"\u2202\u0338",npolint:"\u2A14",npr:"\u2280",nprcue:"\u22E0",npre:"\u2AAF\u0338",nprec:"\u2280",npreceq:"\u2AAF\u0338",nrarr:"\u219B",nrArr:"\u21CF",nrarrc:"\u2933\u0338",nrarrw:"\u219D\u0338",nrightarrow:"\u219B",nRightarrow:"\u21CF",nrtri:"\u22EB",nrtrie:"\u22ED",nsc:"\u2281",nsccue:"\u22E1",nsce:"\u2AB0\u0338",nscr:"\u{1D4C3}",Nscr:"\u{1D4A9}",nshortmid:"\u2224",nshortparallel:"\u2226",nsim:"\u2241",nsime:"\u2244",nsimeq:"\u2244",nsmid:"\u2224",nspar:"\u2226",nsqsube:"\u22E2",nsqsupe:"\u22E3",nsub:"\u2284",nsube:"\u2288",nsubE:"\u2AC5\u0338",nsubset:"\u2282\u20D2",nsubseteq:"\u2288",nsubseteqq:"\u2AC5\u0338",nsucc:"\u2281",nsucceq:"\u2AB0\u0338",nsup:"\u2285",nsupe:"\u2289",nsupE:"\u2AC6\u0338",nsupset:"\u2283\u20D2",nsupseteq:"\u2289",nsupseteqq:"\u2AC6\u0338",ntgl:"\u2279",ntilde:"\xF1",Ntilde:"\xD1",ntlg:"\u2278",ntriangleleft:"\u22EA",ntrianglelefteq:"\u22EC",ntriangleright:"\u22EB",ntrianglerighteq:"\u22ED",nu:"\u03BD",Nu:"\u039D",num:"#",numero:"\u2116",numsp:"\u2007",nvap:"\u224D\u20D2",nvdash:"\u22AC",nvDash:"\u22AD",nVdash:"\u22AE",nVDash:"\u22AF",nvge:"\u2265\u20D2",nvgt:">\u20D2",nvHarr:"\u2904",nvinfin:"\u29DE",nvlArr:"\u2902",nvle:"\u2264\u20D2",nvlt:"<\u20D2",nvltrie:"\u22B4\u20D2",nvrArr:"\u2903",nvrtrie:"\u22B5\u20D2",nvsim:"\u223C\u20D2",nwarhk:"\u2923",nwarr:"\u2196",nwArr:"\u21D6",nwarrow:"\u2196",nwnear:"\u2927",oacute:"\xF3",Oacute:"\xD3",oast:"\u229B",ocir:"\u229A",ocirc:"\xF4",Ocirc:"\xD4",ocy:"\u043E",Ocy:"\u041E",odash:"\u229D",odblac:"\u0151",Odblac:"\u0150",odiv:"\u2A38",odot:"\u2299",odsold:"\u29BC",oelig:"\u0153",OElig:"\u0152",ofcir:"\u29BF",ofr:"\u{1D52C}",Ofr:"\u{1D512}",ogon:"\u02DB",ograve:"\xF2",Ograve:"\xD2",ogt:"\u29C1",ohbar:"\u29B5",ohm:"\u03A9",oint:"\u222E",olarr:"\u21BA",olcir:"\u29BE",olcross:"\u29BB",oline:"\u203E",olt:"\u29C0",omacr:"\u014D",Omacr:"\u014C",omega:"\u03C9",Omega:"\u03A9",omicron:"\u03BF",Omicron:"\u039F",omid:"\u29B6",ominus:"\u2296",oopf:"\u{1D560}",Oopf:"\u{1D546}",opar:"\u29B7",OpenCurlyDoubleQuote:"\u201C",OpenCurlyQuote:"\u2018",operp:"\u29B9",oplus:"\u2295",or:"\u2228",Or:"\u2A54",orarr:"\u21BB",ord:"\u2A5D",order:"\u2134",orderof:"\u2134",ordf:"\xAA",ordm:"\xBA",origof:"\u22B6",oror:"\u2A56",orslope:"\u2A57",orv:"\u2A5B",oS:"\u24C8",oscr:"\u2134",Oscr:"\u{1D4AA}",oslash:"\xF8",Oslash:"\xD8",osol:"\u2298",otilde:"\xF5",Otilde:"\xD5",otimes:"\u2297",Otimes:"\u2A37",otimesas:"\u2A36",ouml:"\xF6",Ouml:"\xD6",ovbar:"\u233D",OverBar:"\u203E",OverBrace:"\u23DE",OverBracket:"\u23B4",OverParenthesis:"\u23DC",par:"\u2225",para:"\xB6",parallel:"\u2225",parsim:"\u2AF3",parsl:"\u2AFD",part:"\u2202",PartialD:"\u2202",pcy:"\u043F",Pcy:"\u041F",percnt:"%",period:".",permil:"\u2030",perp:"\u22A5",pertenk:"\u2031",pfr:"\u{1D52D}",Pfr:"\u{1D513}",phi:"\u03C6",Phi:"\u03A6",phiv:"\u03D5",phmmat:"\u2133",phone:"\u260E",pi:"\u03C0",Pi:"\u03A0",pitchfork:"\u22D4",piv:"\u03D6",planck:"\u210F",planckh:"\u210E",plankv:"\u210F",plus:"+",plusacir:"\u2A23",plusb:"\u229E",pluscir:"\u2A22",plusdo:"\u2214",plusdu:"\u2A25",pluse:"\u2A72",PlusMinus:"\xB1",plusmn:"\xB1",plussim:"\u2A26",plustwo:"\u2A27",pm:"\xB1",Poincareplane:"\u210C",pointint:"\u2A15",popf:"\u{1D561}",Popf:"\u2119",pound:"\xA3",pr:"\u227A",Pr:"\u2ABB",prap:"\u2AB7",prcue:"\u227C",pre:"\u2AAF",prE:"\u2AB3",prec:"\u227A",precapprox:"\u2AB7",preccurlyeq:"\u227C",Precedes:"\u227A",PrecedesEqual:"\u2AAF",PrecedesSlantEqual:"\u227C",PrecedesTilde:"\u227E",preceq:"\u2AAF",precnapprox:"\u2AB9",precneqq:"\u2AB5",precnsim:"\u22E8",precsim:"\u227E",prime:"\u2032",Prime:"\u2033",primes:"\u2119",prnap:"\u2AB9",prnE:"\u2AB5",prnsim:"\u22E8",prod:"\u220F",Product:"\u220F",profalar:"\u232E",profline:"\u2312",profsurf:"\u2313",prop:"\u221D",Proportion:"\u2237",Proportional:"\u221D",propto:"\u221D",prsim:"\u227E",prurel:"\u22B0",pscr:"\u{1D4C5}",Pscr:"\u{1D4AB}",psi:"\u03C8",Psi:"\u03A8",puncsp:"\u2008",qfr:"\u{1D52E}",Qfr:"\u{1D514}",qint:"\u2A0C",qopf:"\u{1D562}",Qopf:"\u211A",qprime:"\u2057",qscr:"\u{1D4C6}",Qscr:"\u{1D4AC}",quaternions:"\u210D",quatint:"\u2A16",quest:"?",questeq:"\u225F",quot:'"',QUOT:'"',rAarr:"\u21DB",race:"\u223D\u0331",racute:"\u0155",Racute:"\u0154",radic:"\u221A",raemptyv:"\u29B3",rang:"\u27E9",Rang:"\u27EB",rangd:"\u2992",range:"\u29A5",rangle:"\u27E9",raquo:"\xBB",rarr:"\u2192",rArr:"\u21D2",Rarr:"\u21A0",rarrap:"\u2975",rarrb:"\u21E5",rarrbfs:"\u2920",rarrc:"\u2933",rarrfs:"\u291E",rarrhk:"\u21AA",rarrlp:"\u21AC",rarrpl:"\u2945",rarrsim:"\u2974",rarrtl:"\u21A3",Rarrtl:"\u2916",rarrw:"\u219D",ratail:"\u291A",rAtail:"\u291C",ratio:"\u2236",rationals:"\u211A",rbarr:"\u290D",rBarr:"\u290F",RBarr:"\u2910",rbbrk:"\u2773",rbrace:"}",rbrack:"]",rbrke:"\u298C",rbrksld:"\u298E",rbrkslu:"\u2990",rcaron:"\u0159",Rcaron:"\u0158",rcedil:"\u0157",Rcedil:"\u0156",rceil:"\u2309",rcub:"}",rcy:"\u0440",Rcy:"\u0420",rdca:"\u2937",rdldhar:"\u2969",rdquo:"\u201D",rdquor:"\u201D",rdsh:"\u21B3",Re:"\u211C",real:"\u211C",realine:"\u211B",realpart:"\u211C",reals:"\u211D",rect:"\u25AD",reg:"\xAE",REG:"\xAE",ReverseElement:"\u220B",ReverseEquilibrium:"\u21CB",ReverseUpEquilibrium:"\u296F",rfisht:"\u297D",rfloor:"\u230B",rfr:"\u{1D52F}",Rfr:"\u211C",rHar:"\u2964",rhard:"\u21C1",rharu:"\u21C0",rharul:"\u296C",rho:"\u03C1",Rho:"\u03A1",rhov:"\u03F1",RightAngleBracket:"\u27E9",rightarrow:"\u2192",Rightarrow:"\u21D2",RightArrow:"\u2192",RightArrowBar:"\u21E5",RightArrowLeftArrow:"\u21C4",rightarrowtail:"\u21A3",RightCeiling:"\u2309",RightDoubleBracket:"\u27E7",RightDownTeeVector:"\u295D",RightDownVector:"\u21C2",RightDownVectorBar:"\u2955",RightFloor:"\u230B",rightharpoondown:"\u21C1",rightharpoonup:"\u21C0",rightleftarrows:"\u21C4",rightleftharpoons:"\u21CC",rightrightarrows:"\u21C9",rightsquigarrow:"\u219D",RightTee:"\u22A2",RightTeeArrow:"\u21A6",RightTeeVector:"\u295B",rightthreetimes:"\u22CC",RightTriangle:"\u22B3",RightTriangleBar:"\u29D0",RightTriangleEqual:"\u22B5",RightUpDownVector:"\u294F",RightUpTeeVector:"\u295C",RightUpVector:"\u21BE",RightUpVectorBar:"\u2954",RightVector:"\u21C0",RightVectorBar:"\u2953",ring:"\u02DA",risingdotseq:"\u2253",rlarr:"\u21C4",rlhar:"\u21CC",rlm:"\u200F",rmoust:"\u23B1",rmoustache:"\u23B1",rnmid:"\u2AEE",roang:"\u27ED",roarr:"\u21FE",robrk:"\u27E7",ropar:"\u2986",ropf:"\u{1D563}",Ropf:"\u211D",roplus:"\u2A2E",rotimes:"\u2A35",RoundImplies:"\u2970",rpar:")",rpargt:"\u2994",rppolint:"\u2A12",rrarr:"\u21C9",Rrightarrow:"\u21DB",rsaquo:"\u203A",rscr:"\u{1D4C7}",Rscr:"\u211B",rsh:"\u21B1",Rsh:"\u21B1",rsqb:"]",rsquo:"\u2019",rsquor:"\u2019",rthree:"\u22CC",rtimes:"\u22CA",rtri:"\u25B9",rtrie:"\u22B5",rtrif:"\u25B8",rtriltri:"\u29CE",RuleDelayed:"\u29F4",ruluhar:"\u2968",rx:"\u211E",sacute:"\u015B",Sacute:"\u015A",sbquo:"\u201A",sc:"\u227B",Sc:"\u2ABC",scap:"\u2AB8",scaron:"\u0161",Scaron:"\u0160",sccue:"\u227D",sce:"\u2AB0",scE:"\u2AB4",scedil:"\u015F",Scedil:"\u015E",scirc:"\u015D",Scirc:"\u015C",scnap:"\u2ABA",scnE:"\u2AB6",scnsim:"\u22E9",scpolint:"\u2A13",scsim:"\u227F",scy:"\u0441",Scy:"\u0421",sdot:"\u22C5",sdotb:"\u22A1",sdote:"\u2A66",searhk:"\u2925",searr:"\u2198",seArr:"\u21D8",searrow:"\u2198",sect:"\xA7",semi:";",seswar:"\u2929",setminus:"\u2216",setmn:"\u2216",sext:"\u2736",sfr:"\u{1D530}",Sfr:"\u{1D516}",sfrown:"\u2322",sharp:"\u266F",shchcy:"\u0449",SHCHcy:"\u0429",shcy:"\u0448",SHcy:"\u0428",ShortDownArrow:"\u2193",ShortLeftArrow:"\u2190",shortmid:"\u2223",shortparallel:"\u2225",ShortRightArrow:"\u2192",ShortUpArrow:"\u2191",shy:"\xAD",sigma:"\u03C3",Sigma:"\u03A3",sigmaf:"\u03C2",sigmav:"\u03C2",sim:"\u223C",simdot:"\u2A6A",sime:"\u2243",simeq:"\u2243",simg:"\u2A9E",simgE:"\u2AA0",siml:"\u2A9D",simlE:"\u2A9F",simne:"\u2246",simplus:"\u2A24",simrarr:"\u2972",slarr:"\u2190",SmallCircle:"\u2218",smallsetminus:"\u2216",smashp:"\u2A33",smeparsl:"\u29E4",smid:"\u2223",smile:"\u2323",smt:"\u2AAA",smte:"\u2AAC",smtes:"\u2AAC\uFE00",softcy:"\u044C",SOFTcy:"\u042C",sol:"/",solb:"\u29C4",solbar:"\u233F",sopf:"\u{1D564}",Sopf:"\u{1D54A}",spades:"\u2660",spadesuit:"\u2660",spar:"\u2225",sqcap:"\u2293",sqcaps:"\u2293\uFE00",sqcup:"\u2294",sqcups:"\u2294\uFE00",Sqrt:"\u221A",sqsub:"\u228F",sqsube:"\u2291",sqsubset:"\u228F",sqsubseteq:"\u2291",sqsup:"\u2290",sqsupe:"\u2292",sqsupset:"\u2290",sqsupseteq:"\u2292",squ:"\u25A1",square:"\u25A1",Square:"\u25A1",SquareIntersection:"\u2293",SquareSubset:"\u228F",SquareSubsetEqual:"\u2291",SquareSuperset:"\u2290",SquareSupersetEqual:"\u2292",SquareUnion:"\u2294",squarf:"\u25AA",squf:"\u25AA",srarr:"\u2192",sscr:"\u{1D4C8}",Sscr:"\u{1D4AE}",ssetmn:"\u2216",ssmile:"\u2323",sstarf:"\u22C6",star:"\u2606",Star:"\u22C6",starf:"\u2605",straightepsilon:"\u03F5",straightphi:"\u03D5",strns:"\xAF",sub:"\u2282",Sub:"\u22D0",subdot:"\u2ABD",sube:"\u2286",subE:"\u2AC5",subedot:"\u2AC3",submult:"\u2AC1",subne:"\u228A",subnE:"\u2ACB",subplus:"\u2ABF",subrarr:"\u2979",subset:"\u2282",Subset:"\u22D0",subseteq:"\u2286",subseteqq:"\u2AC5",SubsetEqual:"\u2286",subsetneq:"\u228A",subsetneqq:"\u2ACB",subsim:"\u2AC7",subsub:"\u2AD5",subsup:"\u2AD3",succ:"\u227B",succapprox:"\u2AB8",succcurlyeq:"\u227D",Succeeds:"\u227B",SucceedsEqual:"\u2AB0",SucceedsSlantEqual:"\u227D",SucceedsTilde:"\u227F",succeq:"\u2AB0",succnapprox:"\u2ABA",succneqq:"\u2AB6",succnsim:"\u22E9",succsim:"\u227F",SuchThat:"\u220B",sum:"\u2211",Sum:"\u2211",sung:"\u266A",sup:"\u2283",Sup:"\u22D1",sup1:"\xB9",sup2:"\xB2",sup3:"\xB3",supdot:"\u2ABE",supdsub:"\u2AD8",supe:"\u2287",supE:"\u2AC6",supedot:"\u2AC4",Superset:"\u2283",SupersetEqual:"\u2287",suphsol:"\u27C9",suphsub:"\u2AD7",suplarr:"\u297B",supmult:"\u2AC2",supne:"\u228B",supnE:"\u2ACC",supplus:"\u2AC0",supset:"\u2283",Supset:"\u22D1",supseteq:"\u2287",supseteqq:"\u2AC6",supsetneq:"\u228B",supsetneqq:"\u2ACC",supsim:"\u2AC8",supsub:"\u2AD4",supsup:"\u2AD6",swarhk:"\u2926",swarr:"\u2199",swArr:"\u21D9",swarrow:"\u2199",swnwar:"\u292A",szlig:"\xDF",Tab:"	",target:"\u2316",tau:"\u03C4",Tau:"\u03A4",tbrk:"\u23B4",tcaron:"\u0165",Tcaron:"\u0164",tcedil:"\u0163",Tcedil:"\u0162",tcy:"\u0442",Tcy:"\u0422",tdot:"\u20DB",telrec:"\u2315",tfr:"\u{1D531}",Tfr:"\u{1D517}",there4:"\u2234",therefore:"\u2234",Therefore:"\u2234",theta:"\u03B8",Theta:"\u0398",thetasym:"\u03D1",thetav:"\u03D1",thickapprox:"\u2248",thicksim:"\u223C",ThickSpace:"\u205F\u200A",thinsp:"\u2009",ThinSpace:"\u2009",thkap:"\u2248",thksim:"\u223C",thorn:"\xFE",THORN:"\xDE",tilde:"\u02DC",Tilde:"\u223C",TildeEqual:"\u2243",TildeFullEqual:"\u2245",TildeTilde:"\u2248",times:"\xD7",timesb:"\u22A0",timesbar:"\u2A31",timesd:"\u2A30",tint:"\u222D",toea:"\u2928",top:"\u22A4",topbot:"\u2336",topcir:"\u2AF1",topf:"\u{1D565}",Topf:"\u{1D54B}",topfork:"\u2ADA",tosa:"\u2929",tprime:"\u2034",trade:"\u2122",TRADE:"\u2122",triangle:"\u25B5",triangledown:"\u25BF",triangleleft:"\u25C3",trianglelefteq:"\u22B4",triangleq:"\u225C",triangleright:"\u25B9",trianglerighteq:"\u22B5",tridot:"\u25EC",trie:"\u225C",triminus:"\u2A3A",TripleDot:"\u20DB",triplus:"\u2A39",trisb:"\u29CD",tritime:"\u2A3B",trpezium:"\u23E2",tscr:"\u{1D4C9}",Tscr:"\u{1D4AF}",tscy:"\u0446",TScy:"\u0426",tshcy:"\u045B",TSHcy:"\u040B",tstrok:"\u0167",Tstrok:"\u0166",twixt:"\u226C",twoheadleftarrow:"\u219E",twoheadrightarrow:"\u21A0",uacute:"\xFA",Uacute:"\xDA",uarr:"\u2191",uArr:"\u21D1",Uarr:"\u219F",Uarrocir:"\u2949",ubrcy:"\u045E",Ubrcy:"\u040E",ubreve:"\u016D",Ubreve:"\u016C",ucirc:"\xFB",Ucirc:"\xDB",ucy:"\u0443",Ucy:"\u0423",udarr:"\u21C5",udblac:"\u0171",Udblac:"\u0170",udhar:"\u296E",ufisht:"\u297E",ufr:"\u{1D532}",Ufr:"\u{1D518}",ugrave:"\xF9",Ugrave:"\xD9",uHar:"\u2963",uharl:"\u21BF",uharr:"\u21BE",uhblk:"\u2580",ulcorn:"\u231C",ulcorner:"\u231C",ulcrop:"\u230F",ultri:"\u25F8",umacr:"\u016B",Umacr:"\u016A",uml:"\xA8",UnderBar:"_",UnderBrace:"\u23DF",UnderBracket:"\u23B5",UnderParenthesis:"\u23DD",Union:"\u22C3",UnionPlus:"\u228E",uogon:"\u0173",Uogon:"\u0172",uopf:"\u{1D566}",Uopf:"\u{1D54C}",uparrow:"\u2191",Uparrow:"\u21D1",UpArrow:"\u2191",UpArrowBar:"\u2912",UpArrowDownArrow:"\u21C5",updownarrow:"\u2195",Updownarrow:"\u21D5",UpDownArrow:"\u2195",UpEquilibrium:"\u296E",upharpoonleft:"\u21BF",upharpoonright:"\u21BE",uplus:"\u228E",UpperLeftArrow:"\u2196",UpperRightArrow:"\u2197",upsi:"\u03C5",Upsi:"\u03D2",upsih:"\u03D2",upsilon:"\u03C5",Upsilon:"\u03A5",UpTee:"\u22A5",UpTeeArrow:"\u21A5",upuparrows:"\u21C8",urcorn:"\u231D",urcorner:"\u231D",urcrop:"\u230E",uring:"\u016F",Uring:"\u016E",urtri:"\u25F9",uscr:"\u{1D4CA}",Uscr:"\u{1D4B0}",utdot:"\u22F0",utilde:"\u0169",Utilde:"\u0168",utri:"\u25B5",utrif:"\u25B4",uuarr:"\u21C8",uuml:"\xFC",Uuml:"\xDC",uwangle:"\u29A7",vangrt:"\u299C",varepsilon:"\u03F5",varkappa:"\u03F0",varnothing:"\u2205",varphi:"\u03D5",varpi:"\u03D6",varpropto:"\u221D",varr:"\u2195",vArr:"\u21D5",varrho:"\u03F1",varsigma:"\u03C2",varsubsetneq:"\u228A\uFE00",varsubsetneqq:"\u2ACB\uFE00",varsupsetneq:"\u228B\uFE00",varsupsetneqq:"\u2ACC\uFE00",vartheta:"\u03D1",vartriangleleft:"\u22B2",vartriangleright:"\u22B3",vBar:"\u2AE8",Vbar:"\u2AEB",vBarv:"\u2AE9",vcy:"\u0432",Vcy:"\u0412",vdash:"\u22A2",vDash:"\u22A8",Vdash:"\u22A9",VDash:"\u22AB",Vdashl:"\u2AE6",vee:"\u2228",Vee:"\u22C1",veebar:"\u22BB",veeeq:"\u225A",vellip:"\u22EE",verbar:"|",Verbar:"\u2016",vert:"|",Vert:"\u2016",VerticalBar:"\u2223",VerticalLine:"|",VerticalSeparator:"\u2758",VerticalTilde:"\u2240",VeryThinSpace:"\u200A",vfr:"\u{1D533}",Vfr:"\u{1D519}",vltri:"\u22B2",vnsub:"\u2282\u20D2",vnsup:"\u2283\u20D2",vopf:"\u{1D567}",Vopf:"\u{1D54D}",vprop:"\u221D",vrtri:"\u22B3",vscr:"\u{1D4CB}",Vscr:"\u{1D4B1}",vsubne:"\u228A\uFE00",vsubnE:"\u2ACB\uFE00",vsupne:"\u228B\uFE00",vsupnE:"\u2ACC\uFE00",Vvdash:"\u22AA",vzigzag:"\u299A",wcirc:"\u0175",Wcirc:"\u0174",wedbar:"\u2A5F",wedge:"\u2227",Wedge:"\u22C0",wedgeq:"\u2259",weierp:"\u2118",wfr:"\u{1D534}",Wfr:"\u{1D51A}",wopf:"\u{1D568}",Wopf:"\u{1D54E}",wp:"\u2118",wr:"\u2240",wreath:"\u2240",wscr:"\u{1D4CC}",Wscr:"\u{1D4B2}",xcap:"\u22C2",xcirc:"\u25EF",xcup:"\u22C3",xdtri:"\u25BD",xfr:"\u{1D535}",Xfr:"\u{1D51B}",xharr:"\u27F7",xhArr:"\u27FA",xi:"\u03BE",Xi:"\u039E",xlarr:"\u27F5",xlArr:"\u27F8",xmap:"\u27FC",xnis:"\u22FB",xodot:"\u2A00",xopf:"\u{1D569}",Xopf:"\u{1D54F}",xoplus:"\u2A01",xotime:"\u2A02",xrarr:"\u27F6",xrArr:"\u27F9",xscr:"\u{1D4CD}",Xscr:"\u{1D4B3}",xsqcup:"\u2A06",xuplus:"\u2A04",xutri:"\u25B3",xvee:"\u22C1",xwedge:"\u22C0",yacute:"\xFD",Yacute:"\xDD",yacy:"\u044F",YAcy:"\u042F",ycirc:"\u0177",Ycirc:"\u0176",ycy:"\u044B",Ycy:"\u042B",yen:"\xA5",yfr:"\u{1D536}",Yfr:"\u{1D51C}",yicy:"\u0457",YIcy:"\u0407",yopf:"\u{1D56A}",Yopf:"\u{1D550}",yscr:"\u{1D4CE}",Yscr:"\u{1D4B4}",yucy:"\u044E",YUcy:"\u042E",yuml:"\xFF",Yuml:"\u0178",zacute:"\u017A",Zacute:"\u0179",zcaron:"\u017E",Zcaron:"\u017D",zcy:"\u0437",Zcy:"\u0417",zdot:"\u017C",Zdot:"\u017B",zeetrf:"\u2128",ZeroWidthSpace:"\u200B",zeta:"\u03B6",Zeta:"\u0396",zfr:"\u{1D537}",Zfr:"\u2128",zhcy:"\u0436",ZHcy:"\u0416",zigrarr:"\u21DD",zopf:"\u{1D56B}",Zopf:"\u2124",zscr:"\u{1D4CF}",Zscr:"\u{1D4B5}",zwj:"\u200D",zwnj:"\u200C"},i={aacute:"\xE1",Aacute:"\xC1",acirc:"\xE2",Acirc:"\xC2",acute:"\xB4",aelig:"\xE6",AElig:"\xC6",agrave:"\xE0",Agrave:"\xC0",amp:"&",AMP:"&",aring:"\xE5",Aring:"\xC5",atilde:"\xE3",Atilde:"\xC3",auml:"\xE4",Auml:"\xC4",brvbar:"\xA6",ccedil:"\xE7",Ccedil:"\xC7",cedil:"\xB8",cent:"\xA2",copy:"\xA9",COPY:"\xA9",curren:"\xA4",deg:"\xB0",divide:"\xF7",eacute:"\xE9",Eacute:"\xC9",ecirc:"\xEA",Ecirc:"\xCA",egrave:"\xE8",Egrave:"\xC8",eth:"\xF0",ETH:"\xD0",euml:"\xEB",Euml:"\xCB",frac12:"\xBD",frac14:"\xBC",frac34:"\xBE",gt:">",GT:">",iacute:"\xED",Iacute:"\xCD",icirc:"\xEE",Icirc:"\xCE",iexcl:"\xA1",igrave:"\xEC",Igrave:"\xCC",iquest:"\xBF",iuml:"\xEF",Iuml:"\xCF",laquo:"\xAB",lt:"<",LT:"<",macr:"\xAF",micro:"\xB5",middot:"\xB7",nbsp:"\xA0",not:"\xAC",ntilde:"\xF1",Ntilde:"\xD1",oacute:"\xF3",Oacute:"\xD3",ocirc:"\xF4",Ocirc:"\xD4",ograve:"\xF2",Ograve:"\xD2",ordf:"\xAA",ordm:"\xBA",oslash:"\xF8",Oslash:"\xD8",otilde:"\xF5",Otilde:"\xD5",ouml:"\xF6",Ouml:"\xD6",para:"\xB6",plusmn:"\xB1",pound:"\xA3",quot:'"',QUOT:'"',raquo:"\xBB",reg:"\xAE",REG:"\xAE",sect:"\xA7",shy:"\xAD",sup1:"\xB9",sup2:"\xB2",sup3:"\xB3",szlig:"\xDF",thorn:"\xFE",THORN:"\xDE",times:"\xD7",uacute:"\xFA",Uacute:"\xDA",ucirc:"\xFB",Ucirc:"\xDB",ugrave:"\xF9",Ugrave:"\xD9",uml:"\xA8",uuml:"\xFC",Uuml:"\xDC",yacute:"\xFD",Yacute:"\xDD",yen:"\xA5",yuml:"\xFF"},t={"0":"\uFFFD","128":"\u20AC","130":"\u201A","131":"\u0192","132":"\u201E","133":"\u2026","134":"\u2020","135":"\u2021","136":"\u02C6","137":"\u2030","138":"\u0160","139":"\u2039","140":"\u0152","142":"\u017D","145":"\u2018","146":"\u2019","147":"\u201C","148":"\u201D","149":"\u2022","150":"\u2013","151":"\u2014","152":"\u02DC","153":"\u2122","154":"\u0161","155":"\u203A","156":"\u0153","158":"\u017E","159":"\u0178"},O=[1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65e3,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111],v=String.fromCharCode,M={},q=M.hasOwnProperty,Q=function(I,$){return q.call(I,$)},Z=function(I,$){for(var H=-1,z=I.length;++H<z;)if(I[H]==$)return!0;return!1},te=function(I,$){if(!I)return $;var H={},z;for(z in $)H[z]=Q(I,z)?I[z]:$[z];return H},G=function(I,$){var H="";return I>=55296&&I<=57343||I>1114111?($&&X("character reference outside the permissible Unicode range"),"\uFFFD"):Q(t,I)?($&&X("disallowed character reference"),t[I]):($&&Z(O,I)&&X("disallowed character reference"),I>65535&&(I-=65536,H+=v(I>>>10&1023|55296),I=56320|I&1023),H+=v(I),H)},S=function(I){return"&#x"+I.toString(16).toUpperCase()+";"},x=function(I){return"&#"+I+";"},X=function(I){throw Error("Parse error: "+I)},we=function(I,$){$=te($,we.options);var H=$.strict;H&&n.test(I)&&X("forbidden code point");var z=$.encodeEverything,xe=$.useNamedReferences,ue=$.allowUnsafeSymbols,ve=$.decimal?x:S,oe=function(Ce){return ve(Ce.charCodeAt(0))};return z?(I=I.replace(pe,function(Ce){return xe&&Q(r,Ce)?"&"+r[Ce]+";":oe(Ce)}),xe&&(I=I.replace(/&gt;\u20D2/g,"&nvgt;").replace(/&lt;\u20D2/g,"&nvlt;").replace(/&#x66;&#x6A;/g,"&fjlig;")),xe&&(I=I.replace(l,function(Ce){return"&"+r[Ce]+";"}))):xe?(ue||(I=I.replace(o,function(Ce){return"&"+r[Ce]+";"})),I=I.replace(/&gt;\u20D2/g,"&nvgt;").replace(/&lt;\u20D2/g,"&nvlt;"),I=I.replace(l,function(Ce){return"&"+r[Ce]+";"})):ue||(I=I.replace(o,oe)),I.replace(g,function(Ce){var Te=Ce.charCodeAt(0),D=Ce.charCodeAt(1),ee=(Te-55296)*1024+D-56320+65536;return ve(ee)}).replace(U,oe)};we.options={allowUnsafeSymbols:!1,encodeEverything:!1,strict:!1,useNamedReferences:!1,decimal:!1};var E=function(I,$){$=te($,E.options);var H=$.strict;return H&&b.test(I)&&X("malformed character reference"),I.replace(P,function(z,xe,ue,ve,oe,Ce,Te,D,ee){var K,j,se,Ee,$e,je;return xe?($e=xe,u[$e]):ue?($e=ue,je=ve,je&&$.isAttributeValue?(H&&je=="="&&X("`&` did not start a character reference"),z):(H&&X("named character reference was not terminated by a semicolon"),i[$e]+(je||""))):oe?(se=oe,j=Ce,H&&!j&&X("character reference was not terminated by a semicolon"),K=parseInt(se,10),G(K,H)):Te?(Ee=Te,j=D,H&&!j&&X("character reference was not terminated by a semicolon"),K=parseInt(Ee,16),G(K,H)):(H&&X("named character reference was not terminated by a semicolon"),z)})};E.options={isAttributeValue:!1,strict:!1};var Ge=function(I){return I.replace(o,function($){return c[$]})},f={version:"1.2.0",encode:we,decode:E,escape:Ge,unescape:E};if(typeof define=="function"&&typeof define.amd=="object"&&define.amd)define(function(){return f});else if(y&&!y.nodeType)if(h)h.exports=f;else for(var W in f)Q(f,W)&&(y[W]=f[W]);else e.he=f})(pa)});var vn=et((ma,wn)=>{(function(e,y){typeof ma=="object"&&typeof wn!="undefined"?y(ma):typeof define=="function"&&define.amd?define(["exports"],y):y((e=typeof globalThis!="undefined"?globalThis:e||self).htmlEntitiesNotEmailFriendly={})})(ma,function(e){"use strict";let y=new Set(["AMP","Abreve","Acy","Afr","Amacr","And","Aogon","Aopf","ApplyFunction","Ascr","Assign","Backslash","Barv","Barwed","Bcy","Because","Bernoullis","Bfr","Bopf","Breve","Bscr","Bumpeq","CHcy","COPY","Cacute","Cap","CapitalDifferentialD","Cayleys","Ccaron","Ccirc","Cconint","Cdot","Cedilla","CenterDot","Cfr","CircleDot","CircleMinus","CirclePlus","CircleTimes","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","Colon","Colone","Congruent","Conint","ContourIntegral","Copf","Coproduct","CounterClockwiseContourIntegral","Cross","Cscr","Cup","CupCap","DD","DDotrahd","DJcy","DScy","DZcy","Darr","Dashv","Dcaron","Dcy","Del","Dfr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","Diamond","DifferentialD","Dopf","Dot","DotDot","DotEqual","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","DownArrowBar","DownArrowUpArrow","DownBreve","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","Downarrow","Dscr","Dstrok","ENG","Ecaron","Ecy","Edot","Efr","Element","Emacr","EmptySmallSquare","EmptyVerySmallSquare","Eogon","Eopf","Equal","EqualTilde","Equilibrium","Escr","Esim","Exists","ExponentialE","Fcy","Ffr","FilledSmallSquare","FilledVerySmallSquare","Fopf","ForAll","Fouriertrf","Fscr","GJcy","GT","Gammad","Gbreve","Gcedil","Gcirc","Gcy","Gdot","Gfr","Gg","Gopf","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","Gt","HARDcy","Hacek","Hcirc","Hfr","HilbertSpace","Hopf","HorizontalLine","Hscr","Hstrok","HumpDownHump","HumpEqual","IEcy","IJlig","IOcy","Icy","Idot","Ifr","Im","Imacr","ImaginaryI","Implies","Int","Integral","Intersection","InvisibleComma","InvisibleTimes","Iogon","Iopf","Iscr","Itilde","Iukcy","Jcirc","Jcy","Jfr","Jopf","Jscr","Jsercy","Jukcy","KHcy","KJcy","Kcedil","Kcy","Kfr","Kopf","Kscr","LJcy","LT","Lacute","Lang","Laplacetrf","Larr","Lcaron","Lcedil","Lcy","LeftAngleBracket","LeftArrow","LeftArrowBar","LeftArrowRightArrow","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","LeftRightArrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","Leftarrow","Leftrightarrow","LessEqualGreater","LessFullEqual","LessGreater","LessLess","LessSlantEqual","LessTilde","Lfr","Ll","Lleftarrow","Lmidot","LongLeftArrow","LongLeftRightArrow","LongRightArrow","Longleftarrow","Longleftrightarrow","Longrightarrow","Lopf","LowerLeftArrow","LowerRightArrow","Lscr","Lsh","Lstrok","Lt","Map","Mcy","MediumSpace","Mellintrf","Mfr","MinusPlus","Mopf","Mscr","NJcy","Nacute","Ncaron","Ncedil","Ncy","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","NestedGreaterGreater","NestedLessLess","Nfr","NoBreak","NonBreakingSpace","Nopf","Not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","Nscr","Ocy","Odblac","Ofr","Omacr","Oopf","OpenCurlyDoubleQuote","OpenCurlyQuote","Or","Oscr","Otimes","OverBar","OverBrace","OverBracket","OverParenthesis","PartialD","Pcy","Pfr","PlusMinus","Poincareplane","Popf","Pr","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","Product","Proportion","Proportional","Pscr","QUOT","Qfr","Qopf","Qscr","RBarr","REG","Racute","Rang","Rarr","Rarrtl","Rcaron","Rcedil","Rcy","Re","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","Rfr","RightAngleBracket","RightArrow","RightArrowBar","RightArrowLeftArrow","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","RightTee","RightTeeArrow","RightTeeVector","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","Rightarrow","Ropf","RoundImplies","Rrightarrow","Rscr","Rsh","RuleDelayed","SHCHcy","SHcy","SOFTcy","Sacute","Sc","Scedil","Scirc","Scy","Sfr","ShortDownArrow","ShortLeftArrow","ShortRightArrow","ShortUpArrow","SmallCircle","Sopf","Sqrt","Square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","Sscr","Star","Sub","Subset","SubsetEqual","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","SuchThat","Sum","Sup","Superset","SupersetEqual","Supset","TRADE","TSHcy","TScy","Tab","Tcaron","Tcedil","Tcy","Tfr","Therefore","ThickSpace","ThinSpace","Tilde","TildeEqual","TildeFullEqual","TildeTilde","Topf","TripleDot","Tscr","Tstrok","Uarr","Uarrocir","Ubrcy","Ubreve","Ucy","Udblac","Ufr","Umacr","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","Uopf","UpArrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","UpEquilibrium","UpTee","UpTeeArrow","Uparrow","Updownarrow","UpperLeftArrow","UpperRightArrow","Upsi","Uring","Uscr","Utilde","VDash","Vbar","Vcy","Vdash","Vdashl","Vee","Verbar","Vert","VerticalBar","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","Vopf","Vscr","Vvdash","Wcirc","Wedge","Wfr","Wopf","Wscr","Xfr","Xopf","Xscr","YAcy","YIcy","YUcy","Ycirc","Ycy","Yfr","Yopf","Yscr","ZHcy","Zacute","Zcaron","Zcy","Zdot","ZeroWidthSpace","Zfr","Zopf","Zscr","abreve","ac","acE","acd","acy","af","afr","aleph","amacr","amalg","andand","andd","andslope","andv","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","aogon","aopf","ap","apE","apacir","ape","apid","approx","approxeq","ascr","asympeq","awconint","awint","bNot","backcong","backepsilon","backprime","backsim","backsimeq","barvee","barwed","barwedge","bbrk","bbrktbrk","bcong","bcy","becaus","because","bemptyv","bepsi","bernou","beth","between","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bnot","bopf","bot","bottom","bowtie","boxDL","boxDR","boxDl","boxDr","boxH","boxHD","boxHU","boxHd","boxHu","boxUL","boxUR","boxUl","boxUr","boxV","boxVH","boxVL","boxVR","boxVh","boxVl","boxVr","boxbox","boxdL","boxdR","boxdl","boxdr","boxh","boxhD","boxhU","boxhd","boxhu","boxminus","boxplus","boxtimes","boxuL","boxuR","boxul","boxur","boxv","boxvH","boxvL","boxvR","boxvh","boxvl","boxvr","bprime","breve","bscr","bsemi","bsim","bsime","bsolb","bsolhsub","bullet","bump","bumpE","bumpe","bumpeq","cacute","capand","capbrcup","capcap","capcup","capdot","caps","caret","caron","ccaps","ccaron","ccirc","ccups","ccupssm","cdot","cemptyv","centerdot","cfr","chcy","check","checkmark","cir","cirE","circeq","circlearrowleft","circlearrowright","circledR","circledS","circledast","circledcirc","circleddash","cire","cirfnint","cirmid","cirscir","clubsuit","colone","coloneq","comp","compfn","complement","complexes","congdot","conint","copf","coprod","copysr","cross","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cupbrcap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","dHar","daleth","dash","dashv","dbkarow","dblac","dcaron","dcy","dd","ddagger","ddarr","ddotseq","demptyv","dfisht","dfr","dharl","dharr","diam","diamond","diamondsuit","die","digamma","disin","div","divideontimes","divonx","djcy","dlcorn","dlcrop","dopf","dot","doteq","doteqdot","dotminus","dotplus","dotsquare","doublebarwedge","downarrow","downdownarrows","downharpoonleft","downharpoonright","drbkarow","drcorn","drcrop","dscr","dscy","dsol","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","dzcy","dzigrarr","eDDot","eDot","easter","ecaron","ecir","ecolon","ecy","edot","ee","efDot","efr","eg","egs","egsdot","el","elinters","ell","els","elsdot","emacr","emptyset","emptyv","emsp13","emsp14","eng","eogon","eopf","epar","eparsl","eplus","epsi","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","equest","equivDD","eqvparsl","erDot","erarr","escr","esdot","esim","expectation","exponentiale","fallingdotseq","fcy","female","ffilig","fflig","ffllig","ffr","filig","flat","fllig","fltns","fopf","fork","forkv","fpartint","frac13","frac15","frac16","frac18","frac23","frac25","frac35","frac38","frac45","frac56","frac58","frac78","frown","fscr","gE","gEl","gacute","gammad","gap","gbreve","gcirc","gcy","gdot","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","gfr","gg","ggg","gimel","gjcy","gl","glE","gla","glj","gnE","gnap","gnapprox","gne","gneq","gneqq","gnsim","gopf","grave","gscr","gsim","gsime","gsiml","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","hairsp","half","hamilt","hardcy","harrcir","harrw","hbar","hcirc","heartsuit","hercon","hfr","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","hopf","horbar","hscr","hslash","hstrok","hybull","hyphen","ic","icy","iecy","iff","ifr","ii","iiiint","iiint","iinfin","iiota","ijlig","imacr","imagline","imagpart","imath","imof","imped","in","incare","infintie","inodot","intcal","integers","intercal","intlarhk","intprod","iocy","iogon","iopf","iprod","iscr","isinE","isindot","isins","isinsv","isinv","it","itilde","iukcy","jcirc","jcy","jfr","jmath","jopf","jscr","jsercy","jukcy","kappav","kcedil","kcy","kfr","kgreen","khcy","kjcy","kopf","kscr","lAarr","lAtail","lBarr","lE","lEg","lHar","lacute","laemptyv","lagran","langd","langle","lap","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","late","lates","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","lcaron","lcedil","lcub","lcy","ldca","ldquor","ldrdhar","ldrushar","ldsh","leftarrow","leftarrowtail","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leftthreetimes","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","lessgtr","lesssim","lfisht","lfr","lg","lgE","lhard","lharu","lharul","lhblk","ljcy","ll","llarr","llcorner","llhard","lltri","lmidot","lmoust","lmoustache","lnE","lnap","lnapprox","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lopar","lopf","loplus","lotimes","lozenge","lozf","lparlt","lrarr","lrcorner","lrhar","lrhard","lrtri","lscr","lsh","lsim","lsime","lsimg","lsquor","lstrok","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltrPar","ltri","ltrie","ltrif","lurdshar","luruhar","lvertneqq","lvnE","mDDot","male","malt","maltese","map","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","mcy","measuredangle","mfr","mho","mid","midcir","minusb","minusd","minusdu","mlcp","mldr","mnplus","models","mopf","mp","mscr","mstpos","multimap","mumap","nGg","nGt","nGtv","nLeftarrow","nLeftrightarrow","nLl","nLt","nLtv","nRightarrow","nVDash","nVdash","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbump","nbumpe","ncap","ncaron","ncedil","ncong","ncongdot","ncup","ncy","neArr","nearhk","nearr","nearrow","nedot","nequiv","nesear","nesim","nexist","nexists","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","ngsim","ngt","ngtr","nhArr","nharr","nhpar","nis","nisd","niv","njcy","nlArr","nlE","nlarr","nldr","nle","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nlsim","nlt","nltri","nltrie","nmid","nopf","notinE","notindot","notinva","notinvb","notinvc","notni","notniva","notnivb","notnivc","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","numero","numsp","nvDash","nvHarr","nvap","nvdash","nvge","nvgt","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwArr","nwarhk","nwarr","nwarrow","nwnear","oS","oast","ocir","ocy","odash","odblac","odiv","odot","odsold","ofcir","ofr","ogon","ogt","ohbar","ohm","oint","olarr","olcir","olcross","olt","omacr","omid","ominus","oopf","opar","operp","orarr","ord","order","orderof","origof","oror","orslope","orv","oscr","osol","otimesas","ovbar","par","parallel","parsim","parsl","pcy","pertenk","pfr","phiv","phmmat","phone","pitchfork","planck","planckh","plankv","plusacir","plusb","pluscir","plusdo","plusdu","pluse","plussim","plustwo","pm","pointint","popf","pr","prE","prap","prcue","pre","prec","precapprox","preccurlyeq","preceq","precnapprox","precneqq","precnsim","precsim","primes","prnE","prnap","prnsim","profalar","profline","profsurf","propto","prsim","prurel","pscr","puncsp","qfr","qint","qopf","qprime","qscr","quaternions","quatint","questeq","rAarr","rAtail","rBarr","rHar","race","racute","raemptyv","rangd","range","rangle","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","rarrw","ratail","ratio","rationals","rbarr","rbbrk","rbrke","rbrksld","rbrkslu","rcaron","rcedil","rcy","rdca","rdldhar","rdquor","rdsh","realine","realpart","reals","rect","rfisht","rfr","rhard","rharu","rharul","rhov","rightarrow","rightarrowtail","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","rightthreetimes","ring","risingdotseq","rlarr","rlhar","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","ropf","roplus","rotimes","rpargt","rppolint","rrarr","rscr","rsh","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","ruluhar","rx","sacute","sc","scE","scap","sccue","sce","scedil","scirc","scnE","scnap","scnsim","scpolint","scsim","scy","sdotb","sdote","seArr","searhk","searr","searrow","seswar","setminus","setmn","sext","sfr","sfrown","sharp","shchcy","shcy","shortmid","shortparallel","sigmav","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","softcy","solb","solbar","sopf","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","squarf","squf","srarr","sscr","ssetmn","ssmile","sstarf","star","starf","straightepsilon","straightphi","strns","subE","subdot","subedot","submult","subnE","subne","subplus","subrarr","subset","subseteq","subseteqq","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","succeq","succnapprox","succneqq","succnsim","succsim","sung","supE","supdot","supdsub","supedot","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swArr","swarhk","swarr","swarrow","swnwar","target","tbrk","tcaron","tcedil","tcy","tdot","telrec","tfr","therefore","thetav","thickapprox","thicksim","thkap","thksim","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","topf","topfork","tosa","tprime","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","triplus","trisb","tritime","trpezium","tscr","tscy","tshcy","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","uHar","ubrcy","ubreve","ucy","udarr","udblac","udhar","ufisht","ufr","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","umacr","uogon","uopf","uparrow","updownarrow","upharpoonleft","upharpoonright","uplus","upsi","upuparrows","urcorn","urcorner","urcrop","uring","urtri","uscr","utdot","utilde","utri","utrif","uuarr","uwangle","vArr","vBar","vBarv","vDash","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","vcy","vdash","vee","veebar","veeeq","vellip","vfr","vltri","vnsub","vnsup","vopf","vprop","vrtri","vscr","vsubnE","vsubne","vsupnE","vsupne","vzigzag","wcirc","wedbar","wedge","wedgeq","wfr","wopf","wp","wr","wreath","wscr","xcap","xcirc","xcup","xdtri","xfr","xhArr","xharr","xlArr","xlarr","xmap","xnis","xodot","xopf","xoplus","xotime","xrArr","xrarr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","yacy","ycirc","ycy","yfr","yicy","yopf","yscr","yucy","zacute","zcaron","zcy","zdot","zeetrf","zfr","zhcy","zigrarr","zopf","zscr"]),h=new Set(["abreve","ac","acd","ace","acy","af","afr","aleph","amacr","amalg","amp","and","andand","andd","andslope","andv","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","aogon","aopf","ap","apacir","ape","apid","applyfunction","approx","approxeq","ascr","assign","asympeq","awconint","awint","backcong","backepsilon","backprime","backsim","backsimeq","backslash","barv","barvee","barwed","barwedge","bbrk","bbrktbrk","bcong","bcy","becaus","because","bemptyv","bepsi","bernou","bernoullis","beth","between","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bnot","bopf","bot","bottom","bowtie","boxbox","boxdl","boxdr","boxh","boxhd","boxhu","boxminus","boxplus","boxtimes","boxul","boxur","boxv","boxvh","boxvl","boxvr","bprime","breve","bscr","bsemi","bsim","bsime","bsolb","bsolhsub","bullet","bump","bumpe","bumpeq","cacute","cap","capand","capbrcup","capcap","capcup","capdot","capitaldifferentiald","caps","caret","caron","cayleys","ccaps","ccaron","ccirc","cconint","ccups","ccupssm","cdot","cedilla","cemptyv","centerdot","cfr","chcy","check","checkmark","cir","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","circledot","circledr","circleds","circleminus","circleplus","circletimes","cire","cirfnint","cirmid","cirscir","clockwisecontourintegral","closecurlydoublequote","closecurlyquote","clubsuit","colon","colone","coloneq","comp","compfn","complement","complexes","congdot","congruent","conint","contourintegral","copf","coprod","coproduct","copy","copysr","counterclockwisecontourintegral","cross","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","cupbrcap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","daleth","darr","dash","dashv","dbkarow","dblac","dcaron","dcy","dd","ddagger","ddarr","ddotrahd","ddotseq","del","demptyv","dfisht","dfr","dhar","dharl","dharr","diacriticalacute","diacriticaldot","diacriticaldoubleacute","diacriticalgrave","diacriticaltilde","diam","diamond","diamondsuit","die","differentiald","digamma","disin","div","divideontimes","divonx","djcy","dlcorn","dlcrop","dopf","dot","dotdot","doteq","doteqdot","dotequal","dotminus","dotplus","dotsquare","doublebarwedge","doublecontourintegral","doubledot","doubledownarrow","doubleleftarrow","doubleleftrightarrow","doublelefttee","doublelongleftarrow","doublelongleftrightarrow","doublelongrightarrow","doublerightarrow","doublerighttee","doubleuparrow","doubleupdownarrow","doubleverticalbar","downarrow","downarrowbar","downarrowuparrow","downbreve","downdownarrows","downharpoonleft","downharpoonright","downleftrightvector","downleftteevector","downleftvector","downleftvectorbar","downrightteevector","downrightvector","downrightvectorbar","downtee","downteearrow","drbkarow","drcorn","drcrop","dscr","dscy","dsol","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","dzcy","dzigrarr","easter","ecaron","ecir","ecolon","ecy","eddot","edot","ee","efdot","efr","eg","egs","egsdot","el","element","elinters","ell","els","elsdot","emacr","emptyset","emptysmallsquare","emptyv","emptyverysmallsquare","emsp13","emsp14","eng","eogon","eopf","epar","eparsl","eplus","epsi","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","equal","equaltilde","equest","equilibrium","equivdd","eqvparsl","erarr","erdot","escr","esdot","esim","exists","expectation","exponentiale","fallingdotseq","fcy","female","ffilig","fflig","ffllig","ffr","filig","filledsmallsquare","filledverysmallsquare","flat","fllig","fltns","fopf","forall","fork","forkv","fouriertrf","fpartint","frac13","frac15","frac16","frac18","frac23","frac25","frac35","frac38","frac45","frac56","frac58","frac78","frown","fscr","gacute","gammad","gap","gbreve","gcedil","gcirc","gcy","gdot","ge","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","gfr","gg","ggg","gimel","gjcy","gl","gla","gle","glj","gnap","gnapprox","gne","gneq","gneqq","gnsim","gopf","grave","greaterequal","greaterequalless","greaterfullequal","greatergreater","greaterless","greaterslantequal","greatertilde","gscr","gsim","gsime","gsiml","gt","gtcc","gtcir","gtdot","gtlpar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvne","hacek","hairsp","half","hamilt","hardcy","harrcir","harrw","hbar","hcirc","heartsuit","hercon","hfr","hilbertspace","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","hopf","horbar","horizontalline","hscr","hslash","hstrok","humpdownhump","humpequal","hybull","hyphen","ic","icy","idot","iecy","iff","ifr","ii","iiiint","iiint","iinfin","iiota","ijlig","im","imacr","imaginaryi","imagline","imagpart","imath","imof","imped","implies","in","incare","infintie","inodot","int","intcal","integers","integral","intercal","intersection","intlarhk","intprod","invisiblecomma","invisibletimes","iocy","iogon","iopf","iprod","iscr","isindot","isine","isins","isinsv","isinv","it","itilde","iukcy","jcirc","jcy","jfr","jmath","jopf","jscr","jsercy","jukcy","kappav","kcedil","kcy","kfr","kgreen","khcy","kjcy","kopf","kscr","laarr","lacute","laemptyv","lagran","lang","langd","langle","lap","laplacetrf","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","late","lates","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","lcaron","lcedil","lcub","lcy","ldca","ldquor","ldrdhar","ldrushar","ldsh","le","leftanglebracket","leftarrow","leftarrowbar","leftarrowrightarrow","leftarrowtail","leftceiling","leftdoublebracket","leftdownteevector","leftdownvector","leftdownvectorbar","leftfloor","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leftrightvector","lefttee","leftteearrow","leftteevector","leftthreetimes","lefttriangle","lefttrianglebar","lefttriangleequal","leftupdownvector","leftupteevector","leftupvector","leftupvectorbar","leftvector","leftvectorbar","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","lessequalgreater","lessfullequal","lessgreater","lessgtr","lessless","lesssim","lessslantequal","lesstilde","lfisht","lfr","lg","lge","lhar","lhard","lharu","lharul","lhblk","ljcy","ll","llarr","llcorner","lleftarrow","llhard","lltri","lmidot","lmoust","lmoustache","lnap","lnapprox","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lopar","lopf","loplus","lotimes","lowerleftarrow","lowerrightarrow","lozenge","lozf","lparlt","lrarr","lrcorner","lrhar","lrhard","lrtri","lscr","lsh","lsim","lsime","lsimg","lsquor","lstrok","lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrpar","lurdshar","luruhar","lvertneqq","lvne","male","malt","maltese","map","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","mcy","mddot","measuredangle","mediumspace","mellintrf","mfr","mho","mid","midcir","minusb","minusd","minusdu","minusplus","mlcp","mldr","mnplus","models","mopf","mp","mscr","mstpos","multimap","mumap","nacute","nang","nap","nape","napid","napos","napprox","natur","natural","naturals","nbump","nbumpe","ncap","ncaron","ncedil","ncong","ncongdot","ncup","ncy","nearhk","nearr","nearrow","nedot","negativemediumspace","negativethickspace","negativethinspace","negativeverythinspace","nequiv","nesear","nesim","nestedgreatergreater","nestedlessless","nexist","nexists","nfr","nge","ngeq","ngeqq","ngeqslant","nges","ngg","ngsim","ngt","ngtr","ngtv","nharr","nhpar","nis","nisd","niv","njcy","nlarr","nldr","nle","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nll","nlsim","nlt","nltri","nltrie","nltv","nmid","nobreak","nonbreakingspace","nopf","not","notcongruent","notcupcap","notdoubleverticalbar","notelement","notequal","notequaltilde","notexists","notgreater","notgreaterequal","notgreaterfullequal","notgreatergreater","notgreaterless","notgreaterslantequal","notgreatertilde","nothumpdownhump","nothumpequal","notindot","notine","notinva","notinvb","notinvc","notlefttriangle","notlefttrianglebar","notlefttriangleequal","notless","notlessequal","notlessgreater","notlessless","notlessslantequal","notlesstilde","notnestedgreatergreater","notnestedlessless","notni","notniva","notnivb","notnivc","notprecedes","notprecedesequal","notprecedesslantequal","notreverseelement","notrighttriangle","notrighttrianglebar","notrighttriangleequal","notsquaresubset","notsquaresubsetequal","notsquaresuperset","notsquaresupersetequal","notsubset","notsubsetequal","notsucceeds","notsucceedsequal","notsucceedsslantequal","notsucceedstilde","notsuperset","notsupersetequal","nottilde","nottildeequal","nottildefullequal","nottildetilde","notverticalbar","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrarr","nrarrc","nrarrw","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","numero","numsp","nvap","nvdash","nvge","nvgt","nvharr","nvinfin","nvlarr","nvle","nvlt","nvltrie","nvrarr","nvrtrie","nvsim","nwarhk","nwarr","nwarrow","nwnear","oast","ocir","ocy","odash","odblac","odiv","odot","odsold","ofcir","ofr","ogon","ogt","ohbar","ohm","oint","olarr","olcir","olcross","olt","omacr","omid","ominus","oopf","opar","opencurlydoublequote","opencurlyquote","operp","or","orarr","ord","order","orderof","origof","oror","orslope","orv","os","oscr","osol","otimes","otimesas","ovbar","overbar","overbrace","overbracket","overparenthesis","par","parallel","parsim","parsl","partiald","pcy","pertenk","pfr","phiv","phmmat","phone","pitchfork","planck","planckh","plankv","plusacir","plusb","pluscir","plusdo","plusdu","pluse","plusminus","plussim","plustwo","pm","poincareplane","pointint","popf","pr","prap","prcue","pre","prec","precapprox","preccurlyeq","precedes","precedesequal","precedesslantequal","precedestilde","preceq","precnapprox","precneqq","precnsim","precsim","primes","prnap","prne","prnsim","product","profalar","profline","profsurf","proportion","proportional","propto","prsim","prurel","pscr","puncsp","qfr","qint","qopf","qprime","qscr","quaternions","quatint","questeq","quot","raarr","race","racute","raemptyv","rang","rangd","range","rangle","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","rarrw","ratail","ratio","rationals","rbarr","rbbrk","rbrke","rbrksld","rbrkslu","rcaron","rcedil","rcy","rdca","rdldhar","rdquor","rdsh","re","realine","realpart","reals","rect","reg","reverseelement","reverseequilibrium","reverseupequilibrium","rfisht","rfr","rhar","rhard","rharu","rharul","rhov","rightanglebracket","rightarrow","rightarrowbar","rightarrowleftarrow","rightarrowtail","rightceiling","rightdoublebracket","rightdownteevector","rightdownvector","rightdownvectorbar","rightfloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","righttee","rightteearrow","rightteevector","rightthreetimes","righttriangle","righttrianglebar","righttriangleequal","rightupdownvector","rightupteevector","rightupvector","rightupvectorbar","rightvector","rightvectorbar","ring","risingdotseq","rlarr","rlhar","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","ropf","roplus","rotimes","roundimplies","rpargt","rppolint","rrarr","rrightarrow","rscr","rsh","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","ruledelayed","ruluhar","rx","sacute","sc","scap","sccue","sce","scedil","scirc","scnap","scne","scnsim","scpolint","scsim","scy","sdotb","sdote","searhk","searr","searrow","seswar","setminus","setmn","sext","sfr","sfrown","sharp","shchcy","shcy","shortdownarrow","shortleftarrow","shortmid","shortparallel","shortrightarrow","shortuparrow","sigmav","simdot","sime","simeq","simg","simge","siml","simle","simne","simplus","simrarr","slarr","smallcircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","softcy","solb","solbar","sopf","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","squareintersection","squaresubset","squaresubsetequal","squaresuperset","squaresupersetequal","squareunion","squarf","squf","srarr","sscr","ssetmn","ssmile","sstarf","star","starf","straightepsilon","straightphi","strns","sub","subdot","sube","subedot","submult","subne","subplus","subrarr","subset","subseteq","subseteqq","subsetequal","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","succeeds","succeedsequal","succeedsslantequal","succeedstilde","succeq","succnapprox","succneqq","succnsim","succsim","suchthat","sum","sung","sup","supdot","supdsub","supe","supedot","superset","supersetequal","suphsol","suphsub","suplarr","supmult","supne","supplus","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swarhk","swarr","swarrow","swnwar","tab","target","tbrk","tcaron","tcedil","tcy","tdot","telrec","tfr","therefore","thetav","thickapprox","thicksim","thickspace","thinspace","thkap","thksim","tilde","tildeequal","tildefullequal","tildetilde","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","topf","topfork","tosa","tprime","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","tripledot","triplus","trisb","tritime","trpezium","tscr","tscy","tshcy","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","uarr","uarrocir","ubrcy","ubreve","ucy","udarr","udblac","udhar","ufisht","ufr","uhar","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","umacr","underbrace","underbracket","underparenthesis","union","unionplus","uogon","uopf","uparrow","uparrowbar","uparrowdownarrow","updownarrow","upequilibrium","upharpoonleft","upharpoonright","uplus","upperleftarrow","upperrightarrow","upsi","uptee","upteearrow","upuparrows","urcorn","urcorner","urcrop","uring","urtri","uscr","utdot","utilde","utri","utrif","uuarr","uwangle","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","vbar","vbarv","vcy","vdash","vdashl","vee","veebar","veeeq","vellip","verbar","vert","verticalbar","verticalseparator","verticaltilde","verythinspace","vfr","vltri","vnsub","vnsup","vopf","vprop","vrtri","vscr","vsubne","vsupne","vvdash","vzigzag","wcirc","wedbar","wedge","wedgeq","wfr","wopf","wp","wr","wreath","wscr","xcap","xcirc","xcup","xdtri","xfr","xharr","xlarr","xmap","xnis","xodot","xopf","xoplus","xotime","xrarr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","yacy","ycirc","ycy","yfr","yicy","yopf","yscr","yucy","zacute","zcaron","zcy","zdot","zeetrf","zerowidthspace","zfr","zhcy","zigrarr","zopf","zscr"]);e.notEmailFriendly={AMP:"amp",Abreve:"#x102",Acy:"#x410",Afr:"#x1D504",Amacr:"#x100",And:"#x2A53",Aogon:"#x104",Aopf:"#x1D538",ApplyFunction:"#x2061",Ascr:"#x1D49C",Assign:"#x2254",Backslash:"#x2216",Barv:"#x2AE7",Barwed:"#x2306",Bcy:"#x411",Because:"#x2235",Bernoullis:"#x212C",Bfr:"#x1D505",Bopf:"#x1D539",Breve:"#x2D8",Bscr:"#x212C",Bumpeq:"#x224E",CHcy:"#x427",COPY:"copy",Cacute:"#x106",Cap:"#x22D2",CapitalDifferentialD:"#x2145",Cayleys:"#x212D",Ccaron:"#x10C",Ccirc:"#x108",Cconint:"#x2230",Cdot:"#x10A",Cedilla:"cedil",CenterDot:"middot",Cfr:"#x212D",CircleDot:"#x2299",CircleMinus:"#x2296",CirclePlus:"oplus",CircleTimes:"otimes",ClockwiseContourIntegral:"#x2232",CloseCurlyDoubleQuote:"rdquo",CloseCurlyQuote:"rsquo",Colon:"#x2237",Colone:"#x2A74",Congruent:"equiv",Conint:"#x222F",ContourIntegral:"#x222E",Copf:"#x2102",Coproduct:"#x2210",CounterClockwiseContourIntegral:"#x2233",Cross:"#x2A2F",Cscr:"#x1D49E",Cup:"#x22D3",CupCap:"#x224D",DD:"#x2145",DDotrahd:"#x2911",DJcy:"#x402",DScy:"#x405",DZcy:"#x40F",Darr:"#x21A1",Dashv:"#x2AE4",Dcaron:"#x10E",Dcy:"#x414",Del:"#x2207",Dfr:"#x1D507",DiacriticalAcute:"acute",DiacriticalDot:"#x2D9",DiacriticalDoubleAcute:"#x2DD",DiacriticalGrave:"#x60",DiacriticalTilde:"tilde",Diamond:"#x22C4",DifferentialD:"#x2146",Dopf:"#x1D53B",Dot:"#xA8",DotDot:"#x20DC",DotEqual:"#x2250",DoubleContourIntegral:"#x222F",DoubleDot:"#xA8",DoubleDownArrow:"dArr",DoubleLeftArrow:"lArr",DoubleLeftRightArrow:"#x21D4",DoubleLeftTee:"#x2AE4",DoubleLongLeftArrow:"#x27F8",DoubleLongLeftRightArrow:"#x27FA",DoubleLongRightArrow:"#x27F9",DoubleRightArrow:"rArr",DoubleRightTee:"#x22A8",DoubleUpArrow:"uArr",DoubleUpDownArrow:"#x21D5",DoubleVerticalBar:"#x2225",DownArrow:"darr",DownArrowBar:"#x2913",DownArrowUpArrow:"#x21F5",DownBreve:"#x311",DownLeftRightVector:"#x2950",DownLeftTeeVector:"#x295E",DownLeftVector:"#x21BD",DownLeftVectorBar:"#x2956",DownRightTeeVector:"#x295F",DownRightVector:"#x21C1",DownRightVectorBar:"#x2957",DownTee:"#x22A4",DownTeeArrow:"#x21A7",Downarrow:"dArr",Dscr:"#x1D49F",Dstrok:"#x110",ENG:"#x14A",Ecaron:"#x11A",Ecy:"#x42D",Edot:"#x116",Efr:"#x1D508",Element:"#x2208",Emacr:"#x112",EmptySmallSquare:"#x25FB",EmptyVerySmallSquare:"#x25AB",Eogon:"#x118",Eopf:"#x1D53C",Equal:"#x2A75",EqualTilde:"#x2242",Equilibrium:"#x21CC",Escr:"#x2130",Esim:"#x2A73",Exists:"exist",ExponentialE:"#x2147",Fcy:"#x424",Ffr:"#x1D509",FilledSmallSquare:"#x25FC",FilledVerySmallSquare:"#x25AA",Fopf:"#x1D53D",ForAll:"forall",Fouriertrf:"#x2131",Fscr:"#x2131",GJcy:"#x403",GT:"gt",Gammad:"#x3DC",Gbreve:"#x11E",Gcedil:"#x122",Gcirc:"#x11C",Gcy:"#x413",Gdot:"#x120",Gfr:"#x1D50A",Gg:"#x22D9",Gopf:"#x1D53E",GreaterEqual:"ge",GreaterEqualLess:"#x22DB",GreaterFullEqual:"#x2267",GreaterGreater:"#x2AA2",GreaterLess:"#x2277",GreaterSlantEqual:"#x2A7E",GreaterTilde:"#x2273",Gscr:"#x1D4A2",Gt:"#x226B",HARDcy:"#x42A",Hacek:"#x2C7",Hcirc:"#x124",Hfr:"#x210C",HilbertSpace:"#x210B",Hopf:"#x210D",HorizontalLine:"#x2500",Hscr:"#x210B",Hstrok:"#x126",HumpDownHump:"#x224E",HumpEqual:"#x224F",IEcy:"#x415",IJlig:"#x132",IOcy:"#x401",Icy:"#x418",Idot:"#x130",Ifr:"#x2111",Im:"#x2111",Imacr:"#x12A",ImaginaryI:"#x2148",Implies:"rArr",Int:"#x222C",Integral:"int",Intersection:"#x22C2",InvisibleComma:"#x2063",InvisibleTimes:"#x2062",Iogon:"#x12E",Iopf:"#x1D540",Iscr:"#x2110",Itilde:"#x128",Iukcy:"#x406",Jcirc:"#x134",Jcy:"#x419",Jfr:"#x1D50D",Jopf:"#x1D541",Jscr:"#x1D4A5",Jsercy:"#x408",Jukcy:"#x404",KHcy:"#x425",KJcy:"#x40C",Kcedil:"#x136",Kcy:"#x41A",Kfr:"#x1D50E",Kopf:"#x1D542",Kscr:"#x1D4A6",LJcy:"#x409",LT:"lt",Lacute:"#x139",Lang:"#x27EA",Laplacetrf:"#x2112",Larr:"#x219E",Lcaron:"#x13D",Lcedil:"#x13B",Lcy:"#x41B",LeftAngleBracket:"lang",LeftArrow:"larr",LeftArrowBar:"#x21E4",LeftArrowRightArrow:"#x21C6",LeftCeiling:"lceil",LeftDoubleBracket:"#x27E6",LeftDownTeeVector:"#x2961",LeftDownVector:"#x21C3",LeftDownVectorBar:"#x2959",LeftFloor:"lfloor",LeftRightArrow:"harr",LeftRightVector:"#x294E",LeftTee:"#x22A3",LeftTeeArrow:"#x21A4",LeftTeeVector:"#x295A",LeftTriangle:"#x22B2",LeftTriangleBar:"#x29CF",LeftTriangleEqual:"#x22B4",LeftUpDownVector:"#x2951",LeftUpTeeVector:"#x2960",LeftUpVector:"#x21BF",LeftUpVectorBar:"#x2958",LeftVector:"#x21BC",LeftVectorBar:"#x2952",Leftarrow:"lArr",Leftrightarrow:"#x21D4",LessEqualGreater:"#x22DA",LessFullEqual:"#x2266",LessGreater:"#x2276",LessLess:"#x2AA1",LessSlantEqual:"#x2A7D",LessTilde:"#x2272",Lfr:"#x1D50F",Ll:"#x22D8",Lleftarrow:"#x21DA",Lmidot:"#x13F",LongLeftArrow:"#x27F5",LongLeftRightArrow:"#x27F7",LongRightArrow:"#x27F6",Longleftarrow:"#x27F8",Longleftrightarrow:"#x27FA",Longrightarrow:"#x27F9",Lopf:"#x1D543",LowerLeftArrow:"#x2199",LowerRightArrow:"#x2198",Lscr:"#x2112",Lsh:"#x21B0",Lstrok:"#x141",Lt:"#x226A",Map:"#x2905",Mcy:"#x41C",MediumSpace:"#x205F",Mellintrf:"#x2133",Mfr:"#x1D510",MinusPlus:"#x2213",Mopf:"#x1D544",Mscr:"#x2133",NJcy:"#x40A",Nacute:"#x143",Ncaron:"#x147",Ncedil:"#x145",Ncy:"#x41D",NegativeMediumSpace:"#x200B",NegativeThickSpace:"#x200B",NegativeThinSpace:"#x200B",NegativeVeryThinSpace:"#x200B",NestedGreaterGreater:"#x226B",NestedLessLess:"#x226A",Nfr:"#x1D511",NoBreak:"#x2060",NonBreakingSpace:"nbsp",Nopf:"#x2115",Not:"#x2AEC",NotCongruent:"#x2262",NotCupCap:"#x226D",NotDoubleVerticalBar:"#x2226",NotElement:"notin",NotEqual:"ne",NotEqualTilde:"#x2242;&#x338",NotExists:"#x2204",NotGreater:"#x226F",NotGreaterEqual:"#x2271",NotGreaterFullEqual:"#x2267;&#x338",NotGreaterGreater:"#x226B;&#x338",NotGreaterLess:"#x2279",NotGreaterSlantEqual:"#x2A7E;&#x338",NotGreaterTilde:"#x2275",NotHumpDownHump:"#x224E;&#x338",NotHumpEqual:"#x224F;&#x338",NotLeftTriangle:"#x22EA",NotLeftTriangleBar:"#x29CF;&#x338",NotLeftTriangleEqual:"#x22EC",NotLess:"#x226E",NotLessEqual:"#x2270",NotLessGreater:"#x2278",NotLessLess:"#x226A;&#x338",NotLessSlantEqual:"#x2A7D;&#x338",NotLessTilde:"#x2274",NotNestedGreaterGreater:"#x2AA2;&#x338",NotNestedLessLess:"#x2AA1;&#x338",NotPrecedes:"#x2280",NotPrecedesEqual:"#x2AAF;&#x338",NotPrecedesSlantEqual:"#x22E0",NotReverseElement:"#x220C",NotRightTriangle:"#x22EB",NotRightTriangleBar:"#x29D0;&#x338",NotRightTriangleEqual:"#x22ED",NotSquareSubset:"#x228F;&#x338",NotSquareSubsetEqual:"#x22E2",NotSquareSuperset:"#x2290;&#x338",NotSquareSupersetEqual:"#x22E3",NotSubset:"#x2282;&#x20D2",NotSubsetEqual:"#x2288",NotSucceeds:"#x2281",NotSucceedsEqual:"#x2AB0;&#x338",NotSucceedsSlantEqual:"#x22E1",NotSucceedsTilde:"#x227F;&#x338",NotSuperset:"#x2283;&#x20D2",NotSupersetEqual:"#x2289",NotTilde:"#x2241",NotTildeEqual:"#x2244",NotTildeFullEqual:"#x2247",NotTildeTilde:"#x2249",NotVerticalBar:"#x2224",Nscr:"#x1D4A9",Ocy:"#x41E",Odblac:"#x150",Ofr:"#x1D512",Omacr:"#x14C",Oopf:"#x1D546",OpenCurlyDoubleQuote:"ldquo",OpenCurlyQuote:"lsquo",Or:"#x2A54",Oscr:"#x1D4AA",Otimes:"#x2A37",OverBar:"oline",OverBrace:"#x23DE",OverBracket:"#x23B4",OverParenthesis:"#x23DC",PartialD:"part",Pcy:"#x41F",Pfr:"#x1D513",PlusMinus:"#xB1",Poincareplane:"#x210C",Popf:"#x2119",Pr:"#x2ABB",Precedes:"#x227A",PrecedesEqual:"#x2AAF",PrecedesSlantEqual:"#x227C",PrecedesTilde:"#x227E",Product:"prod",Proportion:"#x2237",Proportional:"prop",Pscr:"#x1D4AB",QUOT:"quot",Qfr:"#x1D514",Qopf:"#x211A",Qscr:"#x1D4AC",RBarr:"#x2910",REG:"reg",Racute:"#x154",Rang:"#x27EB",Rarr:"#x21A0",Rarrtl:"#x2916",Rcaron:"#x158",Rcedil:"#x156",Rcy:"#x420",Re:"#x211C",ReverseElement:"ni",ReverseEquilibrium:"#x21CB",ReverseUpEquilibrium:"#x296F",Rfr:"#x211C",RightAngleBracket:"rang",RightArrow:"rarr",RightArrowBar:"#x21E5",RightArrowLeftArrow:"#x21C4",RightCeiling:"rceil",RightDoubleBracket:"#x27E7",RightDownTeeVector:"#x295D",RightDownVector:"#x21C2",RightDownVectorBar:"#x2955",RightFloor:"rfloor",RightTee:"#x22A2",RightTeeArrow:"#x21A6",RightTeeVector:"#x295B",RightTriangle:"#x22B3",RightTriangleBar:"#x29D0",RightTriangleEqual:"#x22B5",RightUpDownVector:"#x294F",RightUpTeeVector:"#x295C",RightUpVector:"#x21BE",RightUpVectorBar:"#x2954",RightVector:"#x21C0",RightVectorBar:"#x2953",Rightarrow:"rArr",Ropf:"#x211D",RoundImplies:"#x2970",Rrightarrow:"#x21DB",Rscr:"#x211B",Rsh:"#x21B1",RuleDelayed:"#x29F4",SHCHcy:"#x429",SHcy:"#x428",SOFTcy:"#x42C",Sacute:"#x15A",Sc:"#x2ABC",Scedil:"#x15E",Scirc:"#x15C",Scy:"#x421",Sfr:"#x1D516",ShortDownArrow:"darr",ShortLeftArrow:"larr",ShortRightArrow:"rarr",ShortUpArrow:"uarr",SmallCircle:"#x2218",Sopf:"#x1D54A",Sqrt:"#x221A",Square:"#x25A1",SquareIntersection:"#x2293",SquareSubset:"#x228F",SquareSubsetEqual:"#x2291",SquareSuperset:"#x2290",SquareSupersetEqual:"#x2292",SquareUnion:"#x2294",Sscr:"#x1D4AE",Star:"#x22C6",Sub:"#x22D0",Subset:"#x22D0",SubsetEqual:"sube",Succeeds:"#x227B",SucceedsEqual:"#x2AB0",SucceedsSlantEqual:"#x227D",SucceedsTilde:"#x227F",SuchThat:"ni",Sum:"sum",Sup:"#x22D1",Superset:"sup",SupersetEqual:"supe",Supset:"#x22D1",TRADE:"trade",TSHcy:"#x40B",TScy:"#x426",Tab:"#x9",Tcaron:"#x164",Tcedil:"#x162",Tcy:"#x422",Tfr:"#x1D517",Therefore:"there4",ThickSpace:"#x205F;&#x200A",ThinSpace:"thinsp",Tilde:"sim",TildeEqual:"#x2243",TildeFullEqual:"cong",TildeTilde:"#x2248",Topf:"#x1D54B",TripleDot:"#x20DB",Tscr:"#x1D4AF",Tstrok:"#x166",Uarr:"#x219F",Uarrocir:"#x2949",Ubrcy:"#x40E",Ubreve:"#x16C",Ucy:"#x423",Udblac:"#x170",Ufr:"#x1D518",Umacr:"#x16A",UnderBrace:"#x23DF",UnderBracket:"#x23B5",UnderParenthesis:"#x23DD",Union:"#x22C3",UnionPlus:"#x228E",Uogon:"#x172",Uopf:"#x1D54C",UpArrow:"uarr",UpArrowBar:"#x2912",UpArrowDownArrow:"#x21C5",UpDownArrow:"#x2195",UpEquilibrium:"#x296E",UpTee:"#x22A5",UpTeeArrow:"#x21A5",Uparrow:"uArr",Updownarrow:"#x21D5",UpperLeftArrow:"#x2196",UpperRightArrow:"#x2197",Upsi:"#x3D2",Uring:"#x16E",Uscr:"#x1D4B0",Utilde:"#x168",VDash:"#x22AB",Vbar:"#x2AEB",Vcy:"#x412",Vdash:"#x22A9",Vdashl:"#x2AE6",Vee:"#x22C1",Verbar:"#x2016",Vert:"#x2016",VerticalBar:"#x2223",VerticalSeparator:"#x2758",VerticalTilde:"#x2240",VeryThinSpace:"#x200A",Vfr:"#x1D519",Vopf:"#x1D54D",Vscr:"#x1D4B1",Vvdash:"#x22AA",Wcirc:"#x174",Wedge:"#x22C0",Wfr:"#x1D51A",Wopf:"#x1D54E",Wscr:"#x1D4B2",Xfr:"#x1D51B",Xopf:"#x1D54F",Xscr:"#x1D4B3",YAcy:"#x42F",YIcy:"#x407",YUcy:"#x42E",Ycirc:"#x176",Ycy:"#x42B",Yfr:"#x1D51C",Yopf:"#x1D550",Yscr:"#x1D4B4",ZHcy:"#x416",Zacute:"#x179",Zcaron:"#x17D",Zcy:"#x417",Zdot:"#x17B",ZeroWidthSpace:"#x200B",Zfr:"#x2128",Zopf:"#x2124",Zscr:"#x1D4B5",abreve:"#x103",ac:"#x223E",acE:"#x223E;&#x333",acd:"#x223F",acy:"#x430",af:"#x2061",afr:"#x1D51E",aleph:"#x2135",amacr:"#x101",amalg:"#x2A3F",andand:"#x2A55",andd:"#x2A5C",andslope:"#x2A58",andv:"#x2A5A",ange:"#x29A4",angle:"ang",angmsd:"#x2221",angmsdaa:"#x29A8",angmsdab:"#x29A9",angmsdac:"#x29AA",angmsdad:"#x29AB",angmsdae:"#x29AC",angmsdaf:"#x29AD",angmsdag:"#x29AE",angmsdah:"#x29AF",angrt:"#x221F",angrtvb:"#x22BE",angrtvbd:"#x299D",angsph:"#x2222",angst:"#xC5",angzarr:"#x237C",aogon:"#x105",aopf:"#x1D552",ap:"#x2248",apE:"#x2A70",apacir:"#x2A6F",ape:"#x224A",apid:"#x224B",approx:"#x2248",approxeq:"#x224A",ascr:"#x1D4B6",asympeq:"#x224D",awconint:"#x2233",awint:"#x2A11",bNot:"#x2AED",backcong:"#x224C",backepsilon:"#x3F6",backprime:"#x2035",backsim:"#x223D",backsimeq:"#x22CD",barvee:"#x22BD",barwed:"#x2305",barwedge:"#x2305",bbrk:"#x23B5",bbrktbrk:"#x23B6",bcong:"#x224C",bcy:"#x431",becaus:"#x2235",because:"#x2235",bemptyv:"#x29B0",bepsi:"#x3F6",bernou:"#x212C",beth:"#x2136",between:"#x226C",bfr:"#x1D51F",bigcap:"#x22C2",bigcirc:"#x25EF",bigcup:"#x22C3",bigodot:"#x2A00",bigoplus:"#x2A01",bigotimes:"#x2A02",bigsqcup:"#x2A06",bigstar:"#x2605",bigtriangledown:"#x25BD",bigtriangleup:"#x25B3",biguplus:"#x2A04",bigvee:"#x22C1",bigwedge:"#x22C0",bkarow:"#x290D",blacklozenge:"#x29EB",blacksquare:"#x25AA",blacktriangle:"#x25B4",blacktriangledown:"#x25BE",blacktriangleleft:"#x25C2",blacktriangleright:"#x25B8",blank:"#x2423",blk12:"#x2592",blk14:"#x2591",blk34:"#x2593",block:"#x2588",bne:"&#x20E5",bnequiv:"#x2261;&#x20E5",bnot:"#x2310",bopf:"#x1D553",bot:"#x22A5",bottom:"#x22A5",bowtie:"#x22C8",boxDL:"#x2557",boxDR:"#x2554",boxDl:"#x2556",boxDr:"#x2553",boxH:"#x2550",boxHD:"#x2566",boxHU:"#x2569",boxHd:"#x2564",boxHu:"#x2567",boxUL:"#x255D",boxUR:"#x255A",boxUl:"#x255C",boxUr:"#x2559",boxV:"#x2551",boxVH:"#x256C",boxVL:"#x2563",boxVR:"#x2560",boxVh:"#x256B",boxVl:"#x2562",boxVr:"#x255F",boxbox:"#x29C9",boxdL:"#x2555",boxdR:"#x2552",boxdl:"#x2510",boxdr:"#x250C",boxh:"#x2500",boxhD:"#x2565",boxhU:"#x2568",boxhd:"#x252C",boxhu:"#x2534",boxminus:"#x229F",boxplus:"#x229E",boxtimes:"#x22A0",boxuL:"#x255B",boxuR:"#x2558",boxul:"#x2518",boxur:"#x2514",boxv:"#x2502",boxvH:"#x256A",boxvL:"#x2561",boxvR:"#x255E",boxvh:"#x253C",boxvl:"#x2524",boxvr:"#x251C",bprime:"#x2035",breve:"#x2D8",bscr:"#x1D4B7",bsemi:"#x204F",bsim:"#x223D",bsime:"#x22CD",bsolb:"#x29C5",bsolhsub:"#x27C8",bullet:"bull",bump:"#x224E",bumpE:"#x2AAE",bumpe:"#x224F",bumpeq:"#x224F",cacute:"#x107",capand:"#x2A44",capbrcup:"#x2A49",capcap:"#x2A4B",capcup:"#x2A47",capdot:"#x2A40",caps:"#x2229;&#xFE00",caret:"#x2041",caron:"#x2C7",ccaps:"#x2A4D",ccaron:"#x10D",ccirc:"#x109",ccups:"#x2A4C",ccupssm:"#x2A50",cdot:"#x10B",cemptyv:"#x29B2",centerdot:"middot",cfr:"#x1D520",chcy:"#x447",check:"#x2713",checkmark:"#x2713",cir:"#x25CB",cirE:"#x29C3",circeq:"#x2257",circlearrowleft:"#x21BA",circlearrowright:"#x21BB",circledR:"reg",circledS:"#x24C8",circledast:"#x229B",circledcirc:"#x229A",circleddash:"#x229D",cire:"#x2257",cirfnint:"#x2A10",cirmid:"#x2AEF",cirscir:"#x29C2",clubsuit:"clubs",colone:"#x2254",coloneq:"#x2254",comp:"#x2201",compfn:"#x2218",complement:"#x2201",complexes:"#x2102",congdot:"#x2A6D",conint:"#x222E",copf:"#x1D554",coprod:"#x2210",copysr:"#x2117",cross:"#x2717",cscr:"#x1D4B8",csub:"#x2ACF",csube:"#x2AD1",csup:"#x2AD0",csupe:"#x2AD2",ctdot:"#x22EF",cudarrl:"#x2938",cudarrr:"#x2935",cuepr:"#x22DE",cuesc:"#x22DF",cularr:"#x21B6",cularrp:"#x293D",cupbrcap:"#x2A48",cupcap:"#x2A46",cupcup:"#x2A4A",cupdot:"#x228D",cupor:"#x2A45",cups:"#x222A;&#xFE00",curarr:"#x21B7",curarrm:"#x293C",curlyeqprec:"#x22DE",curlyeqsucc:"#x22DF",curlyvee:"#x22CE",curlywedge:"#x22CF",curvearrowleft:"#x21B6",curvearrowright:"#x21B7",cuvee:"#x22CE",cuwed:"#x22CF",cwconint:"#x2232",cwint:"#x2231",cylcty:"#x232D",dHar:"#x2965",daleth:"#x2138",dash:"#x2010",dashv:"#x22A3",dbkarow:"#x290F",dblac:"#x2DD",dcaron:"#x10F",dcy:"#x434",dd:"#x2146",ddagger:"Dagger",ddarr:"#x21CA",ddotseq:"#x2A77",demptyv:"#x29B1",dfisht:"#x297F",dfr:"#x1D521",dharl:"#x21C3",dharr:"#x21C2",diam:"#x22C4",diamond:"#x22C4",diamondsuit:"diams",die:"#xA8",digamma:"#x3DD",disin:"#x22F2",div:"#xF7",divideontimes:"#x22C7",divonx:"#x22C7",djcy:"#x452",dlcorn:"#x231E",dlcrop:"#x230D",dopf:"#x1D555",dot:"#x2D9",doteq:"#x2250",doteqdot:"#x2251",dotminus:"#x2238",dotplus:"#x2214",dotsquare:"#x22A1",doublebarwedge:"#x2306",downarrow:"darr",downdownarrows:"#x21CA",downharpoonleft:"#x21C3",downharpoonright:"#x21C2",drbkarow:"#x2910",drcorn:"#x231F",drcrop:"#x230C",dscr:"#x1D4B9",dscy:"#x455",dsol:"#x29F6",dstrok:"#x111",dtdot:"#x22F1",dtri:"#x25BF",dtrif:"#x25BE",duarr:"#x21F5",duhar:"#x296F",dwangle:"#x29A6",dzcy:"#x45F",dzigrarr:"#x27FF",eDDot:"#x2A77",eDot:"#x2251",easter:"#x2A6E",ecaron:"#x11B",ecir:"#x2256",ecolon:"#x2255",ecy:"#x44D",edot:"#x117",ee:"#x2147",efDot:"#x2252",efr:"#x1D522",eg:"#x2A9A",egs:"#x2A96",egsdot:"#x2A98",el:"#x2A99",elinters:"#x23E7",ell:"#x2113",els:"#x2A95",elsdot:"#x2A97",emacr:"#x113",emptyset:"empty",emptyv:"empty",emsp13:"#x2004",emsp14:"#x2005",eng:"#x14B",eogon:"#x119",eopf:"#x1D556",epar:"#x22D5",eparsl:"#x29E3",eplus:"#x2A71",epsi:"#x3B5",epsiv:"#x3F5",eqcirc:"#x2256",eqcolon:"#x2255",eqsim:"#x2242",eqslantgtr:"#x2A96",eqslantless:"#x2A95",equest:"#x225F",equivDD:"#x2A78",eqvparsl:"#x29E5",erDot:"#x2253",erarr:"#x2971",escr:"#x212F",esdot:"#x2250",esim:"#x2242",expectation:"#x2130",exponentiale:"#x2147",fallingdotseq:"#x2252",fcy:"#x444",female:"#x2640",ffilig:"#xFB03",fflig:"#xFB00",ffllig:"#xFB04",ffr:"#x1D523",filig:"#xFB01",flat:"#x266D",fllig:"#xFB02",fltns:"#x25B1",fopf:"#x1D557",fork:"#x22D4",forkv:"#x2AD9",fpartint:"#x2A0D",frac13:"#x2153",frac15:"#x2155",frac16:"#x2159",frac18:"#x215B",frac23:"#x2154",frac25:"#x2156",frac35:"#x2157",frac38:"#x215C",frac45:"#x2158",frac56:"#x215A",frac58:"#x215D",frac78:"#x215E",frown:"#x2322",fscr:"#x1D4BB",gE:"#x2267",gEl:"#x2A8C",gacute:"#x1F5",gammad:"#x3DD",gap:"#x2A86",gbreve:"#x11F",gcirc:"#x11D",gcy:"#x433",gdot:"#x121",gel:"#x22DB",geq:"ge",geqq:"#x2267",geqslant:"#x2A7E",ges:"#x2A7E",gescc:"#x2AA9",gesdot:"#x2A80",gesdoto:"#x2A82",gesdotol:"#x2A84",gesl:"#x22DB;&#xFE00",gesles:"#x2A94",gfr:"#x1D524",gg:"#x226B",ggg:"#x22D9",gimel:"#x2137",gjcy:"#x453",gl:"#x2277",glE:"#x2A92",gla:"#x2AA5",glj:"#x2AA4",gnE:"#x2269",gnap:"#x2A8A",gnapprox:"#x2A8A",gne:"#x2A88",gneq:"#x2A88",gneqq:"#x2269",gnsim:"#x22E7",gopf:"#x1D558",grave:"#x60",gscr:"#x210A",gsim:"#x2273",gsime:"#x2A8E",gsiml:"#x2A90",gtcc:"#x2AA7",gtcir:"#x2A7A",gtdot:"#x22D7",gtlPar:"#x2995",gtquest:"#x2A7C",gtrapprox:"#x2A86",gtrarr:"#x2978",gtrdot:"#x22D7",gtreqless:"#x22DB",gtreqqless:"#x2A8C",gtrless:"#x2277",gtrsim:"#x2273",gvertneqq:"#x2269;&#xFE00",gvnE:"#x2269;&#xFE00",hairsp:"#x200A",half:"#xBD",hamilt:"#x210B",hardcy:"#x44A",harrcir:"#x2948",harrw:"#x21AD",hbar:"#x210F",hcirc:"#x125",heartsuit:"hearts",hercon:"#x22B9",hfr:"#x1D525",hksearow:"#x2925",hkswarow:"#x2926",hoarr:"#x21FF",homtht:"#x223B",hookleftarrow:"#x21A9",hookrightarrow:"#x21AA",hopf:"#x1D559",horbar:"#x2015",hscr:"#x1D4BD",hslash:"#x210F",hstrok:"#x127",hybull:"#x2043",hyphen:"#x2010",ic:"#x2063",icy:"#x438",iecy:"#x435",iff:"#x21D4",ifr:"#x1D526",ii:"#x2148",iiiint:"#x2A0C",iiint:"#x222D",iinfin:"#x29DC",iiota:"#x2129",ijlig:"#x133",imacr:"#x12B",imagline:"#x2110",imagpart:"#x2111",imath:"#x131",imof:"#x22B7",imped:"#x1B5",in:"#x2208",incare:"#x2105",infintie:"#x29DD",inodot:"#x131",intcal:"#x22BA",integers:"#x2124",intercal:"#x22BA",intlarhk:"#x2A17",intprod:"#x2A3C",iocy:"#x451",iogon:"#x12F",iopf:"#x1D55A",iprod:"#x2A3C",iscr:"#x1D4BE",isinE:"#x22F9",isindot:"#x22F5",isins:"#x22F4",isinsv:"#x22F3",isinv:"#x2208",it:"#x2062",itilde:"#x129",iukcy:"#x456",jcirc:"#x135",jcy:"#x439",jfr:"#x1D527",jmath:"#x237",jopf:"#x1D55B",jscr:"#x1D4BF",jsercy:"#x458",jukcy:"#x454",kappav:"#x3F0",kcedil:"#x137",kcy:"#x43A",kfr:"#x1D528",kgreen:"#x138",khcy:"#x445",kjcy:"#x45C",kopf:"#x1D55C",kscr:"#x1D4C0",lAarr:"#x21DA",lAtail:"#x291B",lBarr:"#x290E",lE:"#x2266",lEg:"#x2A8B",lHar:"#x2962",lacute:"#x13A",laemptyv:"#x29B4",lagran:"#x2112",langd:"#x2991",langle:"lang",lap:"#x2A85",larrb:"#x21E4",larrbfs:"#x291F",larrfs:"#x291D",larrhk:"#x21A9",larrlp:"#x21AB",larrpl:"#x2939",larrsim:"#x2973",larrtl:"#x21A2",lat:"#x2AAB",latail:"#x2919",late:"#x2AAD",lates:"#x2AAD;&#xFE00",lbarr:"#x290C",lbbrk:"#x2772",lbrace:"{",lbrack:"[",lbrke:"#x298B",lbrksld:"#x298F",lbrkslu:"#x298D",lcaron:"#x13E",lcedil:"#x13C",lcub:"{",lcy:"#x43B",ldca:"#x2936",ldquor:"bdquo",ldrdhar:"#x2967",ldrushar:"#x294B",ldsh:"#x21B2",leftarrow:"larr",leftarrowtail:"#x21A2",leftharpoondown:"#x21BD",leftharpoonup:"#x21BC",leftleftarrows:"#x21C7",leftrightarrow:"harr",leftrightarrows:"#x21C6",leftrightharpoons:"#x21CB",leftrightsquigarrow:"#x21AD",leftthreetimes:"#x22CB",leg:"#x22DA",leq:"le",leqq:"#x2266",leqslant:"#x2A7D",les:"#x2A7D",lescc:"#x2AA8",lesdot:"#x2A7F",lesdoto:"#x2A81",lesdotor:"#x2A83",lesg:"#x22DA;&#xFE00",lesges:"#x2A93",lessapprox:"#x2A85",lessdot:"#x22D6",lesseqgtr:"#x22DA",lesseqqgtr:"#x2A8B",lessgtr:"#x2276",lesssim:"#x2272",lfisht:"#x297C",lfr:"#x1D529",lg:"#x2276",lgE:"#x2A91",lhard:"#x21BD",lharu:"#x21BC",lharul:"#x296A",lhblk:"#x2584",ljcy:"#x459",ll:"#x226A",llarr:"#x21C7",llcorner:"#x231E",llhard:"#x296B",lltri:"#x25FA",lmidot:"#x140",lmoust:"#x23B0",lmoustache:"#x23B0",lnE:"#x2268",lnap:"#x2A89",lnapprox:"#x2A89",lne:"#x2A87",lneq:"#x2A87",lneqq:"#x2268",lnsim:"#x22E6",loang:"#x27EC",loarr:"#x21FD",lobrk:"#x27E6",longleftarrow:"#x27F5",longleftrightarrow:"#x27F7",longmapsto:"#x27FC",longrightarrow:"#x27F6",looparrowleft:"#x21AB",looparrowright:"#x21AC",lopar:"#x2985",lopf:"#x1D55D",loplus:"#x2A2D",lotimes:"#x2A34",lozenge:"loz",lozf:"#x29EB",lparlt:"#x2993",lrarr:"#x21C6",lrcorner:"#x231F",lrhar:"#x21CB",lrhard:"#x296D",lrtri:"#x22BF",lscr:"#x1D4C1",lsh:"#x21B0",lsim:"#x2272",lsime:"#x2A8D",lsimg:"#x2A8F",lsquor:"sbquo",lstrok:"#x142",ltcc:"#x2AA6",ltcir:"#x2A79",ltdot:"#x22D6",lthree:"#x22CB",ltimes:"#x22C9",ltlarr:"#x2976",ltquest:"#x2A7B",ltrPar:"#x2996",ltri:"#x25C3",ltrie:"#x22B4",ltrif:"#x25C2",lurdshar:"#x294A",luruhar:"#x2966",lvertneqq:"#x2268;&#xFE00",lvnE:"#x2268;&#xFE00",mDDot:"#x223A",male:"#x2642",malt:"#x2720",maltese:"#x2720",map:"#x21A6",mapsto:"#x21A6",mapstodown:"#x21A7",mapstoleft:"#x21A4",mapstoup:"#x21A5",marker:"#x25AE",mcomma:"#x2A29",mcy:"#x43C",measuredangle:"#x2221",mfr:"#x1D52A",mho:"#x2127",mid:"#x2223",midcir:"#x2AF0",minusb:"#x229F",minusd:"#x2238",minusdu:"#x2A2A",mlcp:"#x2ADB",mldr:"#x2026",mnplus:"#x2213",models:"#x22A7",mopf:"#x1D55E",mp:"#x2213",mscr:"#x1D4C2",mstpos:"#x223E",multimap:"#x22B8",mumap:"#x22B8",nGg:"#x22D9;&#x338",nGt:"#x226B;&#x20D2",nGtv:"#x226B;&#x338",nLeftarrow:"#x21CD",nLeftrightarrow:"#x21CE",nLl:"#x22D8;&#x338",nLt:"#x226A;&#x20D2",nLtv:"#x226A;&#x338",nRightarrow:"#x21CF",nVDash:"#x22AF",nVdash:"#x22AE",nacute:"#x144",nang:"#x2220;&#x20D2",nap:"#x2249",napE:"#x2A70;&#x338",napid:"#x224B;&#x338",napos:"#x149",napprox:"#x2249",natur:"#x266E",natural:"#x266E",naturals:"#x2115",nbump:"#x224E;&#x338",nbumpe:"#x224F;&#x338",ncap:"#x2A43",ncaron:"#x148",ncedil:"#x146",ncong:"#x2247",ncongdot:"#x2A6D;&#x338",ncup:"#x2A42",ncy:"#x43D",neArr:"#x21D7",nearhk:"#x2924",nearr:"#x2197",nearrow:"#x2197",nedot:"#x2250;&#x338",nequiv:"#x2262",nesear:"#x2928",nesim:"#x2242;&#x338",nexist:"#x2204",nexists:"#x2204",nfr:"#x1D52B",ngE:"#x2267;&#x338",nge:"#x2271",ngeq:"#x2271",ngeqq:"#x2267;&#x338",ngeqslant:"#x2A7E;&#x338",nges:"#x2A7E;&#x338",ngsim:"#x2275",ngt:"#x226F",ngtr:"#x226F",nhArr:"#x21CE",nharr:"#x21AE",nhpar:"#x2AF2",nis:"#x22FC",nisd:"#x22FA",niv:"ni",njcy:"#x45A",nlArr:"#x21CD",nlE:"#x2266;&#x338",nlarr:"#x219A",nldr:"#x2025",nle:"#x2270",nleftarrow:"#x219A",nleftrightarrow:"#x21AE",nleq:"#x2270",nleqq:"#x2266;&#x338",nleqslant:"#x2A7D;&#x338",nles:"#x2A7D;&#x338",nless:"#x226E",nlsim:"#x2274",nlt:"#x226E",nltri:"#x22EA",nltrie:"#x22EC",nmid:"#x2224",nopf:"#x1D55F",notinE:"#x22F9;&#x338",notindot:"#x22F5;&#x338",notinva:"notin",notinvb:"#x22F7",notinvc:"#x22F6",notni:"#x220C",notniva:"#x220C",notnivb:"#x22FE",notnivc:"#x22FD",npar:"#x2226",nparallel:"#x2226",nparsl:"#x2AFD;&#x20E5",npart:"#x2202;&#x338",npolint:"#x2A14",npr:"#x2280",nprcue:"#x22E0",npre:"#x2AAF;&#x338",nprec:"#x2280",npreceq:"#x2AAF;&#x338",nrArr:"#x21CF",nrarr:"#x219B",nrarrc:"#x2933;&#x338",nrarrw:"#x219D;&#x338",nrightarrow:"#x219B",nrtri:"#x22EB",nrtrie:"#x22ED",nsc:"#x2281",nsccue:"#x22E1",nsce:"#x2AB0;&#x338",nscr:"#x1D4C3",nshortmid:"#x2224",nshortparallel:"#x2226",nsim:"#x2241",nsime:"#x2244",nsimeq:"#x2244",nsmid:"#x2224",nspar:"#x2226",nsqsube:"#x22E2",nsqsupe:"#x22E3",nsubE:"#x2AC5;&#x338",nsube:"#x2288",nsubset:"#x2282;&#x20D2",nsubseteq:"#x2288",nsubseteqq:"#x2AC5;&#x338",nsucc:"#x2281",nsucceq:"#x2AB0;&#x338",nsup:"#x2285",nsupE:"#x2AC6;&#x338",nsupe:"#x2289",nsupset:"#x2283;&#x20D2",nsupseteq:"#x2289",nsupseteqq:"#x2AC6;&#x338",ntgl:"#x2279",ntlg:"#x2278",ntriangleleft:"#x22EA",ntrianglelefteq:"#x22EC",ntriangleright:"#x22EB",ntrianglerighteq:"#x22ED",numero:"#x2116",numsp:"#x2007",nvDash:"#x22AD",nvHarr:"#x2904",nvap:"#x224D;&#x20D2",nvdash:"#x22AC",nvge:"#x2265;&#x20D2",nvgt:"#x3E;&#x20D2",nvinfin:"#x29DE",nvlArr:"#x2902",nvle:"#x2264;&#x20D2",nvlt:"#x3C;&#x20D2",nvltrie:"#x22B4;&#x20D2",nvrArr:"#x2903",nvrtrie:"#x22B5;&#x20D2",nvsim:"#x223C;&#x20D2",nwArr:"#x21D6",nwarhk:"#x2923",nwarr:"#x2196",nwarrow:"#x2196",nwnear:"#x2927",oS:"#x24C8",oast:"#x229B",ocir:"#x229A",ocy:"#x43E",odash:"#x229D",odblac:"#x151",odiv:"#x2A38",odot:"#x2299",odsold:"#x29BC",ofcir:"#x29BF",ofr:"#x1D52C",ogon:"#x2DB",ogt:"#x29C1",ohbar:"#x29B5",ohm:"#x3A9",oint:"#x222E",olarr:"#x21BA",olcir:"#x29BE",olcross:"#x29BB",olt:"#x29C0",omacr:"#x14D",omid:"#x29B6",ominus:"#x2296",oopf:"#x1D560",opar:"#x29B7",operp:"#x29B9",orarr:"#x21BB",ord:"#x2A5D",order:"#x2134",orderof:"#x2134",origof:"#x22B6",oror:"#x2A56",orslope:"#x2A57",orv:"#x2A5B",oscr:"#x2134",osol:"#x2298",otimesas:"#x2A36",ovbar:"#x233D",par:"#x2225",parallel:"#x2225",parsim:"#x2AF3",parsl:"#x2AFD",pcy:"#x43F",pertenk:"#x2031",pfr:"#x1D52D",phiv:"#x3D5",phmmat:"#x2133",phone:"#x260E",pitchfork:"#x22D4",planck:"#x210F",planckh:"#x210E",plankv:"#x210F",plusacir:"#x2A23",plusb:"#x229E",pluscir:"#x2A22",plusdo:"#x2214",plusdu:"#x2A25",pluse:"#x2A72",plussim:"#x2A26",plustwo:"#x2A27",pm:"#xB1",pointint:"#x2A15",popf:"#x1D561",pr:"#x227A",prE:"#x2AB3",prap:"#x2AB7",prcue:"#x227C",pre:"#x2AAF",prec:"#x227A",precapprox:"#x2AB7",preccurlyeq:"#x227C",preceq:"#x2AAF",precnapprox:"#x2AB9",precneqq:"#x2AB5",precnsim:"#x22E8",precsim:"#x227E",primes:"#x2119",prnE:"#x2AB5",prnap:"#x2AB9",prnsim:"#x22E8",profalar:"#x232E",profline:"#x2312",profsurf:"#x2313",propto:"prop",prsim:"#x227E",prurel:"#x22B0",pscr:"#x1D4C5",puncsp:"#x2008",qfr:"#x1D52E",qint:"#x2A0C",qopf:"#x1D562",qprime:"#x2057",qscr:"#x1D4C6",quaternions:"#x210D",quatint:"#x2A16",questeq:"#x225F",rAarr:"#x21DB",rAtail:"#x291C",rBarr:"#x290F",rHar:"#x2964",race:"#x223D;&#x331",racute:"#x155",raemptyv:"#x29B3",rangd:"#x2992",range:"#x29A5",rangle:"rang",rarrap:"#x2975",rarrb:"#x21E5",rarrbfs:"#x2920",rarrc:"#x2933",rarrfs:"#x291E",rarrhk:"#x21AA",rarrlp:"#x21AC",rarrpl:"#x2945",rarrsim:"#x2974",rarrtl:"#x21A3",rarrw:"#x219D",ratail:"#x291A",ratio:"#x2236",rationals:"#x211A",rbarr:"#x290D",rbbrk:"#x2773",rbrke:"#x298C",rbrksld:"#x298E",rbrkslu:"#x2990",rcaron:"#x159",rcedil:"#x157",rcy:"#x440",rdca:"#x2937",rdldhar:"#x2969",rdquor:"rdquo",rdsh:"#x21B3",realine:"#x211B",realpart:"#x211C",reals:"#x211D",rect:"#x25AD",rfisht:"#x297D",rfr:"#x1D52F",rhard:"#x21C1",rharu:"#x21C0",rharul:"#x296C",rhov:"#x3F1",rightarrow:"rarr",rightarrowtail:"#x21A3",rightharpoondown:"#x21C1",rightharpoonup:"#x21C0",rightleftarrows:"#x21C4",rightleftharpoons:"#x21CC",rightrightarrows:"#x21C9",rightsquigarrow:"#x219D",rightthreetimes:"#x22CC",ring:"#x2DA",risingdotseq:"#x2253",rlarr:"#x21C4",rlhar:"#x21CC",rmoust:"#x23B1",rmoustache:"#x23B1",rnmid:"#x2AEE",roang:"#x27ED",roarr:"#x21FE",robrk:"#x27E7",ropar:"#x2986",ropf:"#x1D563",roplus:"#x2A2E",rotimes:"#x2A35",rpargt:"#x2994",rppolint:"#x2A12",rrarr:"#x21C9",rscr:"#x1D4C7",rsh:"#x21B1",rsquor:"rsquo",rthree:"#x22CC",rtimes:"#x22CA",rtri:"#x25B9",rtrie:"#x22B5",rtrif:"#x25B8",rtriltri:"#x29CE",ruluhar:"#x2968",rx:"#x211E",sacute:"#x15B",sc:"#x227B",scE:"#x2AB4",scap:"#x2AB8",sccue:"#x227D",sce:"#x2AB0",scedil:"#x15F",scirc:"#x15D",scnE:"#x2AB6",scnap:"#x2ABA",scnsim:"#x22E9",scpolint:"#x2A13",scsim:"#x227F",scy:"#x441",sdotb:"#x22A1",sdote:"#x2A66",seArr:"#x21D8",searhk:"#x2925",searr:"#x2198",searrow:"#x2198",seswar:"#x2929",setminus:"#x2216",setmn:"#x2216",sext:"#x2736",sfr:"#x1D530",sfrown:"#x2322",sharp:"#x266F",shchcy:"#x449",shcy:"#x448",shortmid:"#x2223",shortparallel:"#x2225",sigmav:"sigmaf",simdot:"#x2A6A",sime:"#x2243",simeq:"#x2243",simg:"#x2A9E",simgE:"#x2AA0",siml:"#x2A9D",simlE:"#x2A9F",simne:"#x2246",simplus:"#x2A24",simrarr:"#x2972",slarr:"larr",smallsetminus:"#x2216",smashp:"#x2A33",smeparsl:"#x29E4",smid:"#x2223",smile:"#x2323",smt:"#x2AAA",smte:"#x2AAC",smtes:"#x2AAC;&#xFE00",softcy:"#x44C",solb:"#x29C4",solbar:"#x233F",sopf:"#x1D564",spadesuit:"spades",spar:"#x2225",sqcap:"#x2293",sqcaps:"#x2293;&#xFE00",sqcup:"#x2294",sqcups:"#x2294;&#xFE00",sqsub:"#x228F",sqsube:"#x2291",sqsubset:"#x228F",sqsubseteq:"#x2291",sqsup:"#x2290",sqsupe:"#x2292",sqsupset:"#x2290",sqsupseteq:"#x2292",squ:"#x25A1",square:"#x25A1",squarf:"#x25AA",squf:"#x25AA",srarr:"rarr",sscr:"#x1D4C8",ssetmn:"#x2216",ssmile:"#x2323",sstarf:"#x22C6",star:"#x2606",starf:"#x2605",straightepsilon:"#x3F5",straightphi:"#x3D5",strns:"macr",subE:"#x2AC5",subdot:"#x2ABD",subedot:"#x2AC3",submult:"#x2AC1",subnE:"#x2ACB",subne:"#x228A",subplus:"#x2ABF",subrarr:"#x2979",subset:"sub",subseteq:"sube",subseteqq:"#x2AC5",subsetneq:"#x228A",subsetneqq:"#x2ACB",subsim:"#x2AC7",subsub:"#x2AD5",subsup:"#x2AD3",succ:"#x227B",succapprox:"#x2AB8",succcurlyeq:"#x227D",succeq:"#x2AB0",succnapprox:"#x2ABA",succneqq:"#x2AB6",succnsim:"#x22E9",succsim:"#x227F",sung:"#x266A",supE:"#x2AC6",supdot:"#x2ABE",supdsub:"#x2AD8",supedot:"#x2AC4",suphsol:"#x27C9",suphsub:"#x2AD7",suplarr:"#x297B",supmult:"#x2AC2",supnE:"#x2ACC",supne:"#x228B",supplus:"#x2AC0",supset:"sup",supseteq:"supe",supseteqq:"#x2AC6",supsetneq:"#x228B",supsetneqq:"#x2ACC",supsim:"#x2AC8",supsub:"#x2AD4",supsup:"#x2AD6",swArr:"#x21D9",swarhk:"#x2926",swarr:"#x2199",swarrow:"#x2199",swnwar:"#x292A",target:"#x2316",tbrk:"#x23B4",tcaron:"#x165",tcedil:"#x163",tcy:"#x442",tdot:"#x20DB",telrec:"#x2315",tfr:"#x1D531",therefore:"there4",thetav:"#x3D1",thickapprox:"#x2248",thicksim:"sim",thkap:"#x2248",thksim:"sim",timesb:"#x22A0",timesbar:"#x2A31",timesd:"#x2A30",tint:"#x222D",toea:"#x2928",top:"#x22A4",topbot:"#x2336",topcir:"#x2AF1",topf:"#x1D565",topfork:"#x2ADA",tosa:"#x2929",tprime:"#x2034",triangle:"#x25B5",triangledown:"#x25BF",triangleleft:"#x25C3",trianglelefteq:"#x22B4",triangleq:"#x225C",triangleright:"#x25B9",trianglerighteq:"#x22B5",tridot:"#x25EC",trie:"#x225C",triminus:"#x2A3A",triplus:"#x2A39",trisb:"#x29CD",tritime:"#x2A3B",trpezium:"#x23E2",tscr:"#x1D4C9",tscy:"#x446",tshcy:"#x45B",tstrok:"#x167",twixt:"#x226C",twoheadleftarrow:"#x219E",twoheadrightarrow:"#x21A0",uHar:"#x2963",ubrcy:"#x45E",ubreve:"#x16D",ucy:"#x443",udarr:"#x21C5",udblac:"#x171",udhar:"#x296E",ufisht:"#x297E",ufr:"#x1D532",uharl:"#x21BF",uharr:"#x21BE",uhblk:"#x2580",ulcorn:"#x231C",ulcorner:"#x231C",ulcrop:"#x230F",ultri:"#x25F8",umacr:"#x16B",uogon:"#x173",uopf:"#x1D566",uparrow:"uarr",updownarrow:"#x2195",upharpoonleft:"#x21BF",upharpoonright:"#x21BE",uplus:"#x228E",upsi:"#x3C5",upuparrows:"#x21C8",urcorn:"#x231D",urcorner:"#x231D",urcrop:"#x230E",uring:"#x16F",urtri:"#x25F9",uscr:"#x1D4CA",utdot:"#x22F0",utilde:"#x169",utri:"#x25B5",utrif:"#x25B4",uuarr:"#x21C8",uwangle:"#x29A7",vArr:"#x21D5",vBar:"#x2AE8",vBarv:"#x2AE9",vDash:"#x22A8",vangrt:"#x299C",varepsilon:"#x3F5",varkappa:"#x3F0",varnothing:"empty",varphi:"#x3D5",varpi:"piv",varpropto:"prop",varr:"#x2195",varrho:"#x3F1",varsigma:"sigmaf",varsubsetneq:"#x228A;&#xFE00",varsubsetneqq:"#x2ACB;&#xFE00",varsupsetneq:"#x228B;&#xFE00",varsupsetneqq:"#x2ACC;&#xFE00",vartheta:"#x3D1",vartriangleleft:"#x22B2",vartriangleright:"#x22B3",vcy:"#x432",vdash:"#x22A2",vee:"or",veebar:"#x22BB",veeeq:"#x225A",vellip:"#x22EE",vfr:"#x1D533",vltri:"#x22B2",vnsub:"#x2282;&#x20D2",vnsup:"#x2283;&#x20D2",vopf:"#x1D567",vprop:"prop",vrtri:"#x22B3",vscr:"#x1D4CB",vsubnE:"#x2ACB;&#xFE00",vsubne:"#x228A;&#xFE00",vsupnE:"#x2ACC;&#xFE00",vsupne:"#x228B;&#xFE00",vzigzag:"#x299A",wcirc:"#x175",wedbar:"#x2A5F",wedge:"and",wedgeq:"#x2259",wfr:"#x1D534",wopf:"#x1D568",wp:"#x2118",wr:"#x2240",wreath:"#x2240",wscr:"#x1D4CC",xcap:"#x22C2",xcirc:"#x25EF",xcup:"#x22C3",xdtri:"#x25BD",xfr:"#x1D535",xhArr:"#x27FA",xharr:"#x27F7",xlArr:"#x27F8",xlarr:"#x27F5",xmap:"#x27FC",xnis:"#x22FB",xodot:"#x2A00",xopf:"#x1D569",xoplus:"#x2A01",xotime:"#x2A02",xrArr:"#x27F9",xrarr:"#x27F6",xscr:"#x1D4CD",xsqcup:"#x2A06",xuplus:"#x2A04",xutri:"#x25B3",xvee:"#x22C1",xwedge:"#x22C0",yacy:"#x44F",ycirc:"#x177",ycy:"#x44B",yfr:"#x1D536",yicy:"#x457",yopf:"#x1D56A",yscr:"#x1D4CE",yucy:"#x44E",zacute:"#x17A",zcaron:"#x17E",zcy:"#x437",zdot:"#x17C",zeetrf:"#x2128",zfr:"#x1D537",zhcy:"#x436",zigrarr:"#x21DD",zopf:"#x1D56B",zscr:"#x1D4CF"},e.notEmailFriendlyLowercaseSetOnly=h,e.notEmailFriendlyMaxLength=31,e.notEmailFriendlyMinLength=2,e.notEmailFriendlySetOnly=y,Object.defineProperty(e,"__esModule",{value:!0})})});var xn=et((ga,qn)=>{(function(e,y){typeof ga=="object"&&typeof qn!="undefined"?y(ga):typeof define=="function"&&define.amd?define(["exports"],y):y((e=typeof globalThis!="undefined"?globalThis:e||self).allNamedHtmlEntities={})})(ga,function(e){"use strict";var y={Aacute:"\xC1",aacute:"\xE1",Abreve:"\u0102",abreve:"\u0103",ac:"\u223E",acd:"\u223F",acE:"\u223E\u0333",Acirc:"\xC2",acirc:"\xE2",acute:"\xB4",Acy:"\u0410",acy:"\u0430",AElig:"\xC6",aelig:"\xE6",af:"\u2061",Afr:"\u{1D504}",afr:"\u{1D51E}",Agrave:"\xC0",agrave:"\xE0",alefsym:"\u2135",aleph:"\u2135",Alpha:"\u0391",alpha:"\u03B1",Amacr:"\u0100",amacr:"\u0101",amalg:"\u2A3F",AMP:"&",amp:"&",And:"\u2A53",and:"\u2227",andand:"\u2A55",andd:"\u2A5C",andslope:"\u2A58",andv:"\u2A5A",ang:"\u2220",ange:"\u29A4",angle:"\u2220",angmsd:"\u2221",angmsdaa:"\u29A8",angmsdab:"\u29A9",angmsdac:"\u29AA",angmsdad:"\u29AB",angmsdae:"\u29AC",angmsdaf:"\u29AD",angmsdag:"\u29AE",angmsdah:"\u29AF",angrt:"\u221F",angrtvb:"\u22BE",angrtvbd:"\u299D",angsph:"\u2222",angst:"\xC5",angzarr:"\u237C",Aogon:"\u0104",aogon:"\u0105",Aopf:"\u{1D538}",aopf:"\u{1D552}",ap:"\u2248",apacir:"\u2A6F",apE:"\u2A70",ape:"\u224A",apid:"\u224B",apos:"'",ApplyFunction:"\u2061",approx:"\u2248",approxeq:"\u224A",Aring:"\xC5",aring:"\xE5",Ascr:"\u{1D49C}",ascr:"\u{1D4B6}",Assign:"\u2254",ast:"*",asymp:"\u2248",asympeq:"\u224D",Atilde:"\xC3",atilde:"\xE3",Auml:"\xC4",auml:"\xE4",awconint:"\u2233",awint:"\u2A11",backcong:"\u224C",backepsilon:"\u03F6",backprime:"\u2035",backsim:"\u223D",backsimeq:"\u22CD",Backslash:"\u2216",Barv:"\u2AE7",barvee:"\u22BD",Barwed:"\u2306",barwed:"\u2305",barwedge:"\u2305",bbrk:"\u23B5",bbrktbrk:"\u23B6",bcong:"\u224C",Bcy:"\u0411",bcy:"\u0431",bdquo:"\u201E",becaus:"\u2235",Because:"\u2235",because:"\u2235",bemptyv:"\u29B0",bepsi:"\u03F6",bernou:"\u212C",Bernoullis:"\u212C",Beta:"\u0392",beta:"\u03B2",beth:"\u2136",between:"\u226C",Bfr:"\u{1D505}",bfr:"\u{1D51F}",bigcap:"\u22C2",bigcirc:"\u25EF",bigcup:"\u22C3",bigodot:"\u2A00",bigoplus:"\u2A01",bigotimes:"\u2A02",bigsqcup:"\u2A06",bigstar:"\u2605",bigtriangledown:"\u25BD",bigtriangleup:"\u25B3",biguplus:"\u2A04",bigvee:"\u22C1",bigwedge:"\u22C0",bkarow:"\u290D",blacklozenge:"\u29EB",blacksquare:"\u25AA",blacktriangle:"\u25B4",blacktriangledown:"\u25BE",blacktriangleleft:"\u25C2",blacktriangleright:"\u25B8",blank:"\u2423",blk12:"\u2592",blk14:"\u2591",blk34:"\u2593",block:"\u2588",bne:"=\u20E5",bnequiv:"\u2261\u20E5",bNot:"\u2AED",bnot:"\u2310",Bopf:"\u{1D539}",bopf:"\u{1D553}",bot:"\u22A5",bottom:"\u22A5",bowtie:"\u22C8",boxbox:"\u29C9",boxDL:"\u2557",boxDl:"\u2556",boxdL:"\u2555",boxdl:"\u2510",boxDR:"\u2554",boxDr:"\u2553",boxdR:"\u2552",boxdr:"\u250C",boxH:"\u2550",boxh:"\u2500",boxHD:"\u2566",boxHd:"\u2564",boxhD:"\u2565",boxhd:"\u252C",boxHU:"\u2569",boxHu:"\u2567",boxhU:"\u2568",boxhu:"\u2534",boxminus:"\u229F",boxplus:"\u229E",boxtimes:"\u22A0",boxUL:"\u255D",boxUl:"\u255C",boxuL:"\u255B",boxul:"\u2518",boxUR:"\u255A",boxUr:"\u2559",boxuR:"\u2558",boxur:"\u2514",boxV:"\u2551",boxv:"\u2502",boxVH:"\u256C",boxVh:"\u256B",boxvH:"\u256A",boxvh:"\u253C",boxVL:"\u2563",boxVl:"\u2562",boxvL:"\u2561",boxvl:"\u2524",boxVR:"\u2560",boxVr:"\u255F",boxvR:"\u255E",boxvr:"\u251C",bprime:"\u2035",Breve:"\u02D8",breve:"\u02D8",brvbar:"\xA6",Bscr:"\u212C",bscr:"\u{1D4B7}",bsemi:"\u204F",bsim:"\u223D",bsime:"\u22CD",bsol:"\\",bsolb:"\u29C5",bsolhsub:"\u27C8",bull:"\u2022",bullet:"\u2022",bump:"\u224E",bumpE:"\u2AAE",bumpe:"\u224F",Bumpeq:"\u224E",bumpeq:"\u224F",Cacute:"\u0106",cacute:"\u0107",Cap:"\u22D2",cap:"\u2229",capand:"\u2A44",capbrcup:"\u2A49",capcap:"\u2A4B",capcup:"\u2A47",capdot:"\u2A40",CapitalDifferentialD:"\u2145",caps:"\u2229\uFE00",caret:"\u2041",caron:"\u02C7",Cayleys:"\u212D",ccaps:"\u2A4D",Ccaron:"\u010C",ccaron:"\u010D",Ccedil:"\xC7",ccedil:"\xE7",Ccirc:"\u0108",ccirc:"\u0109",Cconint:"\u2230",ccups:"\u2A4C",ccupssm:"\u2A50",Cdot:"\u010A",cdot:"\u010B",cedil:"\xB8",Cedilla:"\xB8",cemptyv:"\u29B2",cent:"\xA2",CenterDot:"\xB7",centerdot:"\xB7",Cfr:"\u212D",cfr:"\u{1D520}",CHcy:"\u0427",chcy:"\u0447",check:"\u2713",checkmark:"\u2713",Chi:"\u03A7",chi:"\u03C7",cir:"\u25CB",circ:"\u02C6",circeq:"\u2257",circlearrowleft:"\u21BA",circlearrowright:"\u21BB",circledast:"\u229B",circledcirc:"\u229A",circleddash:"\u229D",CircleDot:"\u2299",circledR:"\xAE",circledS:"\u24C8",CircleMinus:"\u2296",CirclePlus:"\u2295",CircleTimes:"\u2297",cirE:"\u29C3",cire:"\u2257",cirfnint:"\u2A10",cirmid:"\u2AEF",cirscir:"\u29C2",ClockwiseContourIntegral:"\u2232",CloseCurlyDoubleQuote:"\u201D",CloseCurlyQuote:"\u2019",clubs:"\u2663",clubsuit:"\u2663",Colon:"\u2237",colon:":",Colone:"\u2A74",colone:"\u2254",coloneq:"\u2254",comma:",",commat:"@",comp:"\u2201",compfn:"\u2218",complement:"\u2201",complexes:"\u2102",cong:"\u2245",congdot:"\u2A6D",Congruent:"\u2261",Conint:"\u222F",conint:"\u222E",ContourIntegral:"\u222E",Copf:"\u2102",copf:"\u{1D554}",coprod:"\u2210",Coproduct:"\u2210",COPY:"\xA9",copy:"\xA9",copysr:"\u2117",CounterClockwiseContourIntegral:"\u2233",crarr:"\u21B5",Cross:"\u2A2F",cross:"\u2717",Cscr:"\u{1D49E}",cscr:"\u{1D4B8}",csub:"\u2ACF",csube:"\u2AD1",csup:"\u2AD0",csupe:"\u2AD2",ctdot:"\u22EF",cudarrl:"\u2938",cudarrr:"\u2935",cuepr:"\u22DE",cuesc:"\u22DF",cularr:"\u21B6",cularrp:"\u293D",Cup:"\u22D3",cup:"\u222A",cupbrcap:"\u2A48",CupCap:"\u224D",cupcap:"\u2A46",cupcup:"\u2A4A",cupdot:"\u228D",cupor:"\u2A45",cups:"\u222A\uFE00",curarr:"\u21B7",curarrm:"\u293C",curlyeqprec:"\u22DE",curlyeqsucc:"\u22DF",curlyvee:"\u22CE",curlywedge:"\u22CF",curren:"\xA4",curvearrowleft:"\u21B6",curvearrowright:"\u21B7",cuvee:"\u22CE",cuwed:"\u22CF",cwconint:"\u2232",cwint:"\u2231",cylcty:"\u232D",Dagger:"\u2021",dagger:"\u2020",daleth:"\u2138",Darr:"\u21A1",dArr:"\u21D3",darr:"\u2193",dash:"\u2010",Dashv:"\u2AE4",dashv:"\u22A3",dbkarow:"\u290F",dblac:"\u02DD",Dcaron:"\u010E",dcaron:"\u010F",Dcy:"\u0414",dcy:"\u0434",DD:"\u2145",dd:"\u2146",ddagger:"\u2021",ddarr:"\u21CA",DDotrahd:"\u2911",ddotseq:"\u2A77",deg:"\xB0",Del:"\u2207",Delta:"\u0394",delta:"\u03B4",demptyv:"\u29B1",dfisht:"\u297F",Dfr:"\u{1D507}",dfr:"\u{1D521}",dHar:"\u2965",dharl:"\u21C3",dharr:"\u21C2",DiacriticalAcute:"\xB4",DiacriticalDot:"\u02D9",DiacriticalDoubleAcute:"\u02DD",DiacriticalGrave:"`",DiacriticalTilde:"\u02DC",diam:"\u22C4",Diamond:"\u22C4",diamond:"\u22C4",diamondsuit:"\u2666",diams:"\u2666",die:"\xA8",DifferentialD:"\u2146",digamma:"\u03DD",disin:"\u22F2",div:"\xF7",divide:"\xF7",divideontimes:"\u22C7",divonx:"\u22C7",DJcy:"\u0402",djcy:"\u0452",dlcorn:"\u231E",dlcrop:"\u230D",dollar:"$",Dopf:"\u{1D53B}",dopf:"\u{1D555}",Dot:"\xA8",dot:"\u02D9",DotDot:"\u20DC",doteq:"\u2250",doteqdot:"\u2251",DotEqual:"\u2250",dotminus:"\u2238",dotplus:"\u2214",dotsquare:"\u22A1",doublebarwedge:"\u2306",DoubleContourIntegral:"\u222F",DoubleDot:"\xA8",DoubleDownArrow:"\u21D3",DoubleLeftArrow:"\u21D0",DoubleLeftRightArrow:"\u21D4",DoubleLeftTee:"\u2AE4",DoubleLongLeftArrow:"\u27F8",DoubleLongLeftRightArrow:"\u27FA",DoubleLongRightArrow:"\u27F9",DoubleRightArrow:"\u21D2",DoubleRightTee:"\u22A8",DoubleUpArrow:"\u21D1",DoubleUpDownArrow:"\u21D5",DoubleVerticalBar:"\u2225",DownArrow:"\u2193",Downarrow:"\u21D3",downarrow:"\u2193",DownArrowBar:"\u2913",DownArrowUpArrow:"\u21F5",DownBreve:"\u0311",downdownarrows:"\u21CA",downharpoonleft:"\u21C3",downharpoonright:"\u21C2",DownLeftRightVector:"\u2950",DownLeftTeeVector:"\u295E",DownLeftVector:"\u21BD",DownLeftVectorBar:"\u2956",DownRightTeeVector:"\u295F",DownRightVector:"\u21C1",DownRightVectorBar:"\u2957",DownTee:"\u22A4",DownTeeArrow:"\u21A7",drbkarow:"\u2910",drcorn:"\u231F",drcrop:"\u230C",Dscr:"\u{1D49F}",dscr:"\u{1D4B9}",DScy:"\u0405",dscy:"\u0455",dsol:"\u29F6",Dstrok:"\u0110",dstrok:"\u0111",dtdot:"\u22F1",dtri:"\u25BF",dtrif:"\u25BE",duarr:"\u21F5",duhar:"\u296F",dwangle:"\u29A6",DZcy:"\u040F",dzcy:"\u045F",dzigrarr:"\u27FF",Eacute:"\xC9",eacute:"\xE9",easter:"\u2A6E",Ecaron:"\u011A",ecaron:"\u011B",ecir:"\u2256",Ecirc:"\xCA",ecirc:"\xEA",ecolon:"\u2255",Ecy:"\u042D",ecy:"\u044D",eDDot:"\u2A77",Edot:"\u0116",eDot:"\u2251",edot:"\u0117",ee:"\u2147",efDot:"\u2252",Efr:"\u{1D508}",efr:"\u{1D522}",eg:"\u2A9A",Egrave:"\xC8",egrave:"\xE8",egs:"\u2A96",egsdot:"\u2A98",el:"\u2A99",Element:"\u2208",elinters:"\u23E7",ell:"\u2113",els:"\u2A95",elsdot:"\u2A97",Emacr:"\u0112",emacr:"\u0113",empty:"\u2205",emptyset:"\u2205",EmptySmallSquare:"\u25FB",emptyv:"\u2205",EmptyVerySmallSquare:"\u25AB",emsp:"\u2003",emsp13:"\u2004",emsp14:"\u2005",ENG:"\u014A",eng:"\u014B",ensp:"\u2002",Eogon:"\u0118",eogon:"\u0119",Eopf:"\u{1D53C}",eopf:"\u{1D556}",epar:"\u22D5",eparsl:"\u29E3",eplus:"\u2A71",epsi:"\u03B5",Epsilon:"\u0395",epsilon:"\u03B5",epsiv:"\u03F5",eqcirc:"\u2256",eqcolon:"\u2255",eqsim:"\u2242",eqslantgtr:"\u2A96",eqslantless:"\u2A95",Equal:"\u2A75",equals:"=",EqualTilde:"\u2242",equest:"\u225F",Equilibrium:"\u21CC",equiv:"\u2261",equivDD:"\u2A78",eqvparsl:"\u29E5",erarr:"\u2971",erDot:"\u2253",Escr:"\u2130",escr:"\u212F",esdot:"\u2250",Esim:"\u2A73",esim:"\u2242",Eta:"\u0397",eta:"\u03B7",ETH:"\xD0",eth:"\xF0",Euml:"\xCB",euml:"\xEB",euro:"\u20AC",excl:"!",exist:"\u2203",Exists:"\u2203",expectation:"\u2130",ExponentialE:"\u2147",exponentiale:"\u2147",fallingdotseq:"\u2252",Fcy:"\u0424",fcy:"\u0444",female:"\u2640",ffilig:"\uFB03",fflig:"\uFB00",ffllig:"\uFB04",Ffr:"\u{1D509}",ffr:"\u{1D523}",filig:"\uFB01",FilledSmallSquare:"\u25FC",FilledVerySmallSquare:"\u25AA",fjlig:"fj",flat:"\u266D",fllig:"\uFB02",fltns:"\u25B1",fnof:"\u0192",Fopf:"\u{1D53D}",fopf:"\u{1D557}",ForAll:"\u2200",forall:"\u2200",fork:"\u22D4",forkv:"\u2AD9",Fouriertrf:"\u2131",fpartint:"\u2A0D",frac12:"\xBD",frac13:"\u2153",frac14:"\xBC",frac15:"\u2155",frac16:"\u2159",frac18:"\u215B",frac23:"\u2154",frac25:"\u2156",frac34:"\xBE",frac35:"\u2157",frac38:"\u215C",frac45:"\u2158",frac56:"\u215A",frac58:"\u215D",frac78:"\u215E",frasl:"\u2044",frown:"\u2322",Fscr:"\u2131",fscr:"\u{1D4BB}",gacute:"\u01F5",Gamma:"\u0393",gamma:"\u03B3",Gammad:"\u03DC",gammad:"\u03DD",gap:"\u2A86",Gbreve:"\u011E",gbreve:"\u011F",Gcedil:"\u0122",Gcirc:"\u011C",gcirc:"\u011D",Gcy:"\u0413",gcy:"\u0433",Gdot:"\u0120",gdot:"\u0121",gE:"\u2267",ge:"\u2265",gEl:"\u2A8C",gel:"\u22DB",geq:"\u2265",geqq:"\u2267",geqslant:"\u2A7E",ges:"\u2A7E",gescc:"\u2AA9",gesdot:"\u2A80",gesdoto:"\u2A82",gesdotol:"\u2A84",gesl:"\u22DB\uFE00",gesles:"\u2A94",Gfr:"\u{1D50A}",gfr:"\u{1D524}",Gg:"\u22D9",gg:"\u226B",ggg:"\u22D9",gimel:"\u2137",GJcy:"\u0403",gjcy:"\u0453",gl:"\u2277",gla:"\u2AA5",glE:"\u2A92",glj:"\u2AA4",gnap:"\u2A8A",gnapprox:"\u2A8A",gnE:"\u2269",gne:"\u2A88",gneq:"\u2A88",gneqq:"\u2269",gnsim:"\u22E7",Gopf:"\u{1D53E}",gopf:"\u{1D558}",grave:"`",GreaterEqual:"\u2265",GreaterEqualLess:"\u22DB",GreaterFullEqual:"\u2267",GreaterGreater:"\u2AA2",GreaterLess:"\u2277",GreaterSlantEqual:"\u2A7E",GreaterTilde:"\u2273",Gscr:"\u{1D4A2}",gscr:"\u210A",gsim:"\u2273",gsime:"\u2A8E",gsiml:"\u2A90",GT:">",Gt:"\u226B",gt:">",gtcc:"\u2AA7",gtcir:"\u2A7A",gtdot:"\u22D7",gtlPar:"\u2995",gtquest:"\u2A7C",gtrapprox:"\u2A86",gtrarr:"\u2978",gtrdot:"\u22D7",gtreqless:"\u22DB",gtreqqless:"\u2A8C",gtrless:"\u2277",gtrsim:"\u2273",gvertneqq:"\u2269\uFE00",gvnE:"\u2269\uFE00",Hacek:"\u02C7",hairsp:"\u200A",half:"\xBD",hamilt:"\u210B",HARDcy:"\u042A",hardcy:"\u044A",hArr:"\u21D4",harr:"\u2194",harrcir:"\u2948",harrw:"\u21AD",Hat:"^",hbar:"\u210F",Hcirc:"\u0124",hcirc:"\u0125",hearts:"\u2665",heartsuit:"\u2665",hellip:"\u2026",hercon:"\u22B9",Hfr:"\u210C",hfr:"\u{1D525}",HilbertSpace:"\u210B",hksearow:"\u2925",hkswarow:"\u2926",hoarr:"\u21FF",homtht:"\u223B",hookleftarrow:"\u21A9",hookrightarrow:"\u21AA",Hopf:"\u210D",hopf:"\u{1D559}",horbar:"\u2015",HorizontalLine:"\u2500",Hscr:"\u210B",hscr:"\u{1D4BD}",hslash:"\u210F",Hstrok:"\u0126",hstrok:"\u0127",HumpDownHump:"\u224E",HumpEqual:"\u224F",hybull:"\u2043",hyphen:"\u2010",Iacute:"\xCD",iacute:"\xED",ic:"\u2063",Icirc:"\xCE",icirc:"\xEE",Icy:"\u0418",icy:"\u0438",Idot:"\u0130",IEcy:"\u0415",iecy:"\u0435",iexcl:"\xA1",iff:"\u21D4",Ifr:"\u2111",ifr:"\u{1D526}",Igrave:"\xCC",igrave:"\xEC",ii:"\u2148",iiiint:"\u2A0C",iiint:"\u222D",iinfin:"\u29DC",iiota:"\u2129",IJlig:"\u0132",ijlig:"\u0133",Im:"\u2111",Imacr:"\u012A",imacr:"\u012B",image:"\u2111",ImaginaryI:"\u2148",imagline:"\u2110",imagpart:"\u2111",imath:"\u0131",imof:"\u22B7",imped:"\u01B5",Implies:"\u21D2",in:"\u2208",incare:"\u2105",infin:"\u221E",infintie:"\u29DD",inodot:"\u0131",Int:"\u222C",int:"\u222B",intcal:"\u22BA",integers:"\u2124",Integral:"\u222B",intercal:"\u22BA",Intersection:"\u22C2",intlarhk:"\u2A17",intprod:"\u2A3C",InvisibleComma:"\u2063",InvisibleTimes:"\u2062",IOcy:"\u0401",iocy:"\u0451",Iogon:"\u012E",iogon:"\u012F",Iopf:"\u{1D540}",iopf:"\u{1D55A}",Iota:"\u0399",iota:"\u03B9",iprod:"\u2A3C",iquest:"\xBF",Iscr:"\u2110",iscr:"\u{1D4BE}",isin:"\u2208",isindot:"\u22F5",isinE:"\u22F9",isins:"\u22F4",isinsv:"\u22F3",isinv:"\u2208",it:"\u2062",Itilde:"\u0128",itilde:"\u0129",Iukcy:"\u0406",iukcy:"\u0456",Iuml:"\xCF",iuml:"\xEF",Jcirc:"\u0134",jcirc:"\u0135",Jcy:"\u0419",jcy:"\u0439",Jfr:"\u{1D50D}",jfr:"\u{1D527}",jmath:"\u0237",Jopf:"\u{1D541}",jopf:"\u{1D55B}",Jscr:"\u{1D4A5}",jscr:"\u{1D4BF}",Jsercy:"\u0408",jsercy:"\u0458",Jukcy:"\u0404",jukcy:"\u0454",Kappa:"\u039A",kappa:"\u03BA",kappav:"\u03F0",Kcedil:"\u0136",kcedil:"\u0137",Kcy:"\u041A",kcy:"\u043A",Kfr:"\u{1D50E}",kfr:"\u{1D528}",kgreen:"\u0138",KHcy:"\u0425",khcy:"\u0445",KJcy:"\u040C",kjcy:"\u045C",Kopf:"\u{1D542}",kopf:"\u{1D55C}",Kscr:"\u{1D4A6}",kscr:"\u{1D4C0}",lAarr:"\u21DA",Lacute:"\u0139",lacute:"\u013A",laemptyv:"\u29B4",lagran:"\u2112",Lambda:"\u039B",lambda:"\u03BB",Lang:"\u27EA",lang:"\u27E8",langd:"\u2991",langle:"\u27E8",lap:"\u2A85",Laplacetrf:"\u2112",laquo:"\xAB",Larr:"\u219E",lArr:"\u21D0",larr:"\u2190",larrb:"\u21E4",larrbfs:"\u291F",larrfs:"\u291D",larrhk:"\u21A9",larrlp:"\u21AB",larrpl:"\u2939",larrsim:"\u2973",larrtl:"\u21A2",lat:"\u2AAB",lAtail:"\u291B",latail:"\u2919",late:"\u2AAD",lates:"\u2AAD\uFE00",lBarr:"\u290E",lbarr:"\u290C",lbbrk:"\u2772",lbrace:"{",lbrack:"[",lbrke:"\u298B",lbrksld:"\u298F",lbrkslu:"\u298D",Lcaron:"\u013D",lcaron:"\u013E",Lcedil:"\u013B",lcedil:"\u013C",lceil:"\u2308",lcub:"{",Lcy:"\u041B",lcy:"\u043B",ldca:"\u2936",ldquo:"\u201C",ldquor:"\u201E",ldrdhar:"\u2967",ldrushar:"\u294B",ldsh:"\u21B2",lE:"\u2266",le:"\u2264",LeftAngleBracket:"\u27E8",LeftArrow:"\u2190",Leftarrow:"\u21D0",leftarrow:"\u2190",LeftArrowBar:"\u21E4",LeftArrowRightArrow:"\u21C6",leftarrowtail:"\u21A2",LeftCeiling:"\u2308",LeftDoubleBracket:"\u27E6",LeftDownTeeVector:"\u2961",LeftDownVector:"\u21C3",LeftDownVectorBar:"\u2959",LeftFloor:"\u230A",leftharpoondown:"\u21BD",leftharpoonup:"\u21BC",leftleftarrows:"\u21C7",LeftRightArrow:"\u2194",Leftrightarrow:"\u21D4",leftrightarrow:"\u2194",leftrightarrows:"\u21C6",leftrightharpoons:"\u21CB",leftrightsquigarrow:"\u21AD",LeftRightVector:"\u294E",LeftTee:"\u22A3",LeftTeeArrow:"\u21A4",LeftTeeVector:"\u295A",leftthreetimes:"\u22CB",LeftTriangle:"\u22B2",LeftTriangleBar:"\u29CF",LeftTriangleEqual:"\u22B4",LeftUpDownVector:"\u2951",LeftUpTeeVector:"\u2960",LeftUpVector:"\u21BF",LeftUpVectorBar:"\u2958",LeftVector:"\u21BC",LeftVectorBar:"\u2952",lEg:"\u2A8B",leg:"\u22DA",leq:"\u2264",leqq:"\u2266",leqslant:"\u2A7D",les:"\u2A7D",lescc:"\u2AA8",lesdot:"\u2A7F",lesdoto:"\u2A81",lesdotor:"\u2A83",lesg:"\u22DA\uFE00",lesges:"\u2A93",lessapprox:"\u2A85",lessdot:"\u22D6",lesseqgtr:"\u22DA",lesseqqgtr:"\u2A8B",LessEqualGreater:"\u22DA",LessFullEqual:"\u2266",LessGreater:"\u2276",lessgtr:"\u2276",LessLess:"\u2AA1",lesssim:"\u2272",LessSlantEqual:"\u2A7D",LessTilde:"\u2272",lfisht:"\u297C",lfloor:"\u230A",Lfr:"\u{1D50F}",lfr:"\u{1D529}",lg:"\u2276",lgE:"\u2A91",lHar:"\u2962",lhard:"\u21BD",lharu:"\u21BC",lharul:"\u296A",lhblk:"\u2584",LJcy:"\u0409",ljcy:"\u0459",Ll:"\u22D8",ll:"\u226A",llarr:"\u21C7",llcorner:"\u231E",Lleftarrow:"\u21DA",llhard:"\u296B",lltri:"\u25FA",Lmidot:"\u013F",lmidot:"\u0140",lmoust:"\u23B0",lmoustache:"\u23B0",lnap:"\u2A89",lnapprox:"\u2A89",lnE:"\u2268",lne:"\u2A87",lneq:"\u2A87",lneqq:"\u2268",lnsim:"\u22E6",loang:"\u27EC",loarr:"\u21FD",lobrk:"\u27E6",LongLeftArrow:"\u27F5",Longleftarrow:"\u27F8",longleftarrow:"\u27F5",LongLeftRightArrow:"\u27F7",Longleftrightarrow:"\u27FA",longleftrightarrow:"\u27F7",longmapsto:"\u27FC",LongRightArrow:"\u27F6",Longrightarrow:"\u27F9",longrightarrow:"\u27F6",looparrowleft:"\u21AB",looparrowright:"\u21AC",lopar:"\u2985",Lopf:"\u{1D543}",lopf:"\u{1D55D}",loplus:"\u2A2D",lotimes:"\u2A34",lowast:"\u2217",lowbar:"_",LowerLeftArrow:"\u2199",LowerRightArrow:"\u2198",loz:"\u25CA",lozenge:"\u25CA",lozf:"\u29EB",lpar:"(",lparlt:"\u2993",lrarr:"\u21C6",lrcorner:"\u231F",lrhar:"\u21CB",lrhard:"\u296D",lrm:"\u200E",lrtri:"\u22BF",lsaquo:"\u2039",Lscr:"\u2112",lscr:"\u{1D4C1}",Lsh:"\u21B0",lsh:"\u21B0",lsim:"\u2272",lsime:"\u2A8D",lsimg:"\u2A8F",lsqb:"[",lsquo:"\u2018",lsquor:"\u201A",Lstrok:"\u0141",lstrok:"\u0142",LT:"<",Lt:"\u226A",lt:"<",ltcc:"\u2AA6",ltcir:"\u2A79",ltdot:"\u22D6",lthree:"\u22CB",ltimes:"\u22C9",ltlarr:"\u2976",ltquest:"\u2A7B",ltri:"\u25C3",ltrie:"\u22B4",ltrif:"\u25C2",ltrPar:"\u2996",lurdshar:"\u294A",luruhar:"\u2966",lvertneqq:"\u2268\uFE00",lvnE:"\u2268\uFE00",macr:"\xAF",male:"\u2642",malt:"\u2720",maltese:"\u2720",Map:"\u2905",map:"\u21A6",mapsto:"\u21A6",mapstodown:"\u21A7",mapstoleft:"\u21A4",mapstoup:"\u21A5",marker:"\u25AE",mcomma:"\u2A29",Mcy:"\u041C",mcy:"\u043C",mdash:"\u2014",mDDot:"\u223A",measuredangle:"\u2221",MediumSpace:"\u205F",Mellintrf:"\u2133",Mfr:"\u{1D510}",mfr:"\u{1D52A}",mho:"\u2127",micro:"\xB5",mid:"\u2223",midast:"*",midcir:"\u2AF0",middot:"\xB7",minus:"\u2212",minusb:"\u229F",minusd:"\u2238",minusdu:"\u2A2A",MinusPlus:"\u2213",mlcp:"\u2ADB",mldr:"\u2026",mnplus:"\u2213",models:"\u22A7",Mopf:"\u{1D544}",mopf:"\u{1D55E}",mp:"\u2213",Mscr:"\u2133",mscr:"\u{1D4C2}",mstpos:"\u223E",Mu:"\u039C",mu:"\u03BC",multimap:"\u22B8",mumap:"\u22B8",nabla:"\u2207",Nacute:"\u0143",nacute:"\u0144",nang:"\u2220\u20D2",nap:"\u2249",napE:"\u2A70\u0338",napid:"\u224B\u0338",napos:"\u0149",napprox:"\u2249",natur:"\u266E",natural:"\u266E",naturals:"\u2115",nbsp:"\xA0",nbump:"\u224E\u0338",nbumpe:"\u224F\u0338",ncap:"\u2A43",Ncaron:"\u0147",ncaron:"\u0148",Ncedil:"\u0145",ncedil:"\u0146",ncong:"\u2247",ncongdot:"\u2A6D\u0338",ncup:"\u2A42",Ncy:"\u041D",ncy:"\u043D",ndash:"\u2013",ne:"\u2260",nearhk:"\u2924",neArr:"\u21D7",nearr:"\u2197",nearrow:"\u2197",nedot:"\u2250\u0338",NegativeMediumSpace:"\u200B",NegativeThickSpace:"\u200B",NegativeThinSpace:"\u200B",NegativeVeryThinSpace:"\u200B",nequiv:"\u2262",nesear:"\u2928",nesim:"\u2242\u0338",NestedGreaterGreater:"\u226B",NestedLessLess:"\u226A",NewLine:`
`,nexist:"\u2204",nexists:"\u2204",Nfr:"\u{1D511}",nfr:"\u{1D52B}",ngE:"\u2267\u0338",nge:"\u2271",ngeq:"\u2271",ngeqq:"\u2267\u0338",ngeqslant:"\u2A7E\u0338",nges:"\u2A7E\u0338",nGg:"\u22D9\u0338",ngsim:"\u2275",nGt:"\u226B\u20D2",ngt:"\u226F",ngtr:"\u226F",nGtv:"\u226B\u0338",nhArr:"\u21CE",nharr:"\u21AE",nhpar:"\u2AF2",ni:"\u220B",nis:"\u22FC",nisd:"\u22FA",niv:"\u220B",NJcy:"\u040A",njcy:"\u045A",nlArr:"\u21CD",nlarr:"\u219A",nldr:"\u2025",nlE:"\u2266\u0338",nle:"\u2270",nLeftarrow:"\u21CD",nleftarrow:"\u219A",nLeftrightarrow:"\u21CE",nleftrightarrow:"\u21AE",nleq:"\u2270",nleqq:"\u2266\u0338",nleqslant:"\u2A7D\u0338",nles:"\u2A7D\u0338",nless:"\u226E",nLl:"\u22D8\u0338",nlsim:"\u2274",nLt:"\u226A\u20D2",nlt:"\u226E",nltri:"\u22EA",nltrie:"\u22EC",nLtv:"\u226A\u0338",nmid:"\u2224",NoBreak:"\u2060",NonBreakingSpace:"\xA0",Nopf:"\u2115",nopf:"\u{1D55F}",Not:"\u2AEC",not:"\xAC",NotCongruent:"\u2262",NotCupCap:"\u226D",NotDoubleVerticalBar:"\u2226",NotElement:"\u2209",NotEqual:"\u2260",NotEqualTilde:"\u2242\u0338",NotExists:"\u2204",NotGreater:"\u226F",NotGreaterEqual:"\u2271",NotGreaterFullEqual:"\u2267\u0338",NotGreaterGreater:"\u226B\u0338",NotGreaterLess:"\u2279",NotGreaterSlantEqual:"\u2A7E\u0338",NotGreaterTilde:"\u2275",NotHumpDownHump:"\u224E\u0338",NotHumpEqual:"\u224F\u0338",notin:"\u2209",notindot:"\u22F5\u0338",notinE:"\u22F9\u0338",notinva:"\u2209",notinvb:"\u22F7",notinvc:"\u22F6",NotLeftTriangle:"\u22EA",NotLeftTriangleBar:"\u29CF\u0338",NotLeftTriangleEqual:"\u22EC",NotLess:"\u226E",NotLessEqual:"\u2270",NotLessGreater:"\u2278",NotLessLess:"\u226A\u0338",NotLessSlantEqual:"\u2A7D\u0338",NotLessTilde:"\u2274",NotNestedGreaterGreater:"\u2AA2\u0338",NotNestedLessLess:"\u2AA1\u0338",notni:"\u220C",notniva:"\u220C",notnivb:"\u22FE",notnivc:"\u22FD",NotPrecedes:"\u2280",NotPrecedesEqual:"\u2AAF\u0338",NotPrecedesSlantEqual:"\u22E0",NotReverseElement:"\u220C",NotRightTriangle:"\u22EB",NotRightTriangleBar:"\u29D0\u0338",NotRightTriangleEqual:"\u22ED",NotSquareSubset:"\u228F\u0338",NotSquareSubsetEqual:"\u22E2",NotSquareSuperset:"\u2290\u0338",NotSquareSupersetEqual:"\u22E3",NotSubset:"\u2282\u20D2",NotSubsetEqual:"\u2288",NotSucceeds:"\u2281",NotSucceedsEqual:"\u2AB0\u0338",NotSucceedsSlantEqual:"\u22E1",NotSucceedsTilde:"\u227F\u0338",NotSuperset:"\u2283\u20D2",NotSupersetEqual:"\u2289",NotTilde:"\u2241",NotTildeEqual:"\u2244",NotTildeFullEqual:"\u2247",NotTildeTilde:"\u2249",NotVerticalBar:"\u2224",npar:"\u2226",nparallel:"\u2226",nparsl:"\u2AFD\u20E5",npart:"\u2202\u0338",npolint:"\u2A14",npr:"\u2280",nprcue:"\u22E0",npre:"\u2AAF\u0338",nprec:"\u2280",npreceq:"\u2AAF\u0338",nrArr:"\u21CF",nrarr:"\u219B",nrarrc:"\u2933\u0338",nrarrw:"\u219D\u0338",nRightarrow:"\u21CF",nrightarrow:"\u219B",nrtri:"\u22EB",nrtrie:"\u22ED",nsc:"\u2281",nsccue:"\u22E1",nsce:"\u2AB0\u0338",Nscr:"\u{1D4A9}",nscr:"\u{1D4C3}",nshortmid:"\u2224",nshortparallel:"\u2226",nsim:"\u2241",nsime:"\u2244",nsimeq:"\u2244",nsmid:"\u2224",nspar:"\u2226",nsqsube:"\u22E2",nsqsupe:"\u22E3",nsub:"\u2284",nsubE:"\u2AC5\u0338",nsube:"\u2288",nsubset:"\u2282\u20D2",nsubseteq:"\u2288",nsubseteqq:"\u2AC5\u0338",nsucc:"\u2281",nsucceq:"\u2AB0\u0338",nsup:"\u2285",nsupE:"\u2AC6\u0338",nsupe:"\u2289",nsupset:"\u2283\u20D2",nsupseteq:"\u2289",nsupseteqq:"\u2AC6\u0338",ntgl:"\u2279",Ntilde:"\xD1",ntilde:"\xF1",ntlg:"\u2278",ntriangleleft:"\u22EA",ntrianglelefteq:"\u22EC",ntriangleright:"\u22EB",ntrianglerighteq:"\u22ED",Nu:"\u039D",nu:"\u03BD",num:"#",numero:"\u2116",numsp:"\u2007",nvap:"\u224D\u20D2",nVDash:"\u22AF",nVdash:"\u22AE",nvDash:"\u22AD",nvdash:"\u22AC",nvge:"\u2265\u20D2",nvgt:">\u20D2",nvHarr:"\u2904",nvinfin:"\u29DE",nvlArr:"\u2902",nvle:"\u2264\u20D2",nvlt:"<\u20D2",nvltrie:"\u22B4\u20D2",nvrArr:"\u2903",nvrtrie:"\u22B5\u20D2",nvsim:"\u223C\u20D2",nwarhk:"\u2923",nwArr:"\u21D6",nwarr:"\u2196",nwarrow:"\u2196",nwnear:"\u2927",Oacute:"\xD3",oacute:"\xF3",oast:"\u229B",ocir:"\u229A",Ocirc:"\xD4",ocirc:"\xF4",Ocy:"\u041E",ocy:"\u043E",odash:"\u229D",Odblac:"\u0150",odblac:"\u0151",odiv:"\u2A38",odot:"\u2299",odsold:"\u29BC",OElig:"\u0152",oelig:"\u0153",ofcir:"\u29BF",Ofr:"\u{1D512}",ofr:"\u{1D52C}",ogon:"\u02DB",Ograve:"\xD2",ograve:"\xF2",ogt:"\u29C1",ohbar:"\u29B5",ohm:"\u03A9",oint:"\u222E",olarr:"\u21BA",olcir:"\u29BE",olcross:"\u29BB",oline:"\u203E",olt:"\u29C0",Omacr:"\u014C",omacr:"\u014D",Omega:"\u03A9",omega:"\u03C9",Omicron:"\u039F",omicron:"\u03BF",omid:"\u29B6",ominus:"\u2296",Oopf:"\u{1D546}",oopf:"\u{1D560}",opar:"\u29B7",OpenCurlyDoubleQuote:"\u201C",OpenCurlyQuote:"\u2018",operp:"\u29B9",oplus:"\u2295",Or:"\u2A54",or:"\u2228",orarr:"\u21BB",ord:"\u2A5D",order:"\u2134",orderof:"\u2134",ordf:"\xAA",ordm:"\xBA",origof:"\u22B6",oror:"\u2A56",orslope:"\u2A57",orv:"\u2A5B",oS:"\u24C8",Oscr:"\u{1D4AA}",oscr:"\u2134",Oslash:"\xD8",oslash:"\xF8",osol:"\u2298",Otilde:"\xD5",otilde:"\xF5",Otimes:"\u2A37",otimes:"\u2297",otimesas:"\u2A36",Ouml:"\xD6",ouml:"\xF6",ovbar:"\u233D",OverBar:"\u203E",OverBrace:"\u23DE",OverBracket:"\u23B4",OverParenthesis:"\u23DC",par:"\u2225",para:"\xB6",parallel:"\u2225",parsim:"\u2AF3",parsl:"\u2AFD",part:"\u2202",PartialD:"\u2202",Pcy:"\u041F",pcy:"\u043F",percnt:"%",period:".",permil:"\u2030",perp:"\u22A5",pertenk:"\u2031",Pfr:"\u{1D513}",pfr:"\u{1D52D}",Phi:"\u03A6",phi:"\u03C6",phiv:"\u03D5",phmmat:"\u2133",phone:"\u260E",Pi:"\u03A0",pi:"\u03C0",pitchfork:"\u22D4",piv:"\u03D6",planck:"\u210F",planckh:"\u210E",plankv:"\u210F",plus:"+",plusacir:"\u2A23",plusb:"\u229E",pluscir:"\u2A22",plusdo:"\u2214",plusdu:"\u2A25",pluse:"\u2A72",PlusMinus:"\xB1",plusmn:"\xB1",plussim:"\u2A26",plustwo:"\u2A27",pm:"\xB1",Poincareplane:"\u210C",pointint:"\u2A15",Popf:"\u2119",popf:"\u{1D561}",pound:"\xA3",Pr:"\u2ABB",pr:"\u227A",prap:"\u2AB7",prcue:"\u227C",prE:"\u2AB3",pre:"\u2AAF",prec:"\u227A",precapprox:"\u2AB7",preccurlyeq:"\u227C",Precedes:"\u227A",PrecedesEqual:"\u2AAF",PrecedesSlantEqual:"\u227C",PrecedesTilde:"\u227E",preceq:"\u2AAF",precnapprox:"\u2AB9",precneqq:"\u2AB5",precnsim:"\u22E8",precsim:"\u227E",Prime:"\u2033",prime:"\u2032",primes:"\u2119",prnap:"\u2AB9",prnE:"\u2AB5",prnsim:"\u22E8",prod:"\u220F",Product:"\u220F",profalar:"\u232E",profline:"\u2312",profsurf:"\u2313",prop:"\u221D",Proportion:"\u2237",Proportional:"\u221D",propto:"\u221D",prsim:"\u227E",prurel:"\u22B0",Pscr:"\u{1D4AB}",pscr:"\u{1D4C5}",Psi:"\u03A8",psi:"\u03C8",puncsp:"\u2008",Qfr:"\u{1D514}",qfr:"\u{1D52E}",qint:"\u2A0C",Qopf:"\u211A",qopf:"\u{1D562}",qprime:"\u2057",Qscr:"\u{1D4AC}",qscr:"\u{1D4C6}",quaternions:"\u210D",quatint:"\u2A16",quest:"?",questeq:"\u225F",QUOT:'"',quot:'"',rAarr:"\u21DB",race:"\u223D\u0331",Racute:"\u0154",racute:"\u0155",radic:"\u221A",raemptyv:"\u29B3",Rang:"\u27EB",rang:"\u27E9",rangd:"\u2992",range:"\u29A5",rangle:"\u27E9",raquo:"\xBB",Rarr:"\u21A0",rArr:"\u21D2",rarr:"\u2192",rarrap:"\u2975",rarrb:"\u21E5",rarrbfs:"\u2920",rarrc:"\u2933",rarrfs:"\u291E",rarrhk:"\u21AA",rarrlp:"\u21AC",rarrpl:"\u2945",rarrsim:"\u2974",Rarrtl:"\u2916",rarrtl:"\u21A3",rarrw:"\u219D",rAtail:"\u291C",ratail:"\u291A",ratio:"\u2236",rationals:"\u211A",RBarr:"\u2910",rBarr:"\u290F",rbarr:"\u290D",rbbrk:"\u2773",rbrace:"}",rbrack:"]",rbrke:"\u298C",rbrksld:"\u298E",rbrkslu:"\u2990",Rcaron:"\u0158",rcaron:"\u0159",Rcedil:"\u0156",rcedil:"\u0157",rceil:"\u2309",rcub:"}",Rcy:"\u0420",rcy:"\u0440",rdca:"\u2937",rdldhar:"\u2969",rdquo:"\u201D",rdquor:"\u201D",rdsh:"\u21B3",Re:"\u211C",real:"\u211C",realine:"\u211B",realpart:"\u211C",reals:"\u211D",rect:"\u25AD",REG:"\xAE",reg:"\xAE",ReverseElement:"\u220B",ReverseEquilibrium:"\u21CB",ReverseUpEquilibrium:"\u296F",rfisht:"\u297D",rfloor:"\u230B",Rfr:"\u211C",rfr:"\u{1D52F}",rHar:"\u2964",rhard:"\u21C1",rharu:"\u21C0",rharul:"\u296C",Rho:"\u03A1",rho:"\u03C1",rhov:"\u03F1",RightAngleBracket:"\u27E9",RightArrow:"\u2192",Rightarrow:"\u21D2",rightarrow:"\u2192",RightArrowBar:"\u21E5",RightArrowLeftArrow:"\u21C4",rightarrowtail:"\u21A3",RightCeiling:"\u2309",RightDoubleBracket:"\u27E7",RightDownTeeVector:"\u295D",RightDownVector:"\u21C2",RightDownVectorBar:"\u2955",RightFloor:"\u230B",rightharpoondown:"\u21C1",rightharpoonup:"\u21C0",rightleftarrows:"\u21C4",rightleftharpoons:"\u21CC",rightrightarrows:"\u21C9",rightsquigarrow:"\u219D",RightTee:"\u22A2",RightTeeArrow:"\u21A6",RightTeeVector:"\u295B",rightthreetimes:"\u22CC",RightTriangle:"\u22B3",RightTriangleBar:"\u29D0",RightTriangleEqual:"\u22B5",RightUpDownVector:"\u294F",RightUpTeeVector:"\u295C",RightUpVector:"\u21BE",RightUpVectorBar:"\u2954",RightVector:"\u21C0",RightVectorBar:"\u2953",ring:"\u02DA",risingdotseq:"\u2253",rlarr:"\u21C4",rlhar:"\u21CC",rlm:"\u200F",rmoust:"\u23B1",rmoustache:"\u23B1",rnmid:"\u2AEE",roang:"\u27ED",roarr:"\u21FE",robrk:"\u27E7",ropar:"\u2986",Ropf:"\u211D",ropf:"\u{1D563}",roplus:"\u2A2E",rotimes:"\u2A35",RoundImplies:"\u2970",rpar:")",rpargt:"\u2994",rppolint:"\u2A12",rrarr:"\u21C9",Rrightarrow:"\u21DB",rsaquo:"\u203A",Rscr:"\u211B",rscr:"\u{1D4C7}",Rsh:"\u21B1",rsh:"\u21B1",rsqb:"]",rsquo:"\u2019",rsquor:"\u2019",rthree:"\u22CC",rtimes:"\u22CA",rtri:"\u25B9",rtrie:"\u22B5",rtrif:"\u25B8",rtriltri:"\u29CE",RuleDelayed:"\u29F4",ruluhar:"\u2968",rx:"\u211E",Sacute:"\u015A",sacute:"\u015B",sbquo:"\u201A",Sc:"\u2ABC",sc:"\u227B",scap:"\u2AB8",Scaron:"\u0160",scaron:"\u0161",sccue:"\u227D",scE:"\u2AB4",sce:"\u2AB0",Scedil:"\u015E",scedil:"\u015F",Scirc:"\u015C",scirc:"\u015D",scnap:"\u2ABA",scnE:"\u2AB6",scnsim:"\u22E9",scpolint:"\u2A13",scsim:"\u227F",Scy:"\u0421",scy:"\u0441",sdot:"\u22C5",sdotb:"\u22A1",sdote:"\u2A66",searhk:"\u2925",seArr:"\u21D8",searr:"\u2198",searrow:"\u2198",sect:"\xA7",semi:";",seswar:"\u2929",setminus:"\u2216",setmn:"\u2216",sext:"\u2736",Sfr:"\u{1D516}",sfr:"\u{1D530}",sfrown:"\u2322",sharp:"\u266F",SHCHcy:"\u0429",shchcy:"\u0449",SHcy:"\u0428",shcy:"\u0448",ShortDownArrow:"\u2193",ShortLeftArrow:"\u2190",shortmid:"\u2223",shortparallel:"\u2225",ShortRightArrow:"\u2192",ShortUpArrow:"\u2191",shy:"\xAD",Sigma:"\u03A3",sigma:"\u03C3",sigmaf:"\u03C2",sigmav:"\u03C2",sim:"\u223C",simdot:"\u2A6A",sime:"\u2243",simeq:"\u2243",simg:"\u2A9E",simgE:"\u2AA0",siml:"\u2A9D",simlE:"\u2A9F",simne:"\u2246",simplus:"\u2A24",simrarr:"\u2972",slarr:"\u2190",SmallCircle:"\u2218",smallsetminus:"\u2216",smashp:"\u2A33",smeparsl:"\u29E4",smid:"\u2223",smile:"\u2323",smt:"\u2AAA",smte:"\u2AAC",smtes:"\u2AAC\uFE00",SOFTcy:"\u042C",softcy:"\u044C",sol:"/",solb:"\u29C4",solbar:"\u233F",Sopf:"\u{1D54A}",sopf:"\u{1D564}",spades:"\u2660",spadesuit:"\u2660",spar:"\u2225",sqcap:"\u2293",sqcaps:"\u2293\uFE00",sqcup:"\u2294",sqcups:"\u2294\uFE00",Sqrt:"\u221A",sqsub:"\u228F",sqsube:"\u2291",sqsubset:"\u228F",sqsubseteq:"\u2291",sqsup:"\u2290",sqsupe:"\u2292",sqsupset:"\u2290",sqsupseteq:"\u2292",squ:"\u25A1",Square:"\u25A1",square:"\u25A1",SquareIntersection:"\u2293",SquareSubset:"\u228F",SquareSubsetEqual:"\u2291",SquareSuperset:"\u2290",SquareSupersetEqual:"\u2292",SquareUnion:"\u2294",squarf:"\u25AA",squf:"\u25AA",srarr:"\u2192",Sscr:"\u{1D4AE}",sscr:"\u{1D4C8}",ssetmn:"\u2216",ssmile:"\u2323",sstarf:"\u22C6",Star:"\u22C6",star:"\u2606",starf:"\u2605",straightepsilon:"\u03F5",straightphi:"\u03D5",strns:"\xAF",Sub:"\u22D0",sub:"\u2282",subdot:"\u2ABD",subE:"\u2AC5",sube:"\u2286",subedot:"\u2AC3",submult:"\u2AC1",subnE:"\u2ACB",subne:"\u228A",subplus:"\u2ABF",subrarr:"\u2979",Subset:"\u22D0",subset:"\u2282",subseteq:"\u2286",subseteqq:"\u2AC5",SubsetEqual:"\u2286",subsetneq:"\u228A",subsetneqq:"\u2ACB",subsim:"\u2AC7",subsub:"\u2AD5",subsup:"\u2AD3",succ:"\u227B",succapprox:"\u2AB8",succcurlyeq:"\u227D",Succeeds:"\u227B",SucceedsEqual:"\u2AB0",SucceedsSlantEqual:"\u227D",SucceedsTilde:"\u227F",succeq:"\u2AB0",succnapprox:"\u2ABA",succneqq:"\u2AB6",succnsim:"\u22E9",succsim:"\u227F",SuchThat:"\u220B",Sum:"\u2211",sum:"\u2211",sung:"\u266A",Sup:"\u22D1",sup:"\u2283",sup1:"\xB9",sup2:"\xB2",sup3:"\xB3",supdot:"\u2ABE",supdsub:"\u2AD8",supE:"\u2AC6",supe:"\u2287",supedot:"\u2AC4",Superset:"\u2283",SupersetEqual:"\u2287",suphsol:"\u27C9",suphsub:"\u2AD7",suplarr:"\u297B",supmult:"\u2AC2",supnE:"\u2ACC",supne:"\u228B",supplus:"\u2AC0",Supset:"\u22D1",supset:"\u2283",supseteq:"\u2287",supseteqq:"\u2AC6",supsetneq:"\u228B",supsetneqq:"\u2ACC",supsim:"\u2AC8",supsub:"\u2AD4",supsup:"\u2AD6",swarhk:"\u2926",swArr:"\u21D9",swarr:"\u2199",swarrow:"\u2199",swnwar:"\u292A",szlig:"\xDF",Tab:"	",target:"\u2316",Tau:"\u03A4",tau:"\u03C4",tbrk:"\u23B4",Tcaron:"\u0164",tcaron:"\u0165",Tcedil:"\u0162",tcedil:"\u0163",Tcy:"\u0422",tcy:"\u0442",tdot:"\u20DB",telrec:"\u2315",Tfr:"\u{1D517}",tfr:"\u{1D531}",there4:"\u2234",Therefore:"\u2234",therefore:"\u2234",Theta:"\u0398",theta:"\u03B8",thetasym:"\u03D1",thetav:"\u03D1",thickapprox:"\u2248",thicksim:"\u223C",ThickSpace:"\u205F\u200A",thinsp:"\u2009",ThinSpace:"\u2009",thkap:"\u2248",thksim:"\u223C",THORN:"\xDE",thorn:"\xFE",Tilde:"\u223C",tilde:"\u02DC",TildeEqual:"\u2243",TildeFullEqual:"\u2245",TildeTilde:"\u2248",times:"\xD7",timesb:"\u22A0",timesbar:"\u2A31",timesd:"\u2A30",tint:"\u222D",toea:"\u2928",top:"\u22A4",topbot:"\u2336",topcir:"\u2AF1",Topf:"\u{1D54B}",topf:"\u{1D565}",topfork:"\u2ADA",tosa:"\u2929",tprime:"\u2034",TRADE:"\u2122",trade:"\u2122",triangle:"\u25B5",triangledown:"\u25BF",triangleleft:"\u25C3",trianglelefteq:"\u22B4",triangleq:"\u225C",triangleright:"\u25B9",trianglerighteq:"\u22B5",tridot:"\u25EC",trie:"\u225C",triminus:"\u2A3A",TripleDot:"\u20DB",triplus:"\u2A39",trisb:"\u29CD",tritime:"\u2A3B",trpezium:"\u23E2",Tscr:"\u{1D4AF}",tscr:"\u{1D4C9}",TScy:"\u0426",tscy:"\u0446",TSHcy:"\u040B",tshcy:"\u045B",Tstrok:"\u0166",tstrok:"\u0167",twixt:"\u226C",twoheadleftarrow:"\u219E",twoheadrightarrow:"\u21A0",Uacute:"\xDA",uacute:"\xFA",Uarr:"\u219F",uArr:"\u21D1",uarr:"\u2191",Uarrocir:"\u2949",Ubrcy:"\u040E",ubrcy:"\u045E",Ubreve:"\u016C",ubreve:"\u016D",Ucirc:"\xDB",ucirc:"\xFB",Ucy:"\u0423",ucy:"\u0443",udarr:"\u21C5",Udblac:"\u0170",udblac:"\u0171",udhar:"\u296E",ufisht:"\u297E",Ufr:"\u{1D518}",ufr:"\u{1D532}",Ugrave:"\xD9",ugrave:"\xF9",uHar:"\u2963",uharl:"\u21BF",uharr:"\u21BE",uhblk:"\u2580",ulcorn:"\u231C",ulcorner:"\u231C",ulcrop:"\u230F",ultri:"\u25F8",Umacr:"\u016A",umacr:"\u016B",uml:"\xA8",UnderBar:"_",UnderBrace:"\u23DF",UnderBracket:"\u23B5",UnderParenthesis:"\u23DD",Union:"\u22C3",UnionPlus:"\u228E",Uogon:"\u0172",uogon:"\u0173",Uopf:"\u{1D54C}",uopf:"\u{1D566}",UpArrow:"\u2191",Uparrow:"\u21D1",uparrow:"\u2191",UpArrowBar:"\u2912",UpArrowDownArrow:"\u21C5",UpDownArrow:"\u2195",Updownarrow:"\u21D5",updownarrow:"\u2195",UpEquilibrium:"\u296E",upharpoonleft:"\u21BF",upharpoonright:"\u21BE",uplus:"\u228E",UpperLeftArrow:"\u2196",UpperRightArrow:"\u2197",Upsi:"\u03D2",upsi:"\u03C5",upsih:"\u03D2",Upsilon:"\u03A5",upsilon:"\u03C5",UpTee:"\u22A5",UpTeeArrow:"\u21A5",upuparrows:"\u21C8",urcorn:"\u231D",urcorner:"\u231D",urcrop:"\u230E",Uring:"\u016E",uring:"\u016F",urtri:"\u25F9",Uscr:"\u{1D4B0}",uscr:"\u{1D4CA}",utdot:"\u22F0",Utilde:"\u0168",utilde:"\u0169",utri:"\u25B5",utrif:"\u25B4",uuarr:"\u21C8",Uuml:"\xDC",uuml:"\xFC",uwangle:"\u29A7",vangrt:"\u299C",varepsilon:"\u03F5",varkappa:"\u03F0",varnothing:"\u2205",varphi:"\u03D5",varpi:"\u03D6",varpropto:"\u221D",vArr:"\u21D5",varr:"\u2195",varrho:"\u03F1",varsigma:"\u03C2",varsubsetneq:"\u228A\uFE00",varsubsetneqq:"\u2ACB\uFE00",varsupsetneq:"\u228B\uFE00",varsupsetneqq:"\u2ACC\uFE00",vartheta:"\u03D1",vartriangleleft:"\u22B2",vartriangleright:"\u22B3",Vbar:"\u2AEB",vBar:"\u2AE8",vBarv:"\u2AE9",Vcy:"\u0412",vcy:"\u0432",VDash:"\u22AB",Vdash:"\u22A9",vDash:"\u22A8",vdash:"\u22A2",Vdashl:"\u2AE6",Vee:"\u22C1",vee:"\u2228",veebar:"\u22BB",veeeq:"\u225A",vellip:"\u22EE",Verbar:"\u2016",verbar:"|",Vert:"\u2016",vert:"|",VerticalBar:"\u2223",VerticalLine:"|",VerticalSeparator:"\u2758",VerticalTilde:"\u2240",VeryThinSpace:"\u200A",Vfr:"\u{1D519}",vfr:"\u{1D533}",vltri:"\u22B2",vnsub:"\u2282\u20D2",vnsup:"\u2283\u20D2",Vopf:"\u{1D54D}",vopf:"\u{1D567}",vprop:"\u221D",vrtri:"\u22B3",Vscr:"\u{1D4B1}",vscr:"\u{1D4CB}",vsubnE:"\u2ACB\uFE00",vsubne:"\u228A\uFE00",vsupnE:"\u2ACC\uFE00",vsupne:"\u228B\uFE00",Vvdash:"\u22AA",vzigzag:"\u299A",Wcirc:"\u0174",wcirc:"\u0175",wedbar:"\u2A5F",Wedge:"\u22C0",wedge:"\u2227",wedgeq:"\u2259",weierp:"\u2118",Wfr:"\u{1D51A}",wfr:"\u{1D534}",Wopf:"\u{1D54E}",wopf:"\u{1D568}",wp:"\u2118",wr:"\u2240",wreath:"\u2240",Wscr:"\u{1D4B2}",wscr:"\u{1D4CC}",xcap:"\u22C2",xcirc:"\u25EF",xcup:"\u22C3",xdtri:"\u25BD",Xfr:"\u{1D51B}",xfr:"\u{1D535}",xhArr:"\u27FA",xharr:"\u27F7",Xi:"\u039E",xi:"\u03BE",xlArr:"\u27F8",xlarr:"\u27F5",xmap:"\u27FC",xnis:"\u22FB",xodot:"\u2A00",Xopf:"\u{1D54F}",xopf:"\u{1D569}",xoplus:"\u2A01",xotime:"\u2A02",xrArr:"\u27F9",xrarr:"\u27F6",Xscr:"\u{1D4B3}",xscr:"\u{1D4CD}",xsqcup:"\u2A06",xuplus:"\u2A04",xutri:"\u25B3",xvee:"\u22C1",xwedge:"\u22C0",Yacute:"\xDD",yacute:"\xFD",YAcy:"\u042F",yacy:"\u044F",Ycirc:"\u0176",ycirc:"\u0177",Ycy:"\u042B",ycy:"\u044B",yen:"\xA5",Yfr:"\u{1D51C}",yfr:"\u{1D536}",YIcy:"\u0407",yicy:"\u0457",Yopf:"\u{1D550}",yopf:"\u{1D56A}",Yscr:"\u{1D4B4}",yscr:"\u{1D4CE}",YUcy:"\u042E",yucy:"\u044E",Yuml:"\u0178",yuml:"\xFF",Zacute:"\u0179",zacute:"\u017A",Zcaron:"\u017D",zcaron:"\u017E",Zcy:"\u0417",zcy:"\u0437",Zdot:"\u017B",zdot:"\u017C",zeetrf:"\u2128",ZeroWidthSpace:"\u200B",Zeta:"\u0396",zeta:"\u03B6",Zfr:"\u2128",zfr:"\u{1D537}",ZHcy:"\u0416",zhcy:"\u0436",zigrarr:"\u21DD",Zopf:"\u2124",zopf:"\u{1D56B}",Zscr:"\u{1D4B5}",zscr:"\u{1D4CF}",zwj:"\u200D",zwnj:"\u200C"},h={ound:"pound",pond:"pound",poubd:"pound",poud:"pound",poumd:"pound",poun:"pound",pund:"pound",zvbj:"zwnj",zvhj:"zwnj",zvjb:"zwnj",zvjh:"zwnj",zvjm:"zwnj",zvjn:"zwnj",zvmj:"zwnj",zvng:"zwnj",zvnh:"zwnj",zvnj:"zwnj",zvnk:"zwnj",zvnm:"zwnj",zwbj:"zwnj",zwhj:"zwnj",zwjb:"zwnj",zwjh:"zwnj",zwjm:"zwnj",zwjn:"zwnj",zwmj:"zwnj",zwng:"zwnj",zwnh:"zwnj",zwnk:"zwnj",zwnm:"zwnj",bsp:"nbsp",nsp:"nbsp",nbp:"nbsp",nbs:"nbsp"},a={A:{a:["Aacute"],b:["Abreve"],c:["Acirc","Acy"],E:["AElig"],f:["Afr"],g:["Agrave"],l:["Alpha"],m:["Amacr"],M:["AMP"],n:["And"],o:["Aogon","Aopf"],p:["ApplyFunction"],r:["Aring"],s:["Ascr","Assign"],t:["Atilde"],u:["Auml"]},a:{a:["aacute"],b:["abreve"],c:["ac","acd","acE","acirc","acute","acy"],e:["aelig"],f:["af","afr"],g:["agrave"],l:["alefsym","aleph","alpha"],m:["amacr","amalg","amp"],n:["and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr"],o:["aogon","aopf"],p:["ap","apacir","apE","ape","apid","apos","approx","approxeq"],r:["aring"],s:["ascr","ast","asymp","asympeq"],t:["atilde"],u:["auml"],w:["awconint","awint"]},b:{a:["backcong","backepsilon","backprime","backsim","backsimeq","barvee","barwed","barwedge"],b:["bbrk","bbrktbrk"],c:["bcong","bcy"],d:["bdquo"],e:["becaus","because","bemptyv","bepsi","bernou","beta","beth","between"],f:["bfr"],i:["bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge"],k:["bkarow"],l:["blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block"],n:["bne","bnequiv","bnot"],N:["bNot"],o:["bopf","bot","bottom","bowtie","boxbox","boxDL","boxDl","boxdL","boxdl","boxDR","boxDr","boxdR","boxdr","boxH","boxh","boxHD","boxHd","boxhD","boxhd","boxHU","boxHu","boxhU","boxhu","boxminus","boxplus","boxtimes","boxUL","boxUl","boxuL","boxul","boxUR","boxUr","boxuR","boxur","boxV","boxv","boxVH","boxVh","boxvH","boxvh","boxVL","boxVl","boxvL","boxvl","boxVR","boxVr","boxvR","boxvr"],p:["bprime"],r:["breve","brvbar"],s:["bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub"],u:["bull","bullet","bump","bumpE","bumpe","bumpeq"]},B:{a:["Backslash","Barv","Barwed"],c:["Bcy"],e:["Because","Bernoullis","Beta"],f:["Bfr"],o:["Bopf"],r:["Breve"],s:["Bscr"],u:["Bumpeq"]},C:{a:["Cacute","Cap","CapitalDifferentialD","Cayleys"],c:["Ccaron","Ccedil","Ccirc","Cconint"],d:["Cdot"],e:["Cedilla","CenterDot"],f:["Cfr"],H:["CHcy"],h:["Chi"],i:["CircleDot","CircleMinus","CirclePlus","CircleTimes"],l:["ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote"],o:["Colon","Colone","Congruent","Conint","ContourIntegral","Copf","Coproduct","CounterClockwiseContourIntegral"],O:["COPY"],r:["Cross"],s:["Cscr"],u:["Cup","CupCap"]},c:{a:["cacute","cap","capand","capbrcup","capcap","capcup","capdot","caps","caret","caron"],c:["ccaps","ccaron","ccedil","ccirc","ccups","ccupssm"],d:["cdot"],e:["cedil","cemptyv","cent","centerdot"],f:["cfr"],h:["chcy","check","checkmark","chi"],i:["cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","circledR","circledS","cirE","cire","cirfnint","cirmid","cirscir"],l:["clubs","clubsuit"],o:["colon","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","conint","copf","coprod","copy","copysr"],r:["crarr","cross"],s:["cscr","csub","csube","csup","csupe"],t:["ctdot"],u:["cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","cupbrcap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed"],w:["cwconint","cwint"],y:["cylcty"]},D:{a:["Dagger","Darr","Dashv"],c:["Dcaron","Dcy"],D:["DD","DDotrahd"],e:["Del","Delta"],f:["Dfr"],i:["DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","Diamond","DifferentialD"],J:["DJcy"],o:["Dopf","Dot","DotDot","DotEqual","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","Downarrow","DownArrowBar","DownArrowUpArrow","DownBreve","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow"],s:["Dscr","Dstrok"],S:["DScy"],Z:["DZcy"]},d:{a:["dagger","daleth","darr","dash","dashv"],A:["dArr"],b:["dbkarow","dblac"],c:["dcaron","dcy"],d:["dd","ddagger","ddarr","ddotseq"],e:["deg","delta","demptyv"],f:["dfisht","dfr"],H:["dHar"],h:["dharl","dharr"],i:["diam","diamond","diamondsuit","diams","die","digamma","disin","div","divide","divideontimes","divonx"],j:["djcy"],l:["dlcorn","dlcrop"],o:["dollar","dopf","dot","doteq","doteqdot","dotminus","dotplus","dotsquare","doublebarwedge","downarrow","downdownarrows","downharpoonleft","downharpoonright"],r:["drbkarow","drcorn","drcrop"],s:["dscr","dscy","dsol","dstrok"],t:["dtdot","dtri","dtrif"],u:["duarr","duhar"],w:["dwangle"],z:["dzcy","dzigrarr"]},E:{a:["Eacute"],c:["Ecaron","Ecirc","Ecy"],d:["Edot"],f:["Efr"],g:["Egrave"],l:["Element"],m:["Emacr","EmptySmallSquare","EmptyVerySmallSquare"],N:["ENG"],o:["Eogon","Eopf"],p:["Epsilon"],q:["Equal","EqualTilde","Equilibrium"],s:["Escr","Esim"],t:["Eta"],T:["ETH"],u:["Euml"],x:["Exists","ExponentialE"]},e:{a:["eacute","easter"],c:["ecaron","ecir","ecirc","ecolon","ecy"],D:["eDDot","eDot"],d:["edot"],e:["ee"],f:["efDot","efr"],g:["eg","egrave","egs","egsdot"],l:["el","elinters","ell","els","elsdot"],m:["emacr","empty","emptyset","emptyv","emsp","emsp13","emsp14"],n:["eng","ensp"],o:["eogon","eopf"],p:["epar","eparsl","eplus","epsi","epsilon","epsiv"],q:["eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","equals","equest","equiv","equivDD","eqvparsl"],r:["erarr","erDot"],s:["escr","esdot","esim"],t:["eta","eth"],u:["euml","euro"],x:["excl","exist","expectation","exponentiale"]},f:{a:["fallingdotseq"],c:["fcy"],e:["female"],f:["ffilig","fflig","ffllig","ffr"],i:["filig"],j:["fjlig"],l:["flat","fllig","fltns"],n:["fnof"],o:["fopf","forall","fork","forkv"],p:["fpartint"],r:["frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown"],s:["fscr"]},F:{c:["Fcy"],f:["Ffr"],i:["FilledSmallSquare","FilledVerySmallSquare"],o:["Fopf","ForAll","Fouriertrf"],s:["Fscr"]},g:{a:["gacute","gamma","gammad","gap"],b:["gbreve"],c:["gcirc","gcy"],d:["gdot"],E:["gE","gEl"],e:["ge","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles"],f:["gfr"],g:["gg","ggg"],i:["gimel"],j:["gjcy"],l:["gl","gla","glE","glj"],n:["gnap","gnapprox","gnE","gne","gneq","gneqq","gnsim"],o:["gopf"],r:["grave"],s:["gscr","gsim","gsime","gsiml"],t:["gt","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim"],v:["gvertneqq","gvnE"]},G:{a:["Gamma","Gammad"],b:["Gbreve"],c:["Gcedil","Gcirc","Gcy"],d:["Gdot"],f:["Gfr"],g:["Gg"],J:["GJcy"],o:["Gopf"],r:["GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde"],s:["Gscr"],T:["GT"],t:["Gt"]},H:{a:["Hacek","Hat"],A:["HARDcy"],c:["Hcirc"],f:["Hfr"],i:["HilbertSpace"],o:["Hopf","HorizontalLine"],s:["Hscr","Hstrok"],u:["HumpDownHump","HumpEqual"]},h:{a:["hairsp","half","hamilt","hardcy","harr","harrcir","harrw"],A:["hArr"],b:["hbar"],c:["hcirc"],e:["hearts","heartsuit","hellip","hercon"],f:["hfr"],k:["hksearow","hkswarow"],o:["hoarr","homtht","hookleftarrow","hookrightarrow","hopf","horbar"],s:["hscr","hslash","hstrok"],y:["hybull","hyphen"]},I:{a:["Iacute"],c:["Icirc","Icy"],d:["Idot"],E:["IEcy"],f:["Ifr"],g:["Igrave"],J:["IJlig"],m:["Im","Imacr","ImaginaryI","Implies"],n:["Int","Integral","Intersection","InvisibleComma","InvisibleTimes"],O:["IOcy"],o:["Iogon","Iopf","Iota"],s:["Iscr"],t:["Itilde"],u:["Iukcy","Iuml"]},i:{a:["iacute"],c:["ic","icirc","icy"],e:["iecy","iexcl"],f:["iff","ifr"],g:["igrave"],i:["ii","iiiint","iiint","iinfin","iiota"],j:["ijlig"],m:["imacr","image","imagline","imagpart","imath","imof","imped"],n:["in","incare","infin","infintie","inodot","int","intcal","integers","intercal","intlarhk","intprod"],o:["iocy","iogon","iopf","iota"],p:["iprod"],q:["iquest"],s:["iscr","isin","isindot","isinE","isins","isinsv","isinv"],t:["it","itilde"],u:["iukcy","iuml"]},J:{c:["Jcirc","Jcy"],f:["Jfr"],o:["Jopf"],s:["Jscr","Jsercy"],u:["Jukcy"]},j:{c:["jcirc","jcy"],f:["jfr"],m:["jmath"],o:["jopf"],s:["jscr","jsercy"],u:["jukcy"]},K:{a:["Kappa"],c:["Kcedil","Kcy"],f:["Kfr"],H:["KHcy"],J:["KJcy"],o:["Kopf"],s:["Kscr"]},k:{a:["kappa","kappav"],c:["kcedil","kcy"],f:["kfr"],g:["kgreen"],h:["khcy"],j:["kjcy"],o:["kopf"],s:["kscr"]},l:{A:["lAarr","lArr","lAtail"],a:["lacute","laemptyv","lagran","lambda","lang","langd","langle","lap","laquo","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","late","lates"],B:["lBarr"],b:["lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu"],c:["lcaron","lcedil","lceil","lcub","lcy"],d:["ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh"],E:["lE","lEg"],e:["le","leftarrow","leftarrowtail","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leftthreetimes","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","lessgtr","lesssim"],f:["lfisht","lfloor","lfr"],g:["lg","lgE"],H:["lHar"],h:["lhard","lharu","lharul","lhblk"],j:["ljcy"],l:["ll","llarr","llcorner","llhard","lltri"],m:["lmidot","lmoust","lmoustache"],n:["lnap","lnapprox","lnE","lne","lneq","lneqq","lnsim"],o:["loang","loarr","lobrk","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lopar","lopf","loplus","lotimes","lowast","lowbar","loz","lozenge","lozf"],p:["lpar","lparlt"],r:["lrarr","lrcorner","lrhar","lrhard","lrm","lrtri"],s:["lsaquo","lscr","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","lstrok"],t:["lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrPar"],u:["lurdshar","luruhar"],v:["lvertneqq","lvnE"]},L:{a:["Lacute","Lambda","Lang","Laplacetrf","Larr"],c:["Lcaron","Lcedil","Lcy"],e:["LeftAngleBracket","LeftArrow","Leftarrow","LeftArrowBar","LeftArrowRightArrow","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","LeftRightArrow","Leftrightarrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","LessEqualGreater","LessFullEqual","LessGreater","LessLess","LessSlantEqual","LessTilde"],f:["Lfr"],J:["LJcy"],l:["Ll","Lleftarrow"],m:["Lmidot"],o:["LongLeftArrow","Longleftarrow","LongLeftRightArrow","Longleftrightarrow","LongRightArrow","Longrightarrow","Lopf","LowerLeftArrow","LowerRightArrow"],s:["Lscr","Lsh","Lstrok"],T:["LT"],t:["Lt"]},m:{a:["macr","male","malt","maltese","map","mapsto","mapstodown","mapstoleft","mapstoup","marker"],c:["mcomma","mcy"],d:["mdash"],D:["mDDot"],e:["measuredangle"],f:["mfr"],h:["mho"],i:["micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu"],l:["mlcp","mldr"],n:["mnplus"],o:["models","mopf"],p:["mp"],s:["mscr","mstpos"],u:["mu","multimap","mumap"]},M:{a:["Map"],c:["Mcy"],e:["MediumSpace","Mellintrf"],f:["Mfr"],i:["MinusPlus"],o:["Mopf"],s:["Mscr"],u:["Mu"]},n:{a:["nabla","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals"],b:["nbsp","nbump","nbumpe"],c:["ncap","ncaron","ncedil","ncong","ncongdot","ncup","ncy"],d:["ndash"],e:["ne","nearhk","neArr","nearr","nearrow","nedot","nequiv","nesear","nesim","nexist","nexists"],f:["nfr"],g:["ngE","nge","ngeq","ngeqq","ngeqslant","nges","ngsim","ngt","ngtr"],G:["nGg","nGt","nGtv"],h:["nhArr","nharr","nhpar"],i:["ni","nis","nisd","niv"],j:["njcy"],l:["nlArr","nlarr","nldr","nlE","nle","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nlsim","nlt","nltri","nltrie"],L:["nLeftarrow","nLeftrightarrow","nLl","nLt","nLtv"],m:["nmid"],o:["nopf","not","notin","notindot","notinE","notinva","notinvb","notinvc","notni","notniva","notnivb","notnivc"],p:["npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq"],r:["nrArr","nrarr","nrarrc","nrarrw","nrightarrow","nrtri","nrtrie"],R:["nRightarrow"],s:["nsc","nsccue","nsce","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq"],t:["ntgl","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq"],u:["nu","num","numero","numsp"],v:["nvap","nvDash","nvdash","nvge","nvgt","nvHarr","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim"],V:["nVDash","nVdash"],w:["nwarhk","nwArr","nwarr","nwarrow","nwnear"]},N:{a:["Nacute"],c:["Ncaron","Ncedil","Ncy"],e:["NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","NestedGreaterGreater","NestedLessLess","NewLine"],f:["Nfr"],J:["NJcy"],o:["NoBreak","NonBreakingSpace","Nopf","Not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar"],s:["Nscr"],t:["Ntilde"],u:["Nu"]},O:{a:["Oacute"],c:["Ocirc","Ocy"],d:["Odblac"],E:["OElig"],f:["Ofr"],g:["Ograve"],m:["Omacr","Omega","Omicron"],o:["Oopf"],p:["OpenCurlyDoubleQuote","OpenCurlyQuote"],r:["Or"],s:["Oscr","Oslash"],t:["Otilde","Otimes"],u:["Ouml"],v:["OverBar","OverBrace","OverBracket","OverParenthesis"]},o:{a:["oacute","oast"],c:["ocir","ocirc","ocy"],d:["odash","odblac","odiv","odot","odsold"],e:["oelig"],f:["ofcir","ofr"],g:["ogon","ograve","ogt"],h:["ohbar","ohm"],i:["oint"],l:["olarr","olcir","olcross","oline","olt"],m:["omacr","omega","omicron","omid","ominus"],o:["oopf"],p:["opar","operp","oplus"],r:["or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv"],S:["oS"],s:["oscr","oslash","osol"],t:["otilde","otimes","otimesas"],u:["ouml"],v:["ovbar"]},p:{a:["par","para","parallel","parsim","parsl","part"],c:["pcy"],e:["percnt","period","permil","perp","pertenk"],f:["pfr"],h:["phi","phiv","phmmat","phone"],i:["pi","pitchfork","piv"],l:["planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","plusmn","plussim","plustwo"],m:["pm"],o:["pointint","popf","pound"],r:["pr","prap","prcue","prE","pre","prec","precapprox","preccurlyeq","preceq","precnapprox","precneqq","precnsim","precsim","prime","primes","prnap","prnE","prnsim","prod","profalar","profline","profsurf","prop","propto","prsim","prurel"],s:["pscr","psi"],u:["puncsp"]},P:{a:["PartialD"],c:["Pcy"],f:["Pfr"],h:["Phi"],i:["Pi"],l:["PlusMinus"],o:["Poincareplane","Popf"],r:["Pr","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","Prime","Product","Proportion","Proportional"],s:["Pscr","Psi"]},Q:{f:["Qfr"],o:["Qopf"],s:["Qscr"],U:["QUOT"]},q:{f:["qfr"],i:["qint"],o:["qopf"],p:["qprime"],s:["qscr"],u:["quaternions","quatint","quest","questeq","quot"]},r:{A:["rAarr","rArr","rAtail"],a:["race","racute","radic","raemptyv","rang","rangd","range","rangle","raquo","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","rarrw","ratail","ratio","rationals"],B:["rBarr"],b:["rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu"],c:["rcaron","rcedil","rceil","rcub","rcy"],d:["rdca","rdldhar","rdquo","rdquor","rdsh"],e:["real","realine","realpart","reals","rect","reg"],f:["rfisht","rfloor","rfr"],H:["rHar"],h:["rhard","rharu","rharul","rho","rhov"],i:["rightarrow","rightarrowtail","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","rightthreetimes","ring","risingdotseq"],l:["rlarr","rlhar","rlm"],m:["rmoust","rmoustache"],n:["rnmid"],o:["roang","roarr","robrk","ropar","ropf","roplus","rotimes"],p:["rpar","rpargt","rppolint"],r:["rrarr"],s:["rsaquo","rscr","rsh","rsqb","rsquo","rsquor"],t:["rthree","rtimes","rtri","rtrie","rtrif","rtriltri"],u:["ruluhar"],x:["rx"]},R:{a:["Racute","Rang","Rarr","Rarrtl"],B:["RBarr"],c:["Rcaron","Rcedil","Rcy"],e:["Re","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium"],E:["REG"],f:["Rfr"],h:["Rho"],i:["RightAngleBracket","RightArrow","Rightarrow","RightArrowBar","RightArrowLeftArrow","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","RightTee","RightTeeArrow","RightTeeVector","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar"],o:["Ropf","RoundImplies"],r:["Rrightarrow"],s:["Rscr","Rsh"],u:["RuleDelayed"]},S:{a:["Sacute"],c:["Sc","Scaron","Scedil","Scirc","Scy"],f:["Sfr"],H:["SHCHcy","SHcy"],h:["ShortDownArrow","ShortLeftArrow","ShortRightArrow","ShortUpArrow"],i:["Sigma"],m:["SmallCircle"],O:["SOFTcy"],o:["Sopf"],q:["Sqrt","Square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion"],s:["Sscr"],t:["Star"],u:["Sub","Subset","SubsetEqual","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","SuchThat","Sum","Sup","Superset","SupersetEqual","Supset"]},s:{a:["sacute"],b:["sbquo"],c:["sc","scap","scaron","sccue","scE","sce","scedil","scirc","scnap","scnE","scnsim","scpolint","scsim","scy"],d:["sdot","sdotb","sdote"],e:["searhk","seArr","searr","searrow","sect","semi","seswar","setminus","setmn","sext"],f:["sfr","sfrown"],h:["sharp","shchcy","shcy","shortmid","shortparallel","shy"],i:["sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr"],l:["slarr"],m:["smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes"],o:["softcy","sol","solb","solbar","sopf"],p:["spades","spadesuit","spar"],q:["sqcap","sqcaps","sqcup","sqcups","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","squarf","squf"],r:["srarr"],s:["sscr","ssetmn","ssmile","sstarf"],t:["star","starf","straightepsilon","straightphi","strns"],u:["sub","subdot","subE","sube","subedot","submult","subnE","subne","subplus","subrarr","subset","subseteq","subseteqq","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","succeq","succnapprox","succneqq","succnsim","succsim","sum","sung","sup","sup1","sup2","sup3","supdot","supdsub","supE","supe","supedot","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup"],w:["swarhk","swArr","swarr","swarrow","swnwar"],z:["szlig"]},T:{a:["Tab","Tau"],c:["Tcaron","Tcedil","Tcy"],f:["Tfr"],h:["Therefore","Theta","ThickSpace","ThinSpace"],H:["THORN"],i:["Tilde","TildeEqual","TildeFullEqual","TildeTilde"],o:["Topf"],R:["TRADE"],r:["TripleDot"],s:["Tscr","Tstrok"],S:["TScy","TSHcy"]},t:{a:["target","tau"],b:["tbrk"],c:["tcaron","tcedil","tcy"],d:["tdot"],e:["telrec"],f:["tfr"],h:["there4","therefore","theta","thetasym","thetav","thickapprox","thicksim","thinsp","thkap","thksim","thorn"],i:["tilde","times","timesb","timesbar","timesd","tint"],o:["toea","top","topbot","topcir","topf","topfork","tosa"],p:["tprime"],r:["trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","triplus","trisb","tritime","trpezium"],s:["tscr","tscy","tshcy","tstrok"],w:["twixt","twoheadleftarrow","twoheadrightarrow"]},U:{a:["Uacute","Uarr","Uarrocir"],b:["Ubrcy","Ubreve"],c:["Ucirc","Ucy"],d:["Udblac"],f:["Ufr"],g:["Ugrave"],m:["Umacr"],n:["UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus"],o:["Uogon","Uopf"],p:["UpArrow","Uparrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","Updownarrow","UpEquilibrium","UpperLeftArrow","UpperRightArrow","Upsi","Upsilon","UpTee","UpTeeArrow"],r:["Uring"],s:["Uscr"],t:["Utilde"],u:["Uuml"]},u:{a:["uacute","uarr"],A:["uArr"],b:["ubrcy","ubreve"],c:["ucirc","ucy"],d:["udarr","udblac","udhar"],f:["ufisht","ufr"],g:["ugrave"],H:["uHar"],h:["uharl","uharr","uhblk"],l:["ulcorn","ulcorner","ulcrop","ultri"],m:["umacr","uml"],o:["uogon","uopf"],p:["uparrow","updownarrow","upharpoonleft","upharpoonright","uplus","upsi","upsih","upsilon","upuparrows"],r:["urcorn","urcorner","urcrop","uring","urtri"],s:["uscr"],t:["utdot","utilde","utri","utrif"],u:["uuarr","uuml"],w:["uwangle"]},v:{a:["vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright"],A:["vArr"],B:["vBar","vBarv"],c:["vcy"],D:["vDash"],d:["vdash"],e:["vee","veebar","veeeq","vellip","verbar","vert"],f:["vfr"],l:["vltri"],n:["vnsub","vnsup"],o:["vopf"],p:["vprop"],r:["vrtri"],s:["vscr","vsubnE","vsubne","vsupnE","vsupne"],z:["vzigzag"]},V:{b:["Vbar"],c:["Vcy"],D:["VDash"],d:["Vdash","Vdashl"],e:["Vee","Verbar","Vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace"],f:["Vfr"],o:["Vopf"],s:["Vscr"],v:["Vvdash"]},W:{c:["Wcirc"],e:["Wedge"],f:["Wfr"],o:["Wopf"],s:["Wscr"]},w:{c:["wcirc"],e:["wedbar","wedge","wedgeq","weierp"],f:["wfr"],o:["wopf"],p:["wp"],r:["wr","wreath"],s:["wscr"]},x:{c:["xcap","xcirc","xcup"],d:["xdtri"],f:["xfr"],h:["xhArr","xharr"],i:["xi"],l:["xlArr","xlarr"],m:["xmap"],n:["xnis"],o:["xodot","xopf","xoplus","xotime"],r:["xrArr","xrarr"],s:["xscr","xsqcup"],u:["xuplus","xutri"],v:["xvee"],w:["xwedge"]},X:{f:["Xfr"],i:["Xi"],o:["Xopf"],s:["Xscr"]},Y:{a:["Yacute"],A:["YAcy"],c:["Ycirc","Ycy"],f:["Yfr"],I:["YIcy"],o:["Yopf"],s:["Yscr"],U:["YUcy"],u:["Yuml"]},y:{a:["yacute","yacy"],c:["ycirc","ycy"],e:["yen"],f:["yfr"],i:["yicy"],o:["yopf"],s:["yscr"],u:["yucy","yuml"]},Z:{a:["Zacute"],c:["Zcaron","Zcy"],d:["Zdot"],e:["ZeroWidthSpace","Zeta"],f:["Zfr"],H:["ZHcy"],o:["Zopf"],s:["Zscr"]},z:{a:["zacute"],c:["zcaron","zcy"],d:["zdot"],e:["zeetrf","zeta"],f:["zfr"],h:["zhcy"],i:["zigrarr"],o:["zopf"],s:["zscr"],w:["zwj","zwnj"]}},g={1:{p:["sup1"]},2:{1:["blk12","frac12"],p:["sup2"]},3:{1:["emsp13","frac13"],2:["frac23"],p:["sup3"]},4:{1:["blk14","emsp14","frac14"],3:["blk34","frac34"],e:["there4"]},5:{1:["frac15"],2:["frac25"],3:["frac35"],4:["frac45"]},6:{1:["frac16"],5:["frac56"]},8:{1:["frac18"],3:["frac38"],5:["frac58"],7:["frac78"]},e:{t:["Aacute","aacute","acute","Cacute","cacute","CloseCurlyDoubleQuote","CloseCurlyQuote","DiacriticalAcute","DiacriticalDoubleAcute","Eacute","eacute","gacute","Iacute","iacute","Lacute","lacute","late","Nacute","nacute","Oacute","oacute","OpenCurlyDoubleQuote","OpenCurlyQuote","Racute","racute","Sacute","sacute","sdote","smte","Uacute","uacute","Yacute","yacute","Zacute","zacute"],v:["Abreve","abreve","Agrave","agrave","Breve","breve","DiacriticalGrave","DownBreve","Egrave","egrave","Gbreve","gbreve","grave","Igrave","igrave","Ograve","ograve","Ubreve","ubreve","Ugrave","ugrave"],p:["andslope","ape","bumpe","csupe","nbumpe","nsqsupe","nsupe","orslope","sqsupe","supe"],g:["ange","barwedge","bigwedge","blacklozenge","curlywedge","doublebarwedge","ge","image","lozenge","nge","nvge","range","Wedge","wedge","xwedge"],l:["angle","blacktriangle","dwangle","exponentiale","female","langle","le","LeftTriangle","male","measuredangle","nle","NotLeftTriangle","NotRightTriangle","nvle","rangle","RightTriangle","SmallCircle","smile","ssmile","triangle","uwangle"],a:["angmsdae"],d:["Atilde","atilde","DiacriticalTilde","divide","EqualTilde","GreaterTilde","Itilde","itilde","LessTilde","NotEqualTilde","NotGreaterTilde","NotLessTilde","NotSucceedsTilde","NotTilde","NotTildeTilde","Ntilde","ntilde","Otilde","otilde","PrecedesTilde","SucceedsTilde","Tilde","tilde","TildeTilde","trade","Utilde","utilde","VerticalTilde"],m:["backprime","bprime","bsime","gsime","lsime","nsime","Prime","prime","qprime","sime","tprime","tritime","xotime"],e:["barvee","bigvee","curlyvee","cuvee","DoubleLeftTee","DoubleRightTee","DownTee","ee","LeftTee","lthree","RightTee","rthree","UpTee","Vee","vee","xvee"],s:["Because","because","maltese","pluse"],r:["blacksquare","cire","dotsquare","EmptySmallSquare","EmptyVerySmallSquare","FilledSmallSquare","FilledVerySmallSquare","incare","npre","pre","Square","square","Therefore","therefore"],n:["bne","Colone","colone","gne","HorizontalLine","imagline","lne","ne","NewLine","oline","phone","Poincareplane","profline","realine","simne","subne","supne","VerticalLine","vsubne","vsupne"],i:["bowtie","die","infintie","ltrie","nltrie","nrtrie","nvltrie","nvrtrie","rtrie","trie"],b:["csube","nsqsube","nsube","sqsube","sube"],c:["HilbertSpace","lbrace","MediumSpace","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","NonBreakingSpace","nsce","OverBrace","race","rbrace","sce","ThickSpace","ThinSpace","UnderBrace","VeryThinSpace","ZeroWidthSpace"],k:["lbrke","rbrke"],h:["lmoustache","rmoustache"],u:["nprcue","nsccue","prcue","sccue"],R:["Re"]},c:{a:["ac","angmsdac","dblac","Odblac","odblac","Udblac","udblac"],r:["Acirc","acirc","bigcirc","Ccirc","ccirc","circ","circledcirc","Ecirc","ecirc","eqcirc","Gcirc","gcirc","Hcirc","hcirc","Icirc","icirc","Jcirc","jcirc","nrarrc","Ocirc","ocirc","rarrc","Scirc","scirc","Ucirc","ucirc","Wcirc","wcirc","xcirc","Ycirc","ycirc"],s:["cuesc","nsc","sc"],e:["curlyeqprec","nprec","prec","telrec"],c:["curlyeqsucc","gescc","gtcc","lescc","ltcc","nsucc","succ"],i:["ic","radic"],v:["notinvc","notnivc"],S:["Sc"]},d:{c:["acd"],n:["And","and","andand","capand","Diamond","diamond","pound"],d:["andd","dd"],s:["angmsd","minusd","nisd","timesd"],a:["angmsdad","Gammad","gammad"],b:["angrtvbd"],i:["apid","cirmid","mid","napid","nmid","nshortmid","nsmid","omid","rnmid","shortmid","smid"],e:["Barwed","barwed","cuwed","imped","RuleDelayed"],H:["boxHd"],h:["boxhd","DDotrahd"],o:["coprod","intprod","iprod","period","prod"],g:["langd","rangd"],l:["lbrksld","odsold","rbrksld"],r:["lhard","llhard","lrhard","ord","rhard"]},E:{c:["acE","scE"],p:["apE","bumpE","napE","nsupE","supE"],r:["cirE","prE"],l:["ExponentialE","glE","lE","nlE","simlE"],g:["gE","lgE","ngE","simgE"],n:["gnE","gvnE","isinE","lnE","lvnE","notinE","prnE","scnE","subnE","supnE","vsubnE","vsupnE"],b:["nsubE","subE"],D:["TRADE"]},y:{c:["Acy","acy","Bcy","bcy","CHcy","chcy","Dcy","dcy","DJcy","djcy","DScy","dscy","DZcy","dzcy","Ecy","ecy","Fcy","fcy","Gcy","gcy","GJcy","gjcy","HARDcy","hardcy","Icy","icy","IEcy","iecy","IOcy","iocy","Iukcy","iukcy","Jcy","jcy","Jsercy","jsercy","Jukcy","jukcy","Kcy","kcy","KHcy","khcy","KJcy","kjcy","Lcy","lcy","LJcy","ljcy","Mcy","mcy","Ncy","ncy","NJcy","njcy","Ocy","ocy","Pcy","pcy","Rcy","rcy","Scy","scy","SHCHcy","shchcy","SHcy","shcy","SOFTcy","softcy","Tcy","tcy","TScy","tscy","TSHcy","tshcy","Ubrcy","ubrcy","Ucy","ucy","Vcy","vcy","YAcy","yacy","Ycy","ycy","YIcy","yicy","YUcy","yucy","Zcy","zcy","ZHcy","zhcy"],p:["copy"],t:["cylcty","empty"],h:["shy"]},g:{i:["AElig","aelig","ffilig","fflig","ffllig","filig","fjlig","fllig","IJlig","ijlig","OElig","oelig","szlig"],l:["amalg","lg","ntlg"],n:["ang","Aring","aring","backcong","bcong","cong","eng","Lang","lang","LeftCeiling","loang","nang","ncong","Rang","rang","RightCeiling","ring","roang","sung","Uring","uring","varnothing"],a:["angmsdag","vzigzag"],e:["deg","eg","leg","reg"],G:["Gg","nGg"],g:["gg","ggg"],E:["lEg"],s:["lesg"],m:["lsimg","simg"]},f:{a:["af","angmsdaf","sigmaf"],p:["Aopf","aopf","Bopf","bopf","Copf","copf","Dopf","dopf","Eopf","eopf","Fopf","fopf","Gopf","gopf","Hopf","hopf","Iopf","iopf","Jopf","jopf","Kopf","kopf","Lopf","lopf","Mopf","mopf","Nopf","nopf","Oopf","oopf","Popf","popf","Qopf","qopf","Ropf","ropf","Sopf","sopf","Topf","topf","Uopf","uopf","Vopf","vopf","Wopf","wopf","Xopf","xopf","Yopf","yopf","Zopf","zopf"],i:["dtrif","ltrif","rtrif","utrif"],o:["fnof","imof","orderof","origof"],r:["Fouriertrf","Laplacetrf","Mellintrf","profsurf","squarf","sstarf","starf","zeetrf"],l:["half"],f:["iff"],z:["lozf"],d:["ordf"],u:["squf"]},r:{f:["Afr","afr","Bfr","bfr","Cfr","cfr","Dfr","dfr","Efr","efr","Ffr","ffr","Gfr","gfr","Hfr","hfr","Ifr","ifr","Jfr","jfr","Kfr","kfr","Lfr","lfr","Mfr","mfr","Nfr","nfr","Ofr","ofr","Pfr","pfr","Qfr","qfr","Rfr","rfr","Sfr","sfr","Tfr","tfr","Ufr","ufr","Vfr","vfr","Wfr","wfr","Xfr","xfr","Yfr","yfr","Zfr","zfr"],c:["Amacr","amacr","Ascr","ascr","Bscr","bscr","Cscr","cscr","Dscr","dscr","Emacr","emacr","Escr","escr","Fscr","fscr","Gscr","gscr","Hscr","hscr","Imacr","imacr","Iscr","iscr","Jscr","jscr","Kscr","kscr","Lscr","lscr","macr","Mscr","mscr","Nscr","nscr","Omacr","omacr","Oscr","oscr","Pscr","pscr","Qscr","qscr","Rscr","rscr","Sscr","sscr","Tscr","tscr","Umacr","umacr","Uscr","uscr","Vscr","vscr","Wscr","wscr","Xscr","xscr","Yscr","yscr","Zscr","zscr"],r:["angzarr","crarr","cudarrr","cularr","curarr","Darr","dArr","darr","ddarr","dharr","duarr","dzigrarr","erarr","gtrarr","hArr","harr","hoarr","lAarr","Larr","lArr","larr","lBarr","lbarr","llarr","loarr","lrarr","ltlarr","neArr","nearr","nhArr","nharr","nlArr","nlarr","nrArr","nrarr","nvHarr","nvlArr","nvrArr","nwArr","nwarr","olarr","orarr","rAarr","Rarr","rArr","rarr","RBarr","rBarr","rbarr","rlarr","roarr","rrarr","seArr","searr","simrarr","slarr","srarr","subrarr","suplarr","swArr","swarr","Uarr","uArr","uarr","udarr","uharr","uuarr","vArr","varr","xhArr","xharr","xlArr","xlarr","xrArr","xrarr","zigrarr"],i:["apacir","cir","cirscir","ecir","gtcir","harrcir","ltcir","midcir","ocir","ofcir","olcir","plusacir","pluscir","topcir","Uarrocir"],a:["bigstar","brvbar","dHar","dollar","DoubleVerticalBar","DownArrowBar","DownLeftVectorBar","DownRightVectorBar","duhar","epar","gtlPar","hbar","horbar","ldrdhar","ldrushar","LeftArrowBar","LeftDownVectorBar","LeftTriangleBar","LeftUpVectorBar","LeftVectorBar","lHar","lopar","lowbar","lpar","lrhar","ltrPar","lurdshar","luruhar","nesear","nhpar","NotDoubleVerticalBar","NotLeftTriangleBar","NotRightTriangleBar","NotVerticalBar","npar","nspar","nwnear","ohbar","opar","ovbar","OverBar","par","profalar","rdldhar","rHar","RightArrowBar","RightDownVectorBar","RightTriangleBar","RightUpVectorBar","RightVectorBar","rlhar","ropar","rpar","ruluhar","seswar","solbar","spar","Star","star","swnwar","timesbar","udhar","uHar","UnderBar","UpArrowBar","Vbar","vBar","veebar","Verbar","verbar","VerticalBar","wedbar"],D:["boxDr"],d:["boxdr","mldr","nldr"],U:["boxUr"],u:["boxur","natur"],V:["boxVr"],v:["boxvr"],s:["copysr"],p:["cuepr","npr","pr"],o:["cupor","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownRightTeeVector","DownRightVector","ldquor","LeftDownTeeVector","LeftDownVector","LeftFloor","LeftRightVector","LeftTeeVector","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftVector","lesdotor","lfloor","lsquor","or","oror","rdquor","rfloor","RightDownTeeVector","RightDownVector","RightFloor","RightTeeVector","RightUpDownVector","RightUpTeeVector","RightUpVector","RightVector","rsquor","VerticalSeparator"],e:["Dagger","dagger","ddagger","easter","GreaterGreater","LessEqualGreater","LessGreater","llcorner","lrcorner","marker","NestedGreaterGreater","NotGreater","NotGreaterGreater","NotLessGreater","NotNestedGreaterGreater","order","ulcorner","urcorner"],t:["eqslantgtr","lesseqgtr","lesseqqgtr","lessgtr","ngtr"],O:["Or"],P:["Pr"],w:["wr"]},m:{y:["alefsym","thetasym"],i:["backsim","bsim","eqsim","Esim","esim","gnsim","gsim","gtrsim","larrsim","lesssim","lnsim","lsim","nesim","ngsim","nlsim","nsim","nvsim","parsim","plussim","precnsim","precsim","prnsim","prsim","rarrsim","scnsim","scsim","sim","subsim","succnsim","succsim","supsim","thicksim","thksim"],o:["bottom"],s:["ccupssm"],r:["curarrm","lrm"],a:["diam"],u:["Equilibrium","num","ReverseEquilibrium","ReverseUpEquilibrium","Sum","sum","trpezium","UpEquilibrium"],I:["Im"],h:["ohm"],d:["ordm"],p:["pm"],l:["rlm"]},h:{p:["aleph","angsph"],a:["angmsdah"],s:["Backslash","circleddash","dash","hslash","ldsh","Lsh","lsh","mdash","ndash","nVDash","nVdash","nvDash","nvdash","odash","Oslash","oslash","rdsh","Rsh","rsh","VDash","Vdash","vDash","vdash","Vvdash"],t:["beth","daleth","eth","imath","jmath","wreath"],x:["boxh"],V:["boxVh"],v:["boxvh"],k:["planckh"],i:["upsih"]},a:{h:["Alpha","alpha"],a:["angmsdaa"],t:["Beta","beta","Delta","delta","Eta","eta","iiota","Iota","iota","Theta","theta","vartheta","Zeta","zeta"],l:["Cedilla","gla","nabla"],m:["comma","digamma","Gamma","gamma","InvisibleComma","mcomma","Sigma","sigma","varsigma"],p:["Kappa","kappa","varkappa"],d:["Lambda","lambda"],c:["ldca","rdca"],v:["notinva","notniva"],g:["Omega","omega"],r:["para"],e:["toea"],s:["tosa"]},P:{M:["AMP"]},p:{m:["amp","asymp","bump","comp","HumpDownHump","mp","nbump","NotHumpDownHump"],a:["ap","bigcap","Cap","cap","capcap","cupbrcap","CupCap","cupcap","gap","gnap","lap","lnap","Map","map","multimap","mumap","nap","ncap","NotCupCap","nvap","prap","prnap","rarrap","scap","scnap","sqcap","thkap","xcap","xmap"],u:["bigcup","bigsqcup","bigtriangleup","capbrcup","capcup","csup","Cup","cup","cupcup","leftharpoonup","mapstoup","ncup","nsup","rightharpoonup","sqcup","sqsup","subsup","Sup","sup","supsup","vnsup","xcup","xsqcup"],r:["cularrp","operp","perp","sharp","weierp"],o:["dlcrop","drcrop","prop","top","ulcrop","urcrop","vprop"],s:["emsp","ensp","hairsp","nbsp","numsp","puncsp","thinsp"],i:["hellip","vellip"],l:["larrlp","rarrlp"],c:["mlcp"],h:["smashp"],w:["wp"]},v:{d:["andv"],r:["Barv","orv","vBarv"],y:["bemptyv","cemptyv","demptyv","emptyv","laemptyv","raemptyv"],i:["bnequiv","div","epsiv","equiv","nequiv","niv","odiv","phiv","piv"],x:["boxv"],h:["Dashv","dashv"],k:["forkv","plankv"],s:["isinsv"],n:["isinv"],a:["kappav","sigmav","thetav"],t:["nGtv","nLtv"],o:["rhov"]},b:{a:["angmsdab","Tab"],v:["angrtvb","notinvb","notnivb"],l:["bsolb","solb"],u:["bsolhsub","csub","lcub","nsub","rcub","sqsub","Sub","sub","subsub","supdsub","suphsub","supsub","vnsub"],r:["larrb","rarrb"],q:["lsqb","rsqb"],s:["minusb","plusb","timesb","trisb"],t:["sdotb"]},t:{r:["angrt","imagpart","npart","part","realpart","Sqrt","vangrt","Vert","vert"],s:["angst","ast","circledast","equest","exist","gtquest","iquest","lmoust","lowast","ltquest","midast","nexist","oast","quest","rmoust"],n:["awconint","awint","Cconint","cent","cirfnint","complement","Congruent","Conint","conint","cwconint","cwint","Element","fpartint","geqslant","iiiint","iiint","Int","int","leqslant","ngeqslant","nleqslant","NotCongruent","NotElement","NotReverseElement","npolint","oint","percnt","pointint","qint","quatint","ReverseElement","rppolint","scpolint","tint"],o:["bigodot","bNot","bnot","bot","capdot","Cdot","cdot","CenterDot","centerdot","CircleDot","congdot","ctdot","cupdot","DiacriticalDot","Dot","dot","DotDot","doteqdot","DoubleDot","dtdot","eDDot","Edot","eDot","edot","efDot","egsdot","elsdot","erDot","esdot","Gdot","gdot","gesdot","gtdot","gtrdot","Idot","inodot","isindot","lesdot","lessdot","Lmidot","lmidot","ltdot","mDDot","middot","ncongdot","nedot","Not","not","notindot","odot","quot","sdot","simdot","subdot","subedot","supdot","supedot","tdot","topbot","tridot","TripleDot","utdot","xodot","Zdot","zdot"],f:["blacktriangleleft","circlearrowleft","curvearrowleft","downharpoonleft","looparrowleft","mapstoleft","ntriangleleft","triangleleft","upharpoonleft","vartriangleleft"],h:["blacktriangleright","circlearrowright","curvearrowright","dfisht","downharpoonright","homtht","lfisht","looparrowright","ntriangleright","rfisht","triangleright","ufisht","upharpoonright","vartriangleright"],e:["bullet","caret","emptyset","LeftAngleBracket","LeftDoubleBracket","NotSquareSubset","NotSquareSuperset","NotSubset","NotSuperset","nsubset","nsupset","OverBracket","RightAngleBracket","RightDoubleBracket","sqsubset","sqsupset","SquareSubset","SquareSuperset","Subset","subset","Superset","Supset","supset","target","UnderBracket"],i:["clubsuit","diamondsuit","heartsuit","it","spadesuit"],a:["commat","flat","Hat","lat","phmmat","SuchThat"],c:["Coproduct","Product","rect","sect"],G:["Gt","nGt"],g:["gt","ngt","nvgt","ogt","rpargt"],l:["hamilt","lparlt","lt","malt","nlt","nvlt","olt","submult","supmult"],L:["Lt","nLt"],x:["sext","twixt"],m:["smt"]},n:{o:["Aogon","aogon","ApplyFunction","backepsilon","caron","Ccaron","ccaron","Colon","colon","Dcaron","dcaron","Ecaron","ecaron","ecolon","Eogon","eogon","Epsilon","epsilon","eqcolon","expectation","hercon","Intersection","Iogon","iogon","Lcaron","lcaron","Ncaron","ncaron","ogon","Omicron","omicron","Proportion","Rcaron","rcaron","Scaron","scaron","SquareIntersection","SquareUnion","straightepsilon","Tcaron","tcaron","Union","Uogon","uogon","Upsilon","upsilon","varepsilon","Zcaron","zcaron"],g:["Assign"],e:["between","curren","hyphen","kgreen","yen"],w:["bigtriangledown","blacktriangledown","frown","leftharpoondown","mapstodown","rightharpoondown","sfrown","triangledown"],f:["compfn"],i:["disin","iinfin","in","infin","isin","notin","nvinfin"],r:["dlcorn","drcorn","thorn","ulcorn","urcorn"],a:["lagran"],m:["plusmn","setmn","ssetmn"]},s:{o:["apos","mstpos","napos"],u:["becaus","bigoplus","biguplus","boxminus","boxplus","CircleMinus","CirclePlus","dotminus","dotplus","eplus","loplus","minus","MinusPlus","mnplus","ominus","oplus","plus","PlusMinus","roplus","setminus","simplus","smallsetminus","subplus","supplus","triminus","triplus","UnionPlus","uplus","xoplus","xuplus"],i:["Bernoullis","nis","OverParenthesis","UnderParenthesis","xnis"],e:["bigotimes","boxtimes","CircleTimes","complexes","divideontimes","ges","gesles","Implies","InvisibleTimes","lates","leftthreetimes","les","lesges","lotimes","ltimes","nges","nles","NotPrecedes","Otimes","otimes","Precedes","primes","rightthreetimes","rotimes","RoundImplies","rtimes","smtes","spades","times"],p:["caps","ccaps","ccups","cups","sqcaps","sqcups"],y:["Cayleys"],b:["clubs"],s:["Cross","cross","eqslantless","GreaterEqualLess","GreaterLess","gtreqless","gtreqqless","gtrless","LessLess","NestedLessLess","nless","NotGreaterLess","NotLess","NotLessLess","NotNestedLessLess","olcross"],m:["diams"],w:["downdownarrows","leftleftarrows","leftrightarrows","rightleftarrows","rightrightarrows","upuparrows"],g:["egs"],r:["elinters","integers"],l:["els","equals","models","naturals","rationals","reals"],t:["Exists","hearts","nexists","NotExists"],n:["fltns","isins","leftrightharpoons","quaternions","rightleftharpoons","strns"],f:["larrbfs","larrfs","rarrbfs","rarrfs"],d:["NotSucceeds","Succeeds"],a:["otimesas"]},x:{o:["approx","boxbox","gnapprox","gtrapprox","lessapprox","lnapprox","napprox","precapprox","precnapprox","succapprox","succnapprox","thickapprox"],n:["divonx"],r:["rx"]},q:{e:["approxeq","asympeq","backsimeq","Bumpeq","bumpeq","circeq","coloneq","ddotseq","doteq","fallingdotseq","geq","gneq","leq","lneq","ngeq","nleq","npreceq","nsimeq","nsubseteq","nsucceq","nsupseteq","ntrianglelefteq","ntrianglerighteq","preccurlyeq","preceq","questeq","risingdotseq","simeq","sqsubseteq","sqsupseteq","subseteq","subsetneq","succcurlyeq","succeq","supseteq","supsetneq","trianglelefteq","triangleq","trianglerighteq","varsubsetneq","varsupsetneq","veeeq","wedgeq"],q:["geqq","gneqq","gvertneqq","leqq","lneqq","lvertneqq","ngeqq","nleqq","nsubseteqq","nsupseteqq","precneqq","subseteqq","subsetneqq","succneqq","supseteqq","supsetneqq","varsubsetneqq","varsupsetneqq"]},l:{m:["Auml","auml","Euml","euml","gsiml","Iuml","iuml","Ouml","ouml","siml","uml","Uuml","uuml","Yuml","yuml"],D:["boxDl"],d:["boxdl"],U:["boxUl"],u:["boxul","lharul","rharul"],V:["boxVl"],v:["boxvl"],o:["bsol","dsol","gesdotol","osol","sol","suphsol"],l:["bull","ell","ForAll","forall","hybull","ll"],i:["Ccedil","ccedil","cedil","Gcedil","Kcedil","kcedil","lAtail","latail","Lcedil","lcedil","lceil","leftarrowtail","Ncedil","ncedil","permil","rAtail","ratail","Rcedil","rcedil","rceil","rightarrowtail","Scedil","scedil","Tcedil","tcedil"],a:["ClockwiseContourIntegral","ContourIntegral","CounterClockwiseContourIntegral","DotEqual","DoubleContourIntegral","Equal","GreaterEqual","GreaterFullEqual","GreaterSlantEqual","HumpEqual","intcal","Integral","intercal","LeftTriangleEqual","LessFullEqual","LessSlantEqual","natural","NotEqual","NotGreaterEqual","NotGreaterFullEqual","NotGreaterSlantEqual","NotHumpEqual","NotLeftTriangleEqual","NotLessEqual","NotLessSlantEqual","NotPrecedesEqual","NotPrecedesSlantEqual","NotRightTriangleEqual","NotSquareSubsetEqual","NotSquareSupersetEqual","NotSubsetEqual","NotSucceedsEqual","NotSucceedsSlantEqual","NotSupersetEqual","NotTildeEqual","NotTildeFullEqual","PrecedesEqual","PrecedesSlantEqual","Proportional","real","RightTriangleEqual","SquareSubsetEqual","SquareSupersetEqual","SubsetEqual","SucceedsEqual","SucceedsSlantEqual","SupersetEqual","TildeEqual","TildeFullEqual"],r:["cudarrl","dharl","uharl"],e:["Del","el","gel","gimel","nparallel","nshortparallel","parallel","prurel","shortparallel"],s:["eparsl","eqvparsl","frasl","gesl","nparsl","parsl","smeparsl"],c:["excl","iexcl"],E:["gEl"],g:["gl","ntgl"],p:["larrpl","rarrpl"],t:["larrtl","Rarrtl","rarrtl"],L:["Ll","nLl"],h:["Vdashl"]},k:{r:["bbrk","bbrktbrk","checkmark","fork","lbbrk","lobrk","pitchfork","rbbrk","robrk","tbrk","topfork"],n:["blank","pertenk"],c:["block","check","lbrack","planck","rbrack"],o:["Dstrok","dstrok","Hstrok","hstrok","Lstrok","lstrok","Tstrok","tstrok"],e:["Hacek"],h:["intlarhk","larrhk","nearhk","nwarhk","rarrhk","searhk","swarhk"],l:["lhblk","uhblk"],a:["NoBreak"]},o:{u:["bdquo","laquo","ldquo","lsaquo","lsquo","raquo","rdquo","rsaquo","rsquo","sbquo"],r:["euro","micro","numero"],t:["gesdoto","lesdoto","longmapsto","mapsto","propto","varpropto"],h:["mho","Rho","rho","varrho"],d:["plusdo"],w:["plustwo"],i:["ratio"]},i:{s:["bepsi","epsi","Psi","psi","Upsi","upsi"],m:["bsemi","semi"],h:["Chi","chi","Phi","phi","straightphi","varphi"],r:["dtri","lltri","lrtri","ltri","nltri","nrtri","rtri","rtriltri","ultri","urtri","utri","vltri","vrtri","xdtri","xutri"],i:["ii"],n:["ni","notni"],P:["Pi"],p:["pi","varpi"],X:["Xi"],x:["xi"]},u:{o:["bernou"],H:["boxHu"],h:["boxhu"],l:["lbrkslu","rbrkslu"],r:["lharu","rharu"],d:["minusdu","plusdu"],M:["Mu"],m:["mu"],N:["Nu"],n:["nu"],q:["squ"],a:["Tau","tau"]},w:{o:["bkarow","dbkarow","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleUpArrow","DoubleUpDownArrow","DownArrow","Downarrow","downarrow","DownArrowUpArrow","DownTeeArrow","drbkarow","hksearow","hkswarow","hookleftarrow","hookrightarrow","LeftArrow","Leftarrow","leftarrow","LeftArrowRightArrow","LeftRightArrow","Leftrightarrow","leftrightarrow","leftrightsquigarrow","LeftTeeArrow","Lleftarrow","LongLeftArrow","Longleftarrow","longleftarrow","LongLeftRightArrow","Longleftrightarrow","longleftrightarrow","LongRightArrow","Longrightarrow","longrightarrow","LowerLeftArrow","LowerRightArrow","nearrow","nLeftarrow","nleftarrow","nLeftrightarrow","nleftrightarrow","nRightarrow","nrightarrow","nwarrow","RightArrow","Rightarrow","rightarrow","RightArrowLeftArrow","rightsquigarrow","RightTeeArrow","Rrightarrow","searrow","ShortDownArrow","ShortLeftArrow","ShortRightArrow","ShortUpArrow","swarrow","twoheadleftarrow","twoheadrightarrow","UpArrow","Uparrow","uparrow","UpArrowDownArrow","UpDownArrow","Updownarrow","updownarrow","UpperLeftArrow","UpperRightArrow","UpTeeArrow"],r:["harrw","nrarrw","rarrw"]},L:{D:["boxDL"],d:["boxdL"],U:["boxUL"],u:["boxuL"],V:["boxVL"],v:["boxvL"]},R:{D:["boxDR"],d:["boxdR","circledR"],U:["boxUR"],u:["boxuR"],V:["boxVR"],v:["boxvR"]},H:{x:["boxH"],V:["boxVH"],v:["boxvH"],T:["ETH"]},D:{H:["boxHD"],h:["boxhD"],l:["CapitalDifferentialD","DifferentialD","PartialD"],D:["DD","equivDD"]},U:{H:["boxHU"],h:["boxhU"]},V:{x:["boxV"]},S:{d:["circledS"],o:["oS"]},Y:{P:["COPY"]},G:{N:["ENG"],E:["REG"]},j:{l:["glj"],w:["zwj"],n:["zwnj"]},T:{G:["GT"],L:["LT"],O:["QUOT"]},I:{y:["ImaginaryI"]},z:{o:["loz"]},N:{R:["THORN"]}},pe={a:{a:["aacute"],b:["abreve"],c:["ac","acd","ace","acirc","acute","acy"],e:["aelig"],f:["af","afr"],g:["agrave"],l:["alefsym","aleph","alpha"],m:["amacr","amalg","amp"],n:["and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr"],o:["aogon","aopf"],p:["ap","apacir","ape","apid","apos","applyfunction","approx","approxeq"],r:["aring"],s:["ascr","assign","ast","asymp","asympeq"],t:["atilde"],u:["auml"],w:["awconint","awint"]},b:{a:["backcong","backepsilon","backprime","backsim","backsimeq","backslash","barv","barvee","barwed","barwedge"],b:["bbrk","bbrktbrk"],c:["bcong","bcy"],d:["bdquo"],e:["becaus","because","bemptyv","bepsi","bernou","bernoullis","beta","beth","between"],f:["bfr"],i:["bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge"],k:["bkarow"],l:["blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block"],n:["bne","bnequiv","bnot"],o:["bopf","bot","bottom","bowtie","boxbox","boxdl","boxdr","boxh","boxhd","boxhu","boxminus","boxplus","boxtimes","boxul","boxur","boxv","boxvh","boxvl","boxvr"],p:["bprime"],r:["breve","brvbar"],s:["bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub"],u:["bull","bullet","bump","bumpe","bumpeq"]},c:{a:["cacute","cap","capand","capbrcup","capcap","capcup","capdot","capitaldifferentiald","caps","caret","caron","cayleys"],c:["ccaps","ccaron","ccedil","ccirc","cconint","ccups","ccupssm"],d:["cdot"],e:["cedil","cedilla","cemptyv","cent","centerdot"],f:["cfr"],h:["chcy","check","checkmark","chi"],i:["cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","circledot","circledr","circleds","circleminus","circleplus","circletimes","cire","cirfnint","cirmid","cirscir"],l:["clockwisecontourintegral","closecurlydoublequote","closecurlyquote","clubs","clubsuit"],o:["colon","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","congruent","conint","contourintegral","copf","coprod","coproduct","copy","copysr","counterclockwisecontourintegral"],r:["crarr","cross"],s:["cscr","csub","csube","csup","csupe"],t:["ctdot"],u:["cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","cupbrcap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed"],w:["cwconint","cwint"],y:["cylcty"]},d:{a:["dagger","daleth","darr","dash","dashv"],b:["dbkarow","dblac"],c:["dcaron","dcy"],d:["dd","ddagger","ddarr","ddotrahd","ddotseq"],e:["deg","del","delta","demptyv"],f:["dfisht","dfr"],h:["dhar","dharl","dharr"],i:["diacriticalacute","diacriticaldot","diacriticaldoubleacute","diacriticalgrave","diacriticaltilde","diam","diamond","diamondsuit","diams","die","differentiald","digamma","disin","div","divide","divideontimes","divonx"],j:["djcy"],l:["dlcorn","dlcrop"],o:["dollar","dopf","dot","dotdot","doteq","doteqdot","dotequal","dotminus","dotplus","dotsquare","doublebarwedge","doublecontourintegral","doubledot","doubledownarrow","doubleleftarrow","doubleleftrightarrow","doublelefttee","doublelongleftarrow","doublelongleftrightarrow","doublelongrightarrow","doublerightarrow","doublerighttee","doubleuparrow","doubleupdownarrow","doubleverticalbar","downarrow","downarrowbar","downarrowuparrow","downbreve","downdownarrows","downharpoonleft","downharpoonright","downleftrightvector","downleftteevector","downleftvector","downleftvectorbar","downrightteevector","downrightvector","downrightvectorbar","downtee","downteearrow"],r:["drbkarow","drcorn","drcrop"],s:["dscr","dscy","dsol","dstrok"],t:["dtdot","dtri","dtrif"],u:["duarr","duhar"],w:["dwangle"],z:["dzcy","dzigrarr"]},e:{a:["eacute","easter"],c:["ecaron","ecir","ecirc","ecolon","ecy"],d:["eddot","edot"],e:["ee"],f:["efdot","efr"],g:["eg","egrave","egs","egsdot"],l:["el","element","elinters","ell","els","elsdot"],m:["emacr","empty","emptyset","emptysmallsquare","emptyv","emptyverysmallsquare","emsp","emsp13","emsp14"],n:["eng","ensp"],o:["eogon","eopf"],p:["epar","eparsl","eplus","epsi","epsilon","epsiv"],q:["eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","equal","equals","equaltilde","equest","equilibrium","equiv","equivdd","eqvparsl"],r:["erarr","erdot"],s:["escr","esdot","esim"],t:["eta","eth"],u:["euml","euro"],x:["excl","exist","exists","expectation","exponentiale"]},f:{a:["fallingdotseq"],c:["fcy"],e:["female"],f:["ffilig","fflig","ffllig","ffr"],i:["filig","filledsmallsquare","filledverysmallsquare"],j:["fjlig"],l:["flat","fllig","fltns"],n:["fnof"],o:["fopf","forall","fork","forkv","fouriertrf"],p:["fpartint"],r:["frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown"],s:["fscr"]},g:{a:["gacute","gamma","gammad","gap"],b:["gbreve"],c:["gcedil","gcirc","gcy"],d:["gdot"],e:["ge","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles"],f:["gfr"],g:["gg","ggg"],i:["gimel"],j:["gjcy"],l:["gl","gla","gle","glj"],n:["gnap","gnapprox","gne","gneq","gneqq","gnsim"],o:["gopf"],r:["grave","greaterequal","greaterequalless","greaterfullequal","greatergreater","greaterless","greaterslantequal","greatertilde"],s:["gscr","gsim","gsime","gsiml"],t:["gt","gtcc","gtcir","gtdot","gtlpar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim"],v:["gvertneqq","gvne"]},h:{a:["hacek","hairsp","half","hamilt","hardcy","harr","harrcir","harrw","hat"],b:["hbar"],c:["hcirc"],e:["hearts","heartsuit","hellip","hercon"],f:["hfr"],i:["hilbertspace"],k:["hksearow","hkswarow"],o:["hoarr","homtht","hookleftarrow","hookrightarrow","hopf","horbar","horizontalline"],s:["hscr","hslash","hstrok"],u:["humpdownhump","humpequal"],y:["hybull","hyphen"]},i:{a:["iacute"],c:["ic","icirc","icy"],d:["idot"],e:["iecy","iexcl"],f:["iff","ifr"],g:["igrave"],i:["ii","iiiint","iiint","iinfin","iiota"],j:["ijlig"],m:["im","imacr","image","imaginaryi","imagline","imagpart","imath","imof","imped","implies"],n:["in","incare","infin","infintie","inodot","int","intcal","integers","integral","intercal","intersection","intlarhk","intprod","invisiblecomma","invisibletimes"],o:["iocy","iogon","iopf","iota"],p:["iprod"],q:["iquest"],s:["iscr","isin","isindot","isine","isins","isinsv","isinv"],t:["it","itilde"],u:["iukcy","iuml"]},j:{c:["jcirc","jcy"],f:["jfr"],m:["jmath"],o:["jopf"],s:["jscr","jsercy"],u:["jukcy"]},k:{a:["kappa","kappav"],c:["kcedil","kcy"],f:["kfr"],g:["kgreen"],h:["khcy"],j:["kjcy"],o:["kopf"],s:["kscr"]},l:{a:["laarr","lacute","laemptyv","lagran","lambda","lang","langd","langle","lap","laplacetrf","laquo","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","late","lates"],b:["lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu"],c:["lcaron","lcedil","lceil","lcub","lcy"],d:["ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh"],e:["le","leftanglebracket","leftarrow","leftarrowbar","leftarrowrightarrow","leftarrowtail","leftceiling","leftdoublebracket","leftdownteevector","leftdownvector","leftdownvectorbar","leftfloor","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leftrightvector","lefttee","leftteearrow","leftteevector","leftthreetimes","lefttriangle","lefttrianglebar","lefttriangleequal","leftupdownvector","leftupteevector","leftupvector","leftupvectorbar","leftvector","leftvectorbar","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","lessequalgreater","lessfullequal","lessgreater","lessgtr","lessless","lesssim","lessslantequal","lesstilde"],f:["lfisht","lfloor","lfr"],g:["lg","lge"],h:["lhar","lhard","lharu","lharul","lhblk"],j:["ljcy"],l:["ll","llarr","llcorner","lleftarrow","llhard","lltri"],m:["lmidot","lmoust","lmoustache"],n:["lnap","lnapprox","lne","lneq","lneqq","lnsim"],o:["loang","loarr","lobrk","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lopar","lopf","loplus","lotimes","lowast","lowbar","lowerleftarrow","lowerrightarrow","loz","lozenge","lozf"],p:["lpar","lparlt"],r:["lrarr","lrcorner","lrhar","lrhard","lrm","lrtri"],s:["lsaquo","lscr","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","lstrok"],t:["lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrpar"],u:["lurdshar","luruhar"],v:["lvertneqq","lvne"]},m:{a:["macr","male","malt","maltese","map","mapsto","mapstodown","mapstoleft","mapstoup","marker"],c:["mcomma","mcy"],d:["mdash","mddot"],e:["measuredangle","mediumspace","mellintrf"],f:["mfr"],h:["mho"],i:["micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","minusplus"],l:["mlcp","mldr"],n:["mnplus"],o:["models","mopf"],p:["mp"],s:["mscr","mstpos"],u:["mu","multimap","mumap"]},n:{a:["nabla","nacute","nang","nap","nape","napid","napos","napprox","natur","natural","naturals"],b:["nbsp","nbump","nbumpe"],c:["ncap","ncaron","ncedil","ncong","ncongdot","ncup","ncy"],d:["ndash"],e:["ne","nearhk","nearr","nearrow","nedot","negativemediumspace","negativethickspace","negativethinspace","negativeverythinspace","nequiv","nesear","nesim","nestedgreatergreater","nestedlessless","newline","nexist","nexists"],f:["nfr"],g:["nge","ngeq","ngeqq","ngeqslant","nges","ngg","ngsim","ngt","ngtr","ngtv"],h:["nharr","nhpar"],i:["ni","nis","nisd","niv"],j:["njcy"],l:["nlarr","nldr","nle","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nll","nlsim","nlt","nltri","nltrie","nltv"],m:["nmid"],o:["nobreak","nonbreakingspace","nopf","not","notcongruent","notcupcap","notdoubleverticalbar","notelement","notequal","notequaltilde","notexists","notgreater","notgreaterequal","notgreaterfullequal","notgreatergreater","notgreaterless","notgreaterslantequal","notgreatertilde","nothumpdownhump","nothumpequal","notin","notindot","notine","notinva","notinvb","notinvc","notlefttriangle","notlefttrianglebar","notlefttriangleequal","notless","notlessequal","notlessgreater","notlessless","notlessslantequal","notlesstilde","notnestedgreatergreater","notnestedlessless","notni","notniva","notnivb","notnivc","notprecedes","notprecedesequal","notprecedesslantequal","notreverseelement","notrighttriangle","notrighttrianglebar","notrighttriangleequal","notsquaresubset","notsquaresubsetequal","notsquaresuperset","notsquaresupersetequal","notsubset","notsubsetequal","notsucceeds","notsucceedsequal","notsucceedsslantequal","notsucceedstilde","notsuperset","notsupersetequal","nottilde","nottildeequal","nottildefullequal","nottildetilde","notverticalbar"],p:["npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq"],r:["nrarr","nrarrc","nrarrw","nrightarrow","nrtri","nrtrie"],s:["nsc","nsccue","nsce","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupe","nsupset","nsupseteq","nsupseteqq"],t:["ntgl","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq"],u:["nu","num","numero","numsp"],v:["nvap","nvdash","nvge","nvgt","nvharr","nvinfin","nvlarr","nvle","nvlt","nvltrie","nvrarr","nvrtrie","nvsim"],w:["nwarhk","nwarr","nwarrow","nwnear"]},o:{a:["oacute","oast"],c:["ocir","ocirc","ocy"],d:["odash","odblac","odiv","odot","odsold"],e:["oelig"],f:["ofcir","ofr"],g:["ogon","ograve","ogt"],h:["ohbar","ohm"],i:["oint"],l:["olarr","olcir","olcross","oline","olt"],m:["omacr","omega","omicron","omid","ominus"],o:["oopf"],p:["opar","opencurlydoublequote","opencurlyquote","operp","oplus"],r:["or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv"],s:["os","oscr","oslash","osol"],t:["otilde","otimes","otimesas"],u:["ouml"],v:["ovbar","overbar","overbrace","overbracket","overparenthesis"]},p:{a:["par","para","parallel","parsim","parsl","part","partiald"],c:["pcy"],e:["percnt","period","permil","perp","pertenk"],f:["pfr"],h:["phi","phiv","phmmat","phone"],i:["pi","pitchfork","piv"],l:["planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","plusminus","plusmn","plussim","plustwo"],m:["pm"],o:["poincareplane","pointint","popf","pound"],r:["pr","prap","prcue","pre","prec","precapprox","preccurlyeq","precedes","precedesequal","precedesslantequal","precedestilde","preceq","precnapprox","precneqq","precnsim","precsim","prime","primes","prnap","prne","prnsim","prod","product","profalar","profline","profsurf","prop","proportion","proportional","propto","prsim","prurel"],s:["pscr","psi"],u:["puncsp"]},q:{f:["qfr"],i:["qint"],o:["qopf"],p:["qprime"],s:["qscr"],u:["quaternions","quatint","quest","questeq","quot"]},r:{a:["raarr","race","racute","radic","raemptyv","rang","rangd","range","rangle","raquo","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","rarrw","ratail","ratio","rationals"],b:["rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu"],c:["rcaron","rcedil","rceil","rcub","rcy"],d:["rdca","rdldhar","rdquo","rdquor","rdsh"],e:["re","real","realine","realpart","reals","rect","reg","reverseelement","reverseequilibrium","reverseupequilibrium"],f:["rfisht","rfloor","rfr"],h:["rhar","rhard","rharu","rharul","rho","rhov"],i:["rightanglebracket","rightarrow","rightarrowbar","rightarrowleftarrow","rightarrowtail","rightceiling","rightdoublebracket","rightdownteevector","rightdownvector","rightdownvectorbar","rightfloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","righttee","rightteearrow","rightteevector","rightthreetimes","righttriangle","righttrianglebar","righttriangleequal","rightupdownvector","rightupteevector","rightupvector","rightupvectorbar","rightvector","rightvectorbar","ring","risingdotseq"],l:["rlarr","rlhar","rlm"],m:["rmoust","rmoustache"],n:["rnmid"],o:["roang","roarr","robrk","ropar","ropf","roplus","rotimes","roundimplies"],p:["rpar","rpargt","rppolint"],r:["rrarr","rrightarrow"],s:["rsaquo","rscr","rsh","rsqb","rsquo","rsquor"],t:["rthree","rtimes","rtri","rtrie","rtrif","rtriltri"],u:["ruledelayed","ruluhar"],x:["rx"]},s:{a:["sacute"],b:["sbquo"],c:["sc","scap","scaron","sccue","sce","scedil","scirc","scnap","scne","scnsim","scpolint","scsim","scy"],d:["sdot","sdotb","sdote"],e:["searhk","searr","searrow","sect","semi","seswar","setminus","setmn","sext"],f:["sfr","sfrown"],h:["sharp","shchcy","shcy","shortdownarrow","shortleftarrow","shortmid","shortparallel","shortrightarrow","shortuparrow","shy"],i:["sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simge","siml","simle","simne","simplus","simrarr"],l:["slarr"],m:["smallcircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes"],o:["softcy","sol","solb","solbar","sopf"],p:["spades","spadesuit","spar"],q:["sqcap","sqcaps","sqcup","sqcups","sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","squareintersection","squaresubset","squaresubsetequal","squaresuperset","squaresupersetequal","squareunion","squarf","squf"],r:["srarr"],s:["sscr","ssetmn","ssmile","sstarf"],t:["star","starf","straightepsilon","straightphi","strns"],u:["sub","subdot","sube","subedot","submult","subne","subplus","subrarr","subset","subseteq","subseteqq","subsetequal","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","succeeds","succeedsequal","succeedsslantequal","succeedstilde","succeq","succnapprox","succneqq","succnsim","succsim","suchthat","sum","sung","sup","sup1","sup2","sup3","supdot","supdsub","supe","supedot","superset","supersetequal","suphsol","suphsub","suplarr","supmult","supne","supplus","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup"],w:["swarhk","swarr","swarrow","swnwar"],z:["szlig"]},t:{a:["tab","target","tau"],b:["tbrk"],c:["tcaron","tcedil","tcy"],d:["tdot"],e:["telrec"],f:["tfr"],h:["there4","therefore","theta","thetasym","thetav","thickapprox","thicksim","thickspace","thinsp","thinspace","thkap","thksim","thorn"],i:["tilde","tildeequal","tildefullequal","tildetilde","times","timesb","timesbar","timesd","tint"],o:["toea","top","topbot","topcir","topf","topfork","tosa"],p:["tprime"],r:["trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","tripledot","triplus","trisb","tritime","trpezium"],s:["tscr","tscy","tshcy","tstrok"],w:["twixt","twoheadleftarrow","twoheadrightarrow"]},u:{a:["uacute","uarr","uarrocir"],b:["ubrcy","ubreve"],c:["ucirc","ucy"],d:["udarr","udblac","udhar"],f:["ufisht","ufr"],g:["ugrave"],h:["uhar","uharl","uharr","uhblk"],l:["ulcorn","ulcorner","ulcrop","ultri"],m:["umacr","uml"],n:["underbar","underbrace","underbracket","underparenthesis","union","unionplus"],o:["uogon","uopf"],p:["uparrow","uparrowbar","uparrowdownarrow","updownarrow","upequilibrium","upharpoonleft","upharpoonright","uplus","upperleftarrow","upperrightarrow","upsi","upsih","upsilon","uptee","upteearrow","upuparrows"],r:["urcorn","urcorner","urcrop","uring","urtri"],s:["uscr"],t:["utdot","utilde","utri","utrif"],u:["uuarr","uuml"],w:["uwangle"]},v:{a:["vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright"],b:["vbar","vbarv"],c:["vcy"],d:["vdash","vdashl"],e:["vee","veebar","veeeq","vellip","verbar","vert","verticalbar","verticalline","verticalseparator","verticaltilde","verythinspace"],f:["vfr"],l:["vltri"],n:["vnsub","vnsup"],o:["vopf"],p:["vprop"],r:["vrtri"],s:["vscr","vsubne","vsupne"],v:["vvdash"],z:["vzigzag"]},w:{c:["wcirc"],e:["wedbar","wedge","wedgeq","weierp"],f:["wfr"],o:["wopf"],p:["wp"],r:["wr","wreath"],s:["wscr"]},x:{c:["xcap","xcirc","xcup"],d:["xdtri"],f:["xfr"],h:["xharr"],i:["xi"],l:["xlarr"],m:["xmap"],n:["xnis"],o:["xodot","xopf","xoplus","xotime"],r:["xrarr"],s:["xscr","xsqcup"],u:["xuplus","xutri"],v:["xvee"],w:["xwedge"]},y:{a:["yacute","yacy"],c:["ycirc","ycy"],e:["yen"],f:["yfr"],i:["yicy"],o:["yopf"],s:["yscr"],u:["yucy","yuml"]},z:{a:["zacute"],c:["zcaron","zcy"],d:["zdot"],e:["zeetrf","zerowidthspace","zeta"],f:["zfr"],h:["zhcy"],i:["zigrarr"],o:["zopf"],s:["zscr"],w:["zwj","zwnj"]}},U={1:{p:["sup1"]},2:{1:["blk12","frac12"],p:["sup2"]},3:{1:["emsp13","frac13"],2:["frac23"],p:["sup3"]},4:{1:["blk14","emsp14","frac14"],3:["blk34","frac34"],e:["there4"]},5:{1:["frac15"],2:["frac25"],3:["frac35"],4:["frac45"]},6:{1:["frac16"],5:["frac56"]},8:{1:["frac18"],3:["frac38"],5:["frac58"],7:["frac78"]},e:{t:["aacute","acute","cacute","closecurlydoublequote","closecurlyquote","diacriticalacute","diacriticaldoubleacute","eacute","gacute","iacute","lacute","late","nacute","oacute","opencurlydoublequote","opencurlyquote","racute","sacute","sdote","smte","uacute","yacute","zacute"],v:["abreve","agrave","breve","diacriticalgrave","downbreve","egrave","gbreve","grave","igrave","ograve","ubreve","ugrave"],c:["ace","hilbertspace","lbrace","mediumspace","negativemediumspace","negativethickspace","negativethinspace","negativeverythinspace","nonbreakingspace","nsce","overbrace","race","rbrace","sce","thickspace","thinspace","underbrace","verythinspace","zerowidthspace"],p:["andslope","ape","bumpe","csupe","nape","nbumpe","nsqsupe","nsupe","orslope","sqsupe","supe"],g:["ange","barwedge","bigwedge","blacklozenge","curlywedge","doublebarwedge","ge","image","lge","lozenge","nge","nvge","range","simge","wedge","xwedge"],l:["angle","blacktriangle","dwangle","exponentiale","female","gle","langle","le","lefttriangle","male","measuredangle","nle","notlefttriangle","notrighttriangle","nvle","rangle","righttriangle","simle","smallcircle","smile","ssmile","triangle","uwangle"],a:["angmsdae"],d:["atilde","diacriticaltilde","divide","equaltilde","greatertilde","itilde","lesstilde","notequaltilde","notgreatertilde","notlesstilde","notsucceedstilde","nottilde","nottildetilde","ntilde","otilde","precedestilde","succeedstilde","tilde","tildetilde","trade","utilde","verticaltilde"],m:["backprime","bprime","bsime","gsime","lsime","nsime","prime","qprime","sime","tprime","tritime","xotime"],e:["barvee","bigvee","curlyvee","cuvee","doublelefttee","doublerighttee","downtee","ee","lefttee","lthree","righttee","rthree","uptee","vee","xvee"],s:["because","maltese","pluse"],r:["blacksquare","cire","dotsquare","emptysmallsquare","emptyverysmallsquare","filledsmallsquare","filledverysmallsquare","incare","npre","pre","re","square","therefore"],n:["bne","colone","gne","gvne","horizontalline","imagline","isine","lne","lvne","ne","newline","notine","oline","phone","poincareplane","prne","profline","realine","scne","simne","subne","supne","verticalline","vsubne","vsupne"],i:["bowtie","die","infintie","ltrie","nltrie","nrtrie","nvltrie","nvrtrie","rtrie","trie"],b:["csube","nsqsube","nsube","sqsube","sube"],k:["lbrke","rbrke"],h:["lmoustache","rmoustache"],u:["nprcue","nsccue","prcue","sccue"]},c:{a:["ac","angmsdac","dblac","odblac","udblac"],r:["acirc","bigcirc","ccirc","circ","circledcirc","ecirc","eqcirc","gcirc","hcirc","icirc","jcirc","nrarrc","ocirc","rarrc","scirc","ucirc","wcirc","xcirc","ycirc"],s:["cuesc","nsc","sc"],e:["curlyeqprec","nprec","prec","telrec"],c:["curlyeqsucc","gescc","gtcc","lescc","ltcc","nsucc","succ"],i:["ic","radic"],v:["notinvc","notnivc"]},d:{c:["acd"],n:["and","andand","capand","diamond","pound"],d:["andd","dd","equivdd"],s:["angmsd","minusd","nisd","timesd"],a:["angmsdad","gammad"],b:["angrtvbd"],i:["apid","cirmid","mid","napid","nmid","nshortmid","nsmid","omid","rnmid","shortmid","smid"],e:["barwed","cuwed","imped","ruledelayed"],h:["boxhd","ddotrahd"],l:["capitaldifferentiald","differentiald","lbrksld","odsold","partiald","rbrksld"],o:["coprod","intprod","iprod","period","prod"],g:["langd","rangd"],r:["lhard","llhard","lrhard","ord","rhard"]},y:{c:["acy","bcy","chcy","dcy","djcy","dscy","dzcy","ecy","fcy","gcy","gjcy","hardcy","icy","iecy","iocy","iukcy","jcy","jsercy","jukcy","kcy","khcy","kjcy","lcy","ljcy","mcy","ncy","njcy","ocy","pcy","rcy","scy","shchcy","shcy","softcy","tcy","tscy","tshcy","ubrcy","ucy","vcy","yacy","ycy","yicy","yucy","zcy","zhcy"],p:["copy"],t:["cylcty","empty"],h:["shy"]},g:{i:["aelig","ffilig","fflig","ffllig","filig","fjlig","fllig","ijlig","oelig","szlig"],l:["amalg","lg","ntlg"],n:["ang","aring","backcong","bcong","cong","eng","lang","leftceiling","loang","nang","ncong","rang","rightceiling","ring","roang","sung","uring","varnothing"],a:["angmsdag","vzigzag"],e:["deg","eg","leg","reg"],g:["gg","ggg","ngg"],s:["lesg"],m:["lsimg","simg"]},f:{a:["af","angmsdaf","sigmaf"],p:["aopf","bopf","copf","dopf","eopf","fopf","gopf","hopf","iopf","jopf","kopf","lopf","mopf","nopf","oopf","popf","qopf","ropf","sopf","topf","uopf","vopf","wopf","xopf","yopf","zopf"],i:["dtrif","ltrif","rtrif","utrif"],o:["fnof","imof","orderof","origof"],r:["fouriertrf","laplacetrf","mellintrf","profsurf","squarf","sstarf","starf","zeetrf"],l:["half"],f:["iff"],z:["lozf"],d:["ordf"],u:["squf"]},r:{f:["afr","bfr","cfr","dfr","efr","ffr","gfr","hfr","ifr","jfr","kfr","lfr","mfr","nfr","ofr","pfr","qfr","rfr","sfr","tfr","ufr","vfr","wfr","xfr","yfr","zfr"],c:["amacr","ascr","bscr","cscr","dscr","emacr","escr","fscr","gscr","hscr","imacr","iscr","jscr","kscr","lscr","macr","mscr","nscr","omacr","oscr","pscr","qscr","rscr","sscr","tscr","umacr","uscr","vscr","wscr","xscr","yscr","zscr"],r:["angzarr","crarr","cudarrr","cularr","curarr","darr","ddarr","dharr","duarr","dzigrarr","erarr","gtrarr","harr","hoarr","laarr","larr","lbarr","llarr","loarr","lrarr","ltlarr","nearr","nharr","nlarr","nrarr","nvharr","nvlarr","nvrarr","nwarr","olarr","orarr","raarr","rarr","rbarr","rlarr","roarr","rrarr","searr","simrarr","slarr","srarr","subrarr","suplarr","swarr","uarr","udarr","uharr","uuarr","varr","xharr","xlarr","xrarr","zigrarr"],i:["apacir","cir","cirscir","ecir","gtcir","harrcir","ltcir","midcir","ocir","ofcir","olcir","plusacir","pluscir","topcir","uarrocir"],a:["bigstar","brvbar","dhar","dollar","doubleverticalbar","downarrowbar","downleftvectorbar","downrightvectorbar","duhar","epar","gtlpar","hbar","horbar","ldrdhar","ldrushar","leftarrowbar","leftdownvectorbar","lefttrianglebar","leftupvectorbar","leftvectorbar","lhar","lopar","lowbar","lpar","lrhar","ltrpar","lurdshar","luruhar","nesear","nhpar","notdoubleverticalbar","notlefttrianglebar","notrighttrianglebar","notverticalbar","npar","nspar","nwnear","ohbar","opar","ovbar","overbar","par","profalar","rdldhar","rhar","rightarrowbar","rightdownvectorbar","righttrianglebar","rightupvectorbar","rightvectorbar","rlhar","ropar","rpar","ruluhar","seswar","solbar","spar","star","swnwar","timesbar","udhar","uhar","underbar","uparrowbar","vbar","veebar","verbar","verticalbar","wedbar"],d:["boxdr","circledr","mldr","nldr"],u:["boxur","natur"],v:["boxvr"],s:["copysr"],p:["cuepr","npr","pr"],o:["cupor","downleftrightvector","downleftteevector","downleftvector","downrightteevector","downrightvector","ldquor","leftdownteevector","leftdownvector","leftfloor","leftrightvector","leftteevector","leftupdownvector","leftupteevector","leftupvector","leftvector","lesdotor","lfloor","lsquor","or","oror","rdquor","rfloor","rightdownteevector","rightdownvector","rightfloor","rightteevector","rightupdownvector","rightupteevector","rightupvector","rightvector","rsquor","verticalseparator"],e:["dagger","ddagger","easter","greatergreater","lessequalgreater","lessgreater","llcorner","lrcorner","marker","nestedgreatergreater","notgreater","notgreatergreater","notlessgreater","notnestedgreatergreater","order","ulcorner","urcorner"],t:["eqslantgtr","lesseqgtr","lesseqqgtr","lessgtr","ngtr"],w:["wr"]},m:{y:["alefsym","thetasym"],i:["backsim","bsim","eqsim","esim","gnsim","gsim","gtrsim","im","larrsim","lesssim","lnsim","lsim","nesim","ngsim","nlsim","nsim","nvsim","parsim","plussim","precnsim","precsim","prnsim","prsim","rarrsim","scnsim","scsim","sim","subsim","succnsim","succsim","supsim","thicksim","thksim"],o:["bottom"],s:["ccupssm"],r:["curarrm","lrm"],a:["diam"],u:["equilibrium","num","reverseequilibrium","reverseupequilibrium","sum","trpezium","upequilibrium"],h:["ohm"],d:["ordm"],p:["pm"],l:["rlm"]},h:{p:["aleph","angsph"],a:["angmsdah"],s:["backslash","circleddash","dash","hslash","ldsh","lsh","mdash","ndash","nvdash","odash","oslash","rdsh","rsh","vdash","vvdash"],t:["beth","daleth","eth","imath","jmath","wreath"],x:["boxh"],v:["boxvh"],k:["planckh"],i:["upsih"]},a:{h:["alpha"],a:["angmsdaa"],t:["beta","delta","eta","iiota","iota","theta","vartheta","zeta"],l:["cedilla","gla","nabla"],m:["comma","digamma","gamma","invisiblecomma","mcomma","sigma","varsigma"],p:["kappa","varkappa"],d:["lambda"],c:["ldca","rdca"],v:["notinva","notniva"],g:["omega"],r:["para"],e:["toea"],s:["tosa"]},p:{m:["amp","asymp","bump","comp","humpdownhump","mp","nbump","nothumpdownhump"],a:["ap","bigcap","cap","capcap","cupbrcap","cupcap","gap","gnap","lap","lnap","map","multimap","mumap","nap","ncap","notcupcap","nvap","prap","prnap","rarrap","scap","scnap","sqcap","thkap","xcap","xmap"],u:["bigcup","bigsqcup","bigtriangleup","capbrcup","capcup","csup","cup","cupcup","leftharpoonup","mapstoup","ncup","nsup","rightharpoonup","sqcup","sqsup","subsup","sup","supsup","vnsup","xcup","xsqcup"],r:["cularrp","operp","perp","sharp","weierp"],o:["dlcrop","drcrop","prop","top","ulcrop","urcrop","vprop"],s:["emsp","ensp","hairsp","nbsp","numsp","puncsp","thinsp"],i:["hellip","vellip"],l:["larrlp","rarrlp"],c:["mlcp"],h:["smashp"],w:["wp"]},v:{d:["andv"],r:["barv","orv","vbarv"],y:["bemptyv","cemptyv","demptyv","emptyv","laemptyv","raemptyv"],i:["bnequiv","div","epsiv","equiv","nequiv","niv","odiv","phiv","piv"],x:["boxv"],h:["dashv"],k:["forkv","plankv"],s:["isinsv"],n:["isinv"],a:["kappav","sigmav","thetav"],t:["ngtv","nltv"],o:["rhov"]},b:{a:["angmsdab","tab"],v:["angrtvb","notinvb","notnivb"],l:["bsolb","solb"],u:["bsolhsub","csub","lcub","nsub","rcub","sqsub","sub","subsub","supdsub","suphsub","supsub","vnsub"],r:["larrb","rarrb"],q:["lsqb","rsqb"],s:["minusb","plusb","timesb","trisb"],t:["sdotb"]},t:{r:["angrt","imagpart","npart","part","realpart","sqrt","vangrt","vert"],s:["angst","ast","circledast","equest","exist","gtquest","iquest","lmoust","lowast","ltquest","midast","nexist","oast","quest","rmoust"],n:["awconint","awint","cconint","cent","cirfnint","complement","congruent","conint","cwconint","cwint","element","fpartint","geqslant","iiiint","iiint","int","leqslant","ngeqslant","nleqslant","notcongruent","notelement","notreverseelement","npolint","oint","percnt","pointint","qint","quatint","reverseelement","rppolint","scpolint","tint"],o:["bigodot","bnot","bot","capdot","cdot","centerdot","circledot","congdot","ctdot","cupdot","diacriticaldot","dot","dotdot","doteqdot","doubledot","dtdot","eddot","edot","efdot","egsdot","elsdot","erdot","esdot","gdot","gesdot","gtdot","gtrdot","idot","inodot","isindot","lesdot","lessdot","lmidot","ltdot","mddot","middot","ncongdot","nedot","not","notindot","odot","quot","sdot","simdot","subdot","subedot","supdot","supedot","tdot","topbot","tridot","tripledot","utdot","xodot","zdot"],f:["blacktriangleleft","circlearrowleft","curvearrowleft","downharpoonleft","looparrowleft","mapstoleft","ntriangleleft","triangleleft","upharpoonleft","vartriangleleft"],h:["blacktriangleright","circlearrowright","curvearrowright","dfisht","downharpoonright","homtht","lfisht","looparrowright","ntriangleright","rfisht","triangleright","ufisht","upharpoonright","vartriangleright"],e:["bullet","caret","emptyset","leftanglebracket","leftdoublebracket","notsquaresubset","notsquaresuperset","notsubset","notsuperset","nsubset","nsupset","overbracket","rightanglebracket","rightdoublebracket","sqsubset","sqsupset","squaresubset","squaresuperset","subset","superset","supset","target","underbracket"],i:["clubsuit","diamondsuit","heartsuit","it","spadesuit"],a:["commat","flat","hat","lat","phmmat","suchthat"],c:["coproduct","product","rect","sect"],g:["gt","ngt","nvgt","ogt","rpargt"],l:["hamilt","lparlt","lt","malt","nlt","nvlt","olt","submult","supmult"],x:["sext","twixt"],m:["smt"]},n:{o:["aogon","applyfunction","backepsilon","caron","ccaron","colon","dcaron","ecaron","ecolon","eogon","epsilon","eqcolon","expectation","hercon","intersection","iogon","lcaron","ncaron","ogon","omicron","proportion","rcaron","scaron","squareintersection","squareunion","straightepsilon","tcaron","union","uogon","upsilon","varepsilon","zcaron"],g:["assign"],e:["between","curren","hyphen","kgreen","yen"],w:["bigtriangledown","blacktriangledown","frown","leftharpoondown","mapstodown","rightharpoondown","sfrown","triangledown"],f:["compfn"],i:["disin","iinfin","in","infin","isin","notin","nvinfin"],r:["dlcorn","drcorn","thorn","ulcorn","urcorn"],a:["lagran"],m:["plusmn","setmn","ssetmn"]},s:{o:["apos","mstpos","napos","os"],u:["becaus","bigoplus","biguplus","boxminus","boxplus","circleminus","circleplus","dotminus","dotplus","eplus","loplus","minus","minusplus","mnplus","ominus","oplus","plus","plusminus","roplus","setminus","simplus","smallsetminus","subplus","supplus","triminus","triplus","unionplus","uplus","xoplus","xuplus"],i:["bernoullis","nis","overparenthesis","underparenthesis","xnis"],e:["bigotimes","boxtimes","circletimes","complexes","divideontimes","ges","gesles","implies","invisibletimes","lates","leftthreetimes","les","lesges","lotimes","ltimes","nges","nles","notprecedes","otimes","precedes","primes","rightthreetimes","rotimes","roundimplies","rtimes","smtes","spades","times"],p:["caps","ccaps","ccups","cups","sqcaps","sqcups"],y:["cayleys"],d:["circleds","notsucceeds","succeeds"],b:["clubs"],s:["cross","eqslantless","greaterequalless","greaterless","gtreqless","gtreqqless","gtrless","lessless","nestedlessless","nless","notgreaterless","notless","notlessless","notnestedlessless","olcross"],m:["diams"],w:["downdownarrows","leftleftarrows","leftrightarrows","rightleftarrows","rightrightarrows","upuparrows"],g:["egs"],r:["elinters","integers"],l:["els","equals","models","naturals","rationals","reals"],t:["exists","hearts","nexists","notexists"],n:["fltns","isins","leftrightharpoons","quaternions","rightleftharpoons","strns"],f:["larrbfs","larrfs","rarrbfs","rarrfs"],a:["otimesas"]},x:{o:["approx","boxbox","gnapprox","gtrapprox","lessapprox","lnapprox","napprox","precapprox","precnapprox","succapprox","succnapprox","thickapprox"],n:["divonx"],r:["rx"]},q:{e:["approxeq","asympeq","backsimeq","bumpeq","circeq","coloneq","ddotseq","doteq","fallingdotseq","geq","gneq","leq","lneq","ngeq","nleq","npreceq","nsimeq","nsubseteq","nsucceq","nsupseteq","ntrianglelefteq","ntrianglerighteq","preccurlyeq","preceq","questeq","risingdotseq","simeq","sqsubseteq","sqsupseteq","subseteq","subsetneq","succcurlyeq","succeq","supseteq","supsetneq","trianglelefteq","triangleq","trianglerighteq","varsubsetneq","varsupsetneq","veeeq","wedgeq"],q:["geqq","gneqq","gvertneqq","leqq","lneqq","lvertneqq","ngeqq","nleqq","nsubseteqq","nsupseteqq","precneqq","subseteqq","subsetneqq","succneqq","supseteqq","supsetneqq","varsubsetneqq","varsupsetneqq"]},l:{m:["auml","euml","gsiml","iuml","ouml","siml","uml","uuml","yuml"],d:["boxdl"],u:["boxul","lharul","rharul"],v:["boxvl"],o:["bsol","dsol","gesdotol","osol","sol","suphsol"],l:["bull","ell","forall","hybull","ll","nll"],i:["ccedil","cedil","gcedil","kcedil","latail","lcedil","lceil","leftarrowtail","ncedil","permil","ratail","rcedil","rceil","rightarrowtail","scedil","tcedil"],a:["clockwisecontourintegral","contourintegral","counterclockwisecontourintegral","dotequal","doublecontourintegral","equal","greaterequal","greaterfullequal","greaterslantequal","humpequal","intcal","integral","intercal","lefttriangleequal","lessfullequal","lessslantequal","natural","notequal","notgreaterequal","notgreaterfullequal","notgreaterslantequal","nothumpequal","notlefttriangleequal","notlessequal","notlessslantequal","notprecedesequal","notprecedesslantequal","notrighttriangleequal","notsquaresubsetequal","notsquaresupersetequal","notsubsetequal","notsucceedsequal","notsucceedsslantequal","notsupersetequal","nottildeequal","nottildefullequal","precedesequal","precedesslantequal","proportional","real","righttriangleequal","squaresubsetequal","squaresupersetequal","subsetequal","succeedsequal","succeedsslantequal","supersetequal","tildeequal","tildefullequal"],r:["cudarrl","dharl","uharl"],e:["del","el","gel","gimel","nparallel","nshortparallel","parallel","prurel","shortparallel"],s:["eparsl","eqvparsl","frasl","gesl","nparsl","parsl","smeparsl"],c:["excl","iexcl"],g:["gl","ntgl"],p:["larrpl","rarrpl"],t:["larrtl","rarrtl"],h:["vdashl"]},k:{r:["bbrk","bbrktbrk","checkmark","fork","lbbrk","lobrk","pitchfork","rbbrk","robrk","tbrk","topfork"],n:["blank","pertenk"],c:["block","check","lbrack","planck","rbrack"],o:["dstrok","hstrok","lstrok","tstrok"],e:["hacek"],h:["intlarhk","larrhk","nearhk","nwarhk","rarrhk","searhk","swarhk"],l:["lhblk","uhblk"],a:["nobreak"]},o:{u:["bdquo","laquo","ldquo","lsaquo","lsquo","raquo","rdquo","rsaquo","rsquo","sbquo"],r:["euro","micro","numero"],t:["gesdoto","lesdoto","longmapsto","mapsto","propto","varpropto"],h:["mho","rho","varrho"],d:["plusdo"],w:["plustwo"],i:["ratio"]},i:{s:["bepsi","epsi","psi","upsi"],m:["bsemi","semi"],h:["chi","phi","straightphi","varphi"],r:["dtri","lltri","lrtri","ltri","nltri","nrtri","rtri","rtriltri","ultri","urtri","utri","vltri","vrtri","xdtri","xutri"],i:["ii"],y:["imaginaryi"],n:["ni","notni"],p:["pi","varpi"],x:["xi"]},u:{o:["bernou"],h:["boxhu"],l:["lbrkslu","rbrkslu"],r:["lharu","rharu"],d:["minusdu","plusdu"],m:["mu"],n:["nu"],q:["squ"],a:["tau"]},w:{o:["bkarow","dbkarow","doubledownarrow","doubleleftarrow","doubleleftrightarrow","doublelongleftarrow","doublelongleftrightarrow","doublelongrightarrow","doublerightarrow","doubleuparrow","doubleupdownarrow","downarrow","downarrowuparrow","downteearrow","drbkarow","hksearow","hkswarow","hookleftarrow","hookrightarrow","leftarrow","leftarrowrightarrow","leftrightarrow","leftrightsquigarrow","leftteearrow","lleftarrow","longleftarrow","longleftrightarrow","longrightarrow","lowerleftarrow","lowerrightarrow","nearrow","nleftarrow","nleftrightarrow","nrightarrow","nwarrow","rightarrow","rightarrowleftarrow","rightsquigarrow","rightteearrow","rrightarrow","searrow","shortdownarrow","shortleftarrow","shortrightarrow","shortuparrow","swarrow","twoheadleftarrow","twoheadrightarrow","uparrow","uparrowdownarrow","updownarrow","upperleftarrow","upperrightarrow","upteearrow"],r:["harrw","nrarrw","rarrw"]},j:{l:["glj"],w:["zwj"],n:["zwnj"]},z:{o:["loz"]}};let l=y,r=h,o=a,c=g,b=pe,n=U,P={ac:{addAmpIfSemiPresent:"edge only",addSemiIfAmpPresent:!1},acute:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Alpha:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},alpha:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},amp:{addAmpIfSemiPresent:"edge only",addSemiIfAmpPresent:!0},And:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},and:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},ange:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},angle:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},angst:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},ap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ape:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},approx:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Aring:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},aring:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},Ascr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ascr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Assign:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ast:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},atilde:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},Backslash:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},barwedge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},becaus:{addAmpIfSemiPresent:!0,addSemiIfAmpPresent:"edge only"},Because:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},because:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bepsi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Bernoullis:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Beta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},beta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},beth:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},between:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},blank:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},block:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bottom:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bowtie:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},breve:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bull:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bullet:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},bump:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cacute:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Cap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},cap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},capand:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},caps:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},caret:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},caron:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cedil:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Cedilla:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},cent:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},check:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},checkmark:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Chi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},chi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cir:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},circ:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},clubs:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},clubsuit:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Colon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},colon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Colone:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},colone:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},comma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},commat:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},comp:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},complement:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},complexes:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cong:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Congruent:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},conint:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},copf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},coprod:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},COPY:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},copy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Cross:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},cross:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Cup:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cup:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},cups:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Dagger:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},dagger:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},daleth:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},darr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},dash:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},DD:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},dd:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},deg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Del:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Delta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},delta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},dharr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},diam:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Diamond:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},diamond:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},diams:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},die:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},digamma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},disin:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},div:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},divide:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},dollar:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},dopf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Dot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},dot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},dsol:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},dtri:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},easter:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ecir:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ecolon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ecy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},edot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ee:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},efr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},eg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},egrave:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},egs:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},el:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ell:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},els:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},empty:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ENG:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},eng:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},epsi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Epsilon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},epsilon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Equal:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},equals:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},equest:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Equilibrium:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},equiv:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},escr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},esim:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Eta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},eta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ETH:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},eth:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},euro:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},excl:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},exist:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Exists:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},expectation:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},female:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},flat:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},fork:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},frown:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Gamma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},gamma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},gap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},gcy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gel:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},geq:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ges:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gesl:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gl:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gla:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gne:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},grave:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},GT:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},gt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},half:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Hat:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},hearts:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},hopf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},hyphen:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ic:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},icy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},iff:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ii:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},image:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},imped:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},in:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},int:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},integers:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},iocy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},iogon:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},iota:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},isin:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},it:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Kappa:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},kappa:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},kopf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Lambda:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lambda:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lang:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lat:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},late:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lates:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},le:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},leg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},leq:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},les:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ll:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},lne:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},lozenge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lsh:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},LT:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},lt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ltimes:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},male:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},malt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},map:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},marker:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},mid:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},minus:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},models:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},mp:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},mu:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},nang:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},natural:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},naturals:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ncy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ne:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ngt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ni:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nis:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nle:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nles:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nless:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nlt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nopf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Not:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},not:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},nsc:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nsce:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},nu:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},num:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ogt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ohm:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},oline:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},olt:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Omega:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},omega:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Omicron:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},omicron:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},oopf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},opar:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},or:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},order:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},oror:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},orv:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},osol:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},par:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},para:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},parallel:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},part:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},phi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},phone:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Pi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},pi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},pitchfork:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},plus:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},pm:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},popf:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},pound:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},pr:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},prime:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},primes:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},prod:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Product:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},prop:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Proportion:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Proportional:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},psi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},quest:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},QUOT:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},quot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},race:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},rang:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},range:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},ratio:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Re:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},real:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},reals:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},rect:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},REG:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!0},reg:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ring:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},rsh:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},sc:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},scap:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},sce:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},scy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},sdot:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},sect:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},semi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sharp:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},shy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Sigma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sigma:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sim:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sol:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},spades:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},square:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Star:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},star:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Sub:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sub:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sube:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Sum:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},sum:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Tab:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},target:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Tau:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},tau:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},therefore:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Theta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},theta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},THORN:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},thorn:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Tilde:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},tilde:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},times:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},tint:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},top:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},tosa:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},TRADE:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},trade:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},triangle:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},trie:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ucy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},uml:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Union:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},uplus:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Upsi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},upsi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},uring:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},vee:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Vert:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},vert:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},wedge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Wedge:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},wreath:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Xi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},xi:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Ycirc:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ycirc:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},ycy:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},yen:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},Zacute:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},zacute:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:"edge only"},Zeta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1},zeta:{addAmpIfSemiPresent:!1,addSemiIfAmpPresent:!1}},u=new Set(["Aacute","aacute","Abreve","abreve","ac","acd","acE","Acirc","acirc","acute","Acy","acy","AElig","aelig","af","Afr","afr","Agrave","agrave","alefsym","aleph","Alpha","alpha","Amacr","amacr","amalg","AMP","amp","And","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","Aogon","aogon","Aopf","aopf","ap","apacir","apE","ape","apid","apos","ApplyFunction","approx","approxeq","Aring","aring","Ascr","ascr","Assign","ast","asymp","asympeq","Atilde","atilde","Auml","auml","awconint","awint","backcong","backepsilon","backprime","backsim","backsimeq","Backslash","Barv","barvee","Barwed","barwed","barwedge","bbrk","bbrktbrk","bcong","Bcy","bcy","bdquo","becaus","Because","because","bemptyv","bepsi","bernou","Bernoullis","Beta","beta","beth","between","Bfr","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bNot","bnot","Bopf","bopf","bot","bottom","bowtie","boxbox","boxDL","boxDl","boxdL","boxdl","boxDR","boxDr","boxdR","boxdr","boxH","boxh","boxHD","boxHd","boxhD","boxhd","boxHU","boxHu","boxhU","boxhu","boxminus","boxplus","boxtimes","boxUL","boxUl","boxuL","boxul","boxUR","boxUr","boxuR","boxur","boxV","boxv","boxVH","boxVh","boxvH","boxvh","boxVL","boxVl","boxvL","boxvl","boxVR","boxVr","boxvR","boxvr","bprime","Breve","breve","brvbar","Bscr","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","Bumpeq","bumpeq","Cacute","cacute","Cap","cap","capand","capbrcup","capcap","capcup","capdot","CapitalDifferentialD","caps","caret","caron","Cayleys","ccaps","Ccaron","ccaron","Ccedil","ccedil","Ccirc","ccirc","Cconint","ccups","ccupssm","Cdot","cdot","cedil","Cedilla","cemptyv","cent","CenterDot","centerdot","Cfr","cfr","CHcy","chcy","check","checkmark","Chi","chi","cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","CircleDot","circledR","circledS","CircleMinus","CirclePlus","CircleTimes","cirE","cire","cirfnint","cirmid","cirscir","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","clubs","clubsuit","Colon","colon","Colone","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","Congruent","Conint","conint","ContourIntegral","Copf","copf","coprod","Coproduct","COPY","copy","copysr","CounterClockwiseContourIntegral","crarr","Cross","cross","Cscr","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","Cup","cup","cupbrcap","CupCap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","Dagger","dagger","daleth","Darr","dArr","darr","dash","Dashv","dashv","dbkarow","dblac","Dcaron","dcaron","Dcy","dcy","DD","dd","ddagger","ddarr","DDotrahd","ddotseq","deg","Del","Delta","delta","demptyv","dfisht","Dfr","dfr","dHar","dharl","dharr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","diam","Diamond","diamond","diamondsuit","diams","die","DifferentialD","digamma","disin","div","divide","divideontimes","divonx","DJcy","djcy","dlcorn","dlcrop","dollar","Dopf","dopf","Dot","dot","DotDot","doteq","doteqdot","DotEqual","dotminus","dotplus","dotsquare","doublebarwedge","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","Downarrow","downarrow","DownArrowBar","DownArrowUpArrow","DownBreve","downdownarrows","downharpoonleft","downharpoonright","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","drbkarow","drcorn","drcrop","Dscr","dscr","DScy","dscy","dsol","Dstrok","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","DZcy","dzcy","dzigrarr","Eacute","eacute","easter","Ecaron","ecaron","ecir","Ecirc","ecirc","ecolon","Ecy","ecy","eDDot","Edot","eDot","edot","ee","efDot","Efr","efr","eg","Egrave","egrave","egs","egsdot","el","Element","elinters","ell","els","elsdot","Emacr","emacr","empty","emptyset","EmptySmallSquare","emptyv","EmptyVerySmallSquare","emsp","emsp13","emsp14","ENG","eng","ensp","Eogon","eogon","Eopf","eopf","epar","eparsl","eplus","epsi","Epsilon","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","Equal","equals","EqualTilde","equest","Equilibrium","equiv","equivDD","eqvparsl","erarr","erDot","Escr","escr","esdot","Esim","esim","Eta","eta","ETH","eth","Euml","euml","euro","excl","exist","Exists","expectation","ExponentialE","exponentiale","fallingdotseq","Fcy","fcy","female","ffilig","fflig","ffllig","Ffr","ffr","filig","FilledSmallSquare","FilledVerySmallSquare","fjlig","flat","fllig","fltns","fnof","Fopf","fopf","ForAll","forall","fork","forkv","Fouriertrf","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","Fscr","fscr","gacute","Gamma","gamma","Gammad","gammad","gap","Gbreve","gbreve","Gcedil","Gcirc","gcirc","Gcy","gcy","Gdot","gdot","gE","ge","gEl","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","Gfr","gfr","Gg","gg","ggg","gimel","GJcy","gjcy","gl","gla","glE","glj","gnap","gnapprox","gnE","gne","gneq","gneqq","gnsim","Gopf","gopf","grave","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","gscr","gsim","gsime","gsiml","GT","Gt","gt","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","Hacek","hairsp","half","hamilt","HARDcy","hardcy","hArr","harr","harrcir","harrw","Hat","hbar","Hcirc","hcirc","hearts","heartsuit","hellip","hercon","Hfr","hfr","HilbertSpace","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","Hopf","hopf","horbar","HorizontalLine","Hscr","hscr","hslash","Hstrok","hstrok","HumpDownHump","HumpEqual","hybull","hyphen","Iacute","iacute","ic","Icirc","icirc","Icy","icy","Idot","IEcy","iecy","iexcl","iff","Ifr","ifr","Igrave","igrave","ii","iiiint","iiint","iinfin","iiota","IJlig","ijlig","Im","Imacr","imacr","image","ImaginaryI","imagline","imagpart","imath","imof","imped","Implies","in","incare","infin","infintie","inodot","Int","int","intcal","integers","Integral","intercal","Intersection","intlarhk","intprod","InvisibleComma","InvisibleTimes","IOcy","iocy","Iogon","iogon","Iopf","iopf","Iota","iota","iprod","iquest","Iscr","iscr","isin","isindot","isinE","isins","isinsv","isinv","it","Itilde","itilde","Iukcy","iukcy","Iuml","iuml","Jcirc","jcirc","Jcy","jcy","Jfr","jfr","jmath","Jopf","jopf","Jscr","jscr","Jsercy","jsercy","Jukcy","jukcy","Kappa","kappa","kappav","Kcedil","kcedil","Kcy","kcy","Kfr","kfr","kgreen","KHcy","khcy","KJcy","kjcy","Kopf","kopf","Kscr","kscr","lAarr","Lacute","lacute","laemptyv","lagran","Lambda","lambda","Lang","lang","langd","langle","lap","Laplacetrf","laquo","Larr","lArr","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","lAtail","latail","late","lates","lBarr","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","Lcaron","lcaron","Lcedil","lcedil","lceil","lcub","Lcy","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","lE","le","LeftAngleBracket","LeftArrow","Leftarrow","leftarrow","LeftArrowBar","LeftArrowRightArrow","leftarrowtail","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","leftharpoondown","leftharpoonup","leftleftarrows","LeftRightArrow","Leftrightarrow","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","leftthreetimes","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","lEg","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","LessEqualGreater","LessFullEqual","LessGreater","lessgtr","LessLess","lesssim","LessSlantEqual","LessTilde","lfisht","lfloor","Lfr","lfr","lg","lgE","lHar","lhard","lharu","lharul","lhblk","LJcy","ljcy","Ll","ll","llarr","llcorner","Lleftarrow","llhard","lltri","Lmidot","lmidot","lmoust","lmoustache","lnap","lnapprox","lnE","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","LongLeftArrow","Longleftarrow","longleftarrow","LongLeftRightArrow","Longleftrightarrow","longleftrightarrow","longmapsto","LongRightArrow","Longrightarrow","longrightarrow","looparrowleft","looparrowright","lopar","Lopf","lopf","loplus","lotimes","lowast","lowbar","LowerLeftArrow","LowerRightArrow","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","Lscr","lscr","Lsh","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","Lstrok","lstrok","LT","Lt","lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrPar","lurdshar","luruhar","lvertneqq","lvnE","macr","male","malt","maltese","Map","map","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","Mcy","mcy","mdash","mDDot","measuredangle","MediumSpace","Mellintrf","Mfr","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","MinusPlus","mlcp","mldr","mnplus","models","Mopf","mopf","mp","Mscr","mscr","mstpos","Mu","mu","multimap","mumap","nabla","Nacute","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","Ncaron","ncaron","Ncedil","ncedil","ncong","ncongdot","ncup","Ncy","ncy","ndash","ne","nearhk","neArr","nearr","nearrow","nedot","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","nequiv","nesear","nesim","NestedGreaterGreater","NestedLessLess","NewLine","nexist","nexists","Nfr","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","nGg","ngsim","nGt","ngt","ngtr","nGtv","nhArr","nharr","nhpar","ni","nis","nisd","niv","NJcy","njcy","nlArr","nlarr","nldr","nlE","nle","nLeftarrow","nleftarrow","nLeftrightarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nLl","nlsim","nLt","nlt","nltri","nltrie","nLtv","nmid","NoBreak","NonBreakingSpace","Nopf","nopf","Not","not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","notin","notindot","notinE","notinva","notinvb","notinvc","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","notni","notniva","notnivb","notnivc","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nRightarrow","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","Nscr","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","Ntilde","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","Nu","nu","num","numero","numsp","nvap","nVDash","nVdash","nvDash","nvdash","nvge","nvgt","nvHarr","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwarhk","nwArr","nwarr","nwarrow","nwnear","Oacute","oacute","oast","ocir","Ocirc","ocirc","Ocy","ocy","odash","Odblac","odblac","odiv","odot","odsold","OElig","oelig","ofcir","Ofr","ofr","ogon","Ograve","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","Omacr","omacr","Omega","omega","Omicron","omicron","omid","ominus","Oopf","oopf","opar","OpenCurlyDoubleQuote","OpenCurlyQuote","operp","oplus","Or","or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv","oS","Oscr","oscr","Oslash","oslash","osol","Otilde","otilde","Otimes","otimes","otimesas","Ouml","ouml","ovbar","OverBar","OverBrace","OverBracket","OverParenthesis","par","para","parallel","parsim","parsl","part","PartialD","Pcy","pcy","percnt","period","permil","perp","pertenk","Pfr","pfr","Phi","phi","phiv","phmmat","phone","Pi","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","PlusMinus","plusmn","plussim","plustwo","pm","Poincareplane","pointint","Popf","popf","pound","Pr","pr","prap","prcue","prE","pre","prec","precapprox","preccurlyeq","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","preceq","precnapprox","precneqq","precnsim","precsim","Prime","prime","primes","prnap","prnE","prnsim","prod","Product","profalar","profline","profsurf","prop","Proportion","Proportional","propto","prsim","prurel","Pscr","pscr","Psi","psi","puncsp","Qfr","qfr","qint","Qopf","qopf","qprime","Qscr","qscr","quaternions","quatint","quest","questeq","QUOT","quot","rAarr","race","Racute","racute","radic","raemptyv","Rang","rang","rangd","range","rangle","raquo","Rarr","rArr","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","Rarrtl","rarrtl","rarrw","rAtail","ratail","ratio","rationals","RBarr","rBarr","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","Rcaron","rcaron","Rcedil","rcedil","rceil","rcub","Rcy","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","Re","real","realine","realpart","reals","rect","REG","reg","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","rfisht","rfloor","Rfr","rfr","rHar","rhard","rharu","rharul","Rho","rho","rhov","RightAngleBracket","RightArrow","Rightarrow","rightarrow","RightArrowBar","RightArrowLeftArrow","rightarrowtail","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","RightTee","RightTeeArrow","RightTeeVector","rightthreetimes","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","Ropf","ropf","roplus","rotimes","RoundImplies","rpar","rpargt","rppolint","rrarr","Rrightarrow","rsaquo","Rscr","rscr","Rsh","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","RuleDelayed","ruluhar","rx","Sacute","sacute","sbquo","Sc","sc","scap","Scaron","scaron","sccue","scE","sce","Scedil","scedil","Scirc","scirc","scnap","scnE","scnsim","scpolint","scsim","Scy","scy","sdot","sdotb","sdote","searhk","seArr","searr","searrow","sect","semi","seswar","setminus","setmn","sext","Sfr","sfr","sfrown","sharp","SHCHcy","shchcy","SHcy","shcy","ShortDownArrow","ShortLeftArrow","shortmid","shortparallel","ShortRightArrow","ShortUpArrow","shy","Sigma","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","SmallCircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","SOFTcy","softcy","sol","solb","solbar","Sopf","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","Sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","Square","square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","squarf","squf","srarr","Sscr","sscr","ssetmn","ssmile","sstarf","Star","star","starf","straightepsilon","straightphi","strns","Sub","sub","subdot","subE","sube","subedot","submult","subnE","subne","subplus","subrarr","Subset","subset","subseteq","subseteqq","SubsetEqual","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","succeq","succnapprox","succneqq","succnsim","succsim","SuchThat","Sum","sum","sung","Sup","sup","sup1","sup2","sup3","supdot","supdsub","supE","supe","supedot","Superset","SupersetEqual","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","Supset","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swarhk","swArr","swarr","swarrow","swnwar","szlig","Tab","target","Tau","tau","tbrk","Tcaron","tcaron","Tcedil","tcedil","Tcy","tcy","tdot","telrec","Tfr","tfr","there4","Therefore","therefore","Theta","theta","thetasym","thetav","thickapprox","thicksim","ThickSpace","thinsp","ThinSpace","thkap","thksim","THORN","thorn","Tilde","tilde","TildeEqual","TildeFullEqual","TildeTilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","Topf","topf","topfork","tosa","tprime","TRADE","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","TripleDot","triplus","trisb","tritime","trpezium","Tscr","tscr","TScy","tscy","TSHcy","tshcy","Tstrok","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","Uacute","uacute","Uarr","uArr","uarr","Uarrocir","Ubrcy","ubrcy","Ubreve","ubreve","Ucirc","ucirc","Ucy","ucy","udarr","Udblac","udblac","udhar","ufisht","Ufr","ufr","Ugrave","ugrave","uHar","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","Umacr","umacr","uml","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","uogon","Uopf","uopf","UpArrow","Uparrow","uparrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","Updownarrow","updownarrow","UpEquilibrium","upharpoonleft","upharpoonright","uplus","UpperLeftArrow","UpperRightArrow","Upsi","upsi","upsih","Upsilon","upsilon","UpTee","UpTeeArrow","upuparrows","urcorn","urcorner","urcrop","Uring","uring","urtri","Uscr","uscr","utdot","Utilde","utilde","utri","utrif","uuarr","Uuml","uuml","uwangle","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","vArr","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","Vbar","vBar","vBarv","Vcy","vcy","VDash","Vdash","vDash","vdash","Vdashl","Vee","vee","veebar","veeeq","vellip","Verbar","verbar","Vert","vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","vfr","vltri","vnsub","vnsup","Vopf","vopf","vprop","vrtri","Vscr","vscr","vsubnE","vsubne","vsupnE","vsupne","Vvdash","vzigzag","Wcirc","wcirc","wedbar","Wedge","wedge","wedgeq","weierp","Wfr","wfr","Wopf","wopf","wp","wr","wreath","Wscr","wscr","xcap","xcirc","xcup","xdtri","Xfr","xfr","xhArr","xharr","Xi","xi","xlArr","xlarr","xmap","xnis","xodot","Xopf","xopf","xoplus","xotime","xrArr","xrarr","Xscr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","Yacute","yacute","YAcy","yacy","Ycirc","ycirc","Ycy","ycy","yen","Yfr","yfr","YIcy","yicy","Yopf","yopf","Yscr","yscr","YUcy","yucy","Yuml","yuml","Zacute","zacute","Zcaron","zcaron","Zcy","zcy","Zdot","zdot","zeetrf","ZeroWidthSpace","Zeta","zeta","Zfr","zfr","ZHcy","zhcy","zigrarr","Zopf","zopf","Zscr","zscr","zwj","zwnj"]),i=new Set(["aacute","abreve","ac","acd","ace","acirc","acute","acy","aelig","af","afr","agrave","alefsym","aleph","alpha","amacr","amalg","amp","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","aogon","aopf","ap","apacir","ape","apid","apos","applyfunction","approx","approxeq","aring","ascr","assign","ast","asymp","asympeq","atilde","auml","awconint","awint","backcong","backepsilon","backprime","backsim","backsimeq","backslash","barv","barvee","barwed","barwedge","bbrk","bbrktbrk","bcong","bcy","bdquo","becaus","because","bemptyv","bepsi","bernou","bernoullis","beta","beth","between","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bnot","bopf","bot","bottom","bowtie","boxbox","boxdl","boxdr","boxh","boxhd","boxhu","boxminus","boxplus","boxtimes","boxul","boxur","boxv","boxvh","boxvl","boxvr","bprime","breve","brvbar","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpe","bumpeq","cacute","cap","capand","capbrcup","capcap","capcup","capdot","capitaldifferentiald","caps","caret","caron","cayleys","ccaps","ccaron","ccedil","ccirc","cconint","ccups","ccupssm","cdot","cedil","cedilla","cemptyv","cent","centerdot","cfr","chcy","check","checkmark","chi","cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","circledot","circledr","circleds","circleminus","circleplus","circletimes","cire","cirfnint","cirmid","cirscir","clockwisecontourintegral","closecurlydoublequote","closecurlyquote","clubs","clubsuit","colon","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","congruent","conint","contourintegral","copf","coprod","coproduct","copy","copysr","counterclockwisecontourintegral","crarr","cross","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","cupbrcap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","dagger","daleth","darr","dash","dashv","dbkarow","dblac","dcaron","dcy","dd","ddagger","ddarr","ddotrahd","ddotseq","deg","del","delta","demptyv","dfisht","dfr","dhar","dharl","dharr","diacriticalacute","diacriticaldot","diacriticaldoubleacute","diacriticalgrave","diacriticaltilde","diam","diamond","diamondsuit","diams","die","differentiald","digamma","disin","div","divide","divideontimes","divonx","djcy","dlcorn","dlcrop","dollar","dopf","dot","dotdot","doteq","doteqdot","dotequal","dotminus","dotplus","dotsquare","doublebarwedge","doublecontourintegral","doubledot","doubledownarrow","doubleleftarrow","doubleleftrightarrow","doublelefttee","doublelongleftarrow","doublelongleftrightarrow","doublelongrightarrow","doublerightarrow","doublerighttee","doubleuparrow","doubleupdownarrow","doubleverticalbar","downarrow","downarrowbar","downarrowuparrow","downbreve","downdownarrows","downharpoonleft","downharpoonright","downleftrightvector","downleftteevector","downleftvector","downleftvectorbar","downrightteevector","downrightvector","downrightvectorbar","downtee","downteearrow","drbkarow","drcorn","drcrop","dscr","dscy","dsol","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","dzcy","dzigrarr","eacute","easter","ecaron","ecir","ecirc","ecolon","ecy","eddot","edot","ee","efdot","efr","eg","egrave","egs","egsdot","el","element","elinters","ell","els","elsdot","emacr","empty","emptyset","emptysmallsquare","emptyv","emptyverysmallsquare","emsp","emsp13","emsp14","eng","ensp","eogon","eopf","epar","eparsl","eplus","epsi","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","equal","equals","equaltilde","equest","equilibrium","equiv","equivdd","eqvparsl","erarr","erdot","escr","esdot","esim","eta","eth","euml","euro","excl","exist","exists","expectation","exponentiale","fallingdotseq","fcy","female","ffilig","fflig","ffllig","ffr","filig","filledsmallsquare","filledverysmallsquare","fjlig","flat","fllig","fltns","fnof","fopf","forall","fork","forkv","fouriertrf","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","fscr","gacute","gamma","gammad","gap","gbreve","gcedil","gcirc","gcy","gdot","ge","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","gfr","gg","ggg","gimel","gjcy","gl","gla","gle","glj","gnap","gnapprox","gne","gneq","gneqq","gnsim","gopf","grave","greaterequal","greaterequalless","greaterfullequal","greatergreater","greaterless","greaterslantequal","greatertilde","gscr","gsim","gsime","gsiml","gt","gtcc","gtcir","gtdot","gtlpar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvne","hacek","hairsp","half","hamilt","hardcy","harr","harrcir","harrw","hat","hbar","hcirc","hearts","heartsuit","hellip","hercon","hfr","hilbertspace","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","hopf","horbar","horizontalline","hscr","hslash","hstrok","humpdownhump","humpequal","hybull","hyphen","iacute","ic","icirc","icy","idot","iecy","iexcl","iff","ifr","igrave","ii","iiiint","iiint","iinfin","iiota","ijlig","im","imacr","image","imaginaryi","imagline","imagpart","imath","imof","imped","implies","in","incare","infin","infintie","inodot","int","intcal","integers","integral","intercal","intersection","intlarhk","intprod","invisiblecomma","invisibletimes","iocy","iogon","iopf","iota","iprod","iquest","iscr","isin","isindot","isine","isins","isinsv","isinv","it","itilde","iukcy","iuml","jcirc","jcy","jfr","jmath","jopf","jscr","jsercy","jukcy","kappa","kappav","kcedil","kcy","kfr","kgreen","khcy","kjcy","kopf","kscr","laarr","lacute","laemptyv","lagran","lambda","lang","langd","langle","lap","laplacetrf","laquo","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","late","lates","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","lcaron","lcedil","lceil","lcub","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","le","leftanglebracket","leftarrow","leftarrowbar","leftarrowrightarrow","leftarrowtail","leftceiling","leftdoublebracket","leftdownteevector","leftdownvector","leftdownvectorbar","leftfloor","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leftrightvector","lefttee","leftteearrow","leftteevector","leftthreetimes","lefttriangle","lefttrianglebar","lefttriangleequal","leftupdownvector","leftupteevector","leftupvector","leftupvectorbar","leftvector","leftvectorbar","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","lessequalgreater","lessfullequal","lessgreater","lessgtr","lessless","lesssim","lessslantequal","lesstilde","lfisht","lfloor","lfr","lg","lge","lhar","lhard","lharu","lharul","lhblk","ljcy","ll","llarr","llcorner","lleftarrow","llhard","lltri","lmidot","lmoust","lmoustache","lnap","lnapprox","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lopar","lopf","loplus","lotimes","lowast","lowbar","lowerleftarrow","lowerrightarrow","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","lscr","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","lstrok","lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrpar","lurdshar","luruhar","lvertneqq","lvne","macr","male","malt","maltese","map","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","mcy","mdash","mddot","measuredangle","mediumspace","mellintrf","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","minusplus","mlcp","mldr","mnplus","models","mopf","mp","mscr","mstpos","mu","multimap","mumap","nabla","nacute","nang","nap","nape","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","ncaron","ncedil","ncong","ncongdot","ncup","ncy","ndash","ne","nearhk","nearr","nearrow","nedot","negativemediumspace","negativethickspace","negativethinspace","negativeverythinspace","nequiv","nesear","nesim","nestedgreatergreater","nestedlessless","newline","nexist","nexists","nfr","nge","ngeq","ngeqq","ngeqslant","nges","ngg","ngsim","ngt","ngtr","ngtv","nharr","nhpar","ni","nis","nisd","niv","njcy","nlarr","nldr","nle","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nll","nlsim","nlt","nltri","nltrie","nltv","nmid","nobreak","nonbreakingspace","nopf","not","notcongruent","notcupcap","notdoubleverticalbar","notelement","notequal","notequaltilde","notexists","notgreater","notgreaterequal","notgreaterfullequal","notgreatergreater","notgreaterless","notgreaterslantequal","notgreatertilde","nothumpdownhump","nothumpequal","notin","notindot","notine","notinva","notinvb","notinvc","notlefttriangle","notlefttrianglebar","notlefttriangleequal","notless","notlessequal","notlessgreater","notlessless","notlessslantequal","notlesstilde","notnestedgreatergreater","notnestedlessless","notni","notniva","notnivb","notnivc","notprecedes","notprecedesequal","notprecedesslantequal","notreverseelement","notrighttriangle","notrighttrianglebar","notrighttriangleequal","notsquaresubset","notsquaresubsetequal","notsquaresuperset","notsquaresupersetequal","notsubset","notsubsetequal","notsucceeds","notsucceedsequal","notsucceedsslantequal","notsucceedstilde","notsuperset","notsupersetequal","nottilde","nottildeequal","nottildefullequal","nottildetilde","notverticalbar","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrarr","nrarrc","nrarrw","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","nu","num","numero","numsp","nvap","nvdash","nvge","nvgt","nvharr","nvinfin","nvlarr","nvle","nvlt","nvltrie","nvrarr","nvrtrie","nvsim","nwarhk","nwarr","nwarrow","nwnear","oacute","oast","ocir","ocirc","ocy","odash","odblac","odiv","odot","odsold","oelig","ofcir","ofr","ogon","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","omacr","omega","omicron","omid","ominus","oopf","opar","opencurlydoublequote","opencurlyquote","operp","oplus","or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv","os","oscr","oslash","osol","otilde","otimes","otimesas","ouml","ovbar","overbar","overbrace","overbracket","overparenthesis","par","para","parallel","parsim","parsl","part","partiald","pcy","percnt","period","permil","perp","pertenk","pfr","phi","phiv","phmmat","phone","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","plusminus","plusmn","plussim","plustwo","pm","poincareplane","pointint","popf","pound","pr","prap","prcue","pre","prec","precapprox","preccurlyeq","precedes","precedesequal","precedesslantequal","precedestilde","preceq","precnapprox","precneqq","precnsim","precsim","prime","primes","prnap","prne","prnsim","prod","product","profalar","profline","profsurf","prop","proportion","proportional","propto","prsim","prurel","pscr","psi","puncsp","qfr","qint","qopf","qprime","qscr","quaternions","quatint","quest","questeq","quot","raarr","race","racute","radic","raemptyv","rang","rangd","range","rangle","raquo","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","rarrw","ratail","ratio","rationals","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","rcaron","rcedil","rceil","rcub","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","re","real","realine","realpart","reals","rect","reg","reverseelement","reverseequilibrium","reverseupequilibrium","rfisht","rfloor","rfr","rhar","rhard","rharu","rharul","rho","rhov","rightanglebracket","rightarrow","rightarrowbar","rightarrowleftarrow","rightarrowtail","rightceiling","rightdoublebracket","rightdownteevector","rightdownvector","rightdownvectorbar","rightfloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","righttee","rightteearrow","rightteevector","rightthreetimes","righttriangle","righttrianglebar","righttriangleequal","rightupdownvector","rightupteevector","rightupvector","rightupvectorbar","rightvector","rightvectorbar","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","ropf","roplus","rotimes","roundimplies","rpar","rpargt","rppolint","rrarr","rrightarrow","rsaquo","rscr","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","ruledelayed","ruluhar","rx","sacute","sbquo","sc","scap","scaron","sccue","sce","scedil","scirc","scnap","scne","scnsim","scpolint","scsim","scy","sdot","sdotb","sdote","searhk","searr","searrow","sect","semi","seswar","setminus","setmn","sext","sfr","sfrown","sharp","shchcy","shcy","shortdownarrow","shortleftarrow","shortmid","shortparallel","shortrightarrow","shortuparrow","shy","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simge","siml","simle","simne","simplus","simrarr","slarr","smallcircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","softcy","sol","solb","solbar","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","squareintersection","squaresubset","squaresubsetequal","squaresuperset","squaresupersetequal","squareunion","squarf","squf","srarr","sscr","ssetmn","ssmile","sstarf","star","starf","straightepsilon","straightphi","strns","sub","subdot","sube","subedot","submult","subne","subplus","subrarr","subset","subseteq","subseteqq","subsetequal","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","succeeds","succeedsequal","succeedsslantequal","succeedstilde","succeq","succnapprox","succneqq","succnsim","succsim","suchthat","sum","sung","sup","sup1","sup2","sup3","supdot","supdsub","supe","supedot","superset","supersetequal","suphsol","suphsub","suplarr","supmult","supne","supplus","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swarhk","swarr","swarrow","swnwar","szlig","tab","target","tau","tbrk","tcaron","tcedil","tcy","tdot","telrec","tfr","there4","therefore","theta","thetasym","thetav","thickapprox","thicksim","thickspace","thinsp","thinspace","thkap","thksim","thorn","tilde","tildeequal","tildefullequal","tildetilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","topf","topfork","tosa","tprime","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","tripledot","triplus","trisb","tritime","trpezium","tscr","tscy","tshcy","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","uacute","uarr","uarrocir","ubrcy","ubreve","ucirc","ucy","udarr","udblac","udhar","ufisht","ufr","ugrave","uhar","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","umacr","uml","underbar","underbrace","underbracket","underparenthesis","union","unionplus","uogon","uopf","uparrow","uparrowbar","uparrowdownarrow","updownarrow","upequilibrium","upharpoonleft","upharpoonright","uplus","upperleftarrow","upperrightarrow","upsi","upsih","upsilon","uptee","upteearrow","upuparrows","urcorn","urcorner","urcrop","uring","urtri","uscr","utdot","utilde","utri","utrif","uuarr","uuml","uwangle","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","vbar","vbarv","vcy","vdash","vdashl","vee","veebar","veeeq","vellip","verbar","vert","verticalbar","verticalline","verticalseparator","verticaltilde","verythinspace","vfr","vltri","vnsub","vnsup","vopf","vprop","vrtri","vscr","vsubne","vsupne","vvdash","vzigzag","wcirc","wedbar","wedge","wedgeq","weierp","wfr","wopf","wp","wr","wreath","wscr","xcap","xcirc","xcup","xdtri","xfr","xharr","xi","xlarr","xmap","xnis","xodot","xopf","xoplus","xotime","xrarr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","yacute","yacy","ycirc","ycy","yen","yfr","yicy","yopf","yscr","yucy","yuml","zacute","zcaron","zcy","zdot","zeetrf","zerowidthspace","zeta","zfr","zhcy","zigrarr","zopf","zscr","zwj","zwnj"]);e.allNamedEntities=l,e.allNamedEntitiesSetOnly=u,e.allNamedEntitiesSetOnlyCaseInsensitive=i,e.brokenNamedEntities=r,e.decode=function(t){if(typeof t!="string"||!t.length||!t.startsWith("&")||!t.endsWith(";"))throw new Error(`all-named-html-entities/decode(): [THROW_ID_01] Input must be an HTML entity with leading ampersand and trailing semicolon, but "${t}" was given`);let O=t.slice(1,t.length-1);return l[O]?l[O]:null},e.entEndsWith=c,e.entEndsWithCaseInsensitive=n,e.entStartsWith=o,e.entStartsWithCaseInsensitive=b,e.maxLength=31,e.minLength=2,e.uncertain=P,e.version="1.5.12",Object.defineProperty(e,"__esModule",{value:!0})})});var Sn=et((fa,Dn)=>{(function(e,y){typeof fa=="object"&&typeof Dn!="undefined"?y(fa):typeof define=="function"&&define.amd?define(["exports"],y):y((e=typeof globalThis!="undefined"?globalThis:e||self).stringRangeExpander={})})(fa,function(e){"use strict";let y={str:"",from:0,to:0,ifLeftSideIncludesThisThenCropTightly:"",ifLeftSideIncludesThisCropItToo:"",ifRightSideIncludesThisThenCropTightly:"",ifRightSideIncludesThisCropItToo:"",extendToOneSide:!1,wipeAllWhitespaceOnLeft:!1,wipeAllWhitespaceOnRight:!1,addSingleSpaceToPreventAccidentalConcatenation:!1};e.defaults=y,e.expander=function(h){let a=/^[0-9a-zA-Z]+$/;function g(c){return!(!c||typeof c!="string")&&!c.trim()}function pe(c){return typeof c=="string"}if(!h||typeof h!="object"||Array.isArray(h)){let c;throw c=h===void 0?"but it is missing completely.":h===null?"but it was given as null.":`but it was given as ${typeof h}, equal to:
${JSON.stringify(h,null,4)}.`,new Error(`string-range-expander: [THROW_ID_01] Input must be a plain object ${c}`)}if(typeof h=="object"&&h!==null&&!Array.isArray(h)&&!Object.keys(h).length)throw new Error("string-range-expander: [THROW_ID_02] Input must be a plain object but it was given as a plain object without any keys.");if(typeof h.from!="number")throw new Error(`string-range-expander: [THROW_ID_03] The input's "from" value opts.from, is not a number! Currently it's given as ${typeof h.from}, equal to ${JSON.stringify(h.from,null,0)}`);if(typeof h.to!="number")throw new Error(`string-range-expander: [THROW_ID_04] The input's "to" value opts.to, is not a number! Currently it's given as ${typeof h.to}, equal to ${JSON.stringify(h.to,null,0)}`);if(h&&h.str&&!h.str[h.from]&&h.from!==h.to)throw new Error(`string-range-expander: [THROW_ID_05] The given input string opts.str ("${h.str}") must contain the character at index "from" ("${h.from}")`);if(h&&h.str&&!h.str[h.to-1])throw new Error(`string-range-expander: [THROW_ID_06] The given input string, opts.str ("${h.str}") must contain the character at index before "to" ("${h.to-1}")`);if(h.from>h.to)throw new Error(`string-range-expander: [THROW_ID_07] The given "from" index, "${h.from}" is greater than "to" index, "${h.to}". That's wrong!`);if(pe(h.extendToOneSide)&&h.extendToOneSide!=="left"&&h.extendToOneSide!=="right"||!pe(h.extendToOneSide)&&h.extendToOneSide!==void 0&&h.extendToOneSide!==!1)throw new Error(`string-range-expander: [THROW_ID_08] The opts.extendToOneSide value is not recogniseable! It's set to: "${h.extendToOneSide}" (${typeof h.extendToOneSide}). It has to be either Boolean "false" or strings "left" or "right"`);let U=ye(ye({},y),h);if(Array.isArray(U.ifLeftSideIncludesThisThenCropTightly)){let c,b;if(!U.ifLeftSideIncludesThisThenCropTightly.every((n,P)=>!!pe(n)||(c=P,b=n,!1)))throw new Error(`string-range-expander: [THROW_ID_09] The opts.ifLeftSideIncludesThisThenCropTightly was set to an array:
${JSON.stringify(U.ifLeftSideIncludesThisThenCropTightly,null,4)}. Now, that array contains not only string elements. For example, an element at index ${c} is of a type ${typeof b} (equal to ${JSON.stringify(b,null,0)}).`);U.ifLeftSideIncludesThisThenCropTightly=U.ifLeftSideIncludesThisThenCropTightly.join("")}let l=U.str,r=U.from,o=U.to;if(U.extendToOneSide!=="right"&&(g(l[r-1])&&(g(l[r-2])||U.ifLeftSideIncludesThisCropItToo.includes(l[r-2]))||l[r-1]&&U.ifLeftSideIncludesThisCropItToo.includes(l[r-1])||U.wipeAllWhitespaceOnLeft&&g(l[r-1]))){for(let c=r;c--;)if(!U.ifLeftSideIncludesThisCropItToo.includes(l[c])){if(l[c].trim()){r=U.wipeAllWhitespaceOnLeft||U.ifLeftSideIncludesThisCropItToo.includes(l[c+1])?c+1:c+2;break}if(c===0){r=U.wipeAllWhitespaceOnLeft?0:1;break}}}if(U.extendToOneSide!=="left"&&(g(l[o])&&(U.wipeAllWhitespaceOnRight||g(l[o+1]))||U.ifRightSideIncludesThisCropItToo.includes(l[o]))){for(let c=o,b=l.length;c<b;c++)if(!U.ifRightSideIncludesThisCropItToo.includes(l[c])&&(l[c]&&l[c].trim()||l[c]===void 0)){o=U.wipeAllWhitespaceOnRight||U.ifRightSideIncludesThisCropItToo.includes(l[c-1])?c:c-1;break}}return(U.extendToOneSide!=="right"&&pe(U.ifLeftSideIncludesThisThenCropTightly)&&U.ifLeftSideIncludesThisThenCropTightly&&(l[r-2]&&U.ifLeftSideIncludesThisThenCropTightly.includes(l[r-2])||l[r-1]&&U.ifLeftSideIncludesThisThenCropTightly.includes(l[r-1]))||U.extendToOneSide!=="left"&&pe(U.ifRightSideIncludesThisThenCropTightly)&&U.ifRightSideIncludesThisThenCropTightly&&(l[o+1]&&U.ifRightSideIncludesThisThenCropTightly.includes(l[o+1])||l[o]&&U.ifRightSideIncludesThisThenCropTightly.includes(l[o])))&&(U.extendToOneSide!=="right"&&g(l[r-1])&&!U.wipeAllWhitespaceOnLeft&&(r-=1),U.extendToOneSide!=="left"&&g(l[o])&&!U.wipeAllWhitespaceOnRight&&(o+=1)),U.addSingleSpaceToPreventAccidentalConcatenation&&l[r-1]&&l[r-1].trim()&&l[o]&&l[o].trim()&&(!U.ifLeftSideIncludesThisThenCropTightly&&!U.ifRightSideIncludesThisThenCropTightly||U.ifLeftSideIncludesThisThenCropTightly&&!U.ifLeftSideIncludesThisThenCropTightly.includes(l[r-1])||!(!U.ifRightSideIncludesThisThenCropTightly||l[o]&&U.ifRightSideIncludesThisThenCropTightly.includes(l[o])))&&(a.test(l[r-1])||a.test(l[o]))?[r,o," "]:[r,o]},e.version="2.0.12",Object.defineProperty(e,"__esModule",{value:!0})})});var In=et((ha,En)=>{(function(e,y){typeof ha=="object"&&typeof En!="undefined"?y(ha):typeof define=="function"&&define.amd?define(["exports"],y):y((e=typeof globalThis!="undefined"?globalThis:e||self).stringApostrophes={})})(ha,function(e){"use strict";let y={strictlyTwoElementsInRangeArrays:!1,progressFn:null};function h(l,r){if(!Array.isArray(l)||!l.length)return l;let o=ye(ye({},y),r),c,b;if(o.strictlyTwoElementsInRangeArrays&&!l.filter(u=>u).every((u,i)=>u.length===2||(c=i,b=u.length,!1)))throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${c}th range (${JSON.stringify(l[c],null,4)}) has not two but ${b} elements!`);if(!l.filter(u=>u).every((u,i)=>!(!Number.isInteger(u[0])||u[0]<0||!Number.isInteger(u[1])||u[1]<0)||(c=i,!1)))throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${c}th range (${JSON.stringify(l[c],null,4)}) does not consist of only natural numbers!`);let n=l.filter(u=>u).length**2,P=0;return Array.from(l).filter(u=>u).sort((u,i)=>(o.progressFn&&(P+=1,o.progressFn(Math.floor(100*P/n))),u[0]===i[0]?u[1]<i[1]?-1:u[1]>i[1]?1:0:u[0]<i[0]?-1:1))}let a={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};function g(l,r){function o(t){return t&&typeof t=="object"&&!Array.isArray(t)}if(!Array.isArray(l)||!l.length)return null;let c;if(r){if(!o(r))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:
${JSON.stringify(r,null,4)} (type ${typeof r})`);if(c=ye(ye({},a),r),c.progressFn&&o(c.progressFn)&&!Object.keys(c.progressFn).length)c.progressFn=null;else if(c.progressFn&&typeof c.progressFn!="function")throw new Error(`ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "${typeof c.progressFn}", equal to ${JSON.stringify(c.progressFn,null,4)}`);if(c.mergeType&&+c.mergeType!=1&&+c.mergeType!=2)throw new Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof c.mergeType}", equal to ${JSON.stringify(c.mergeType,null,4)}`);if(typeof c.joinRangesThatTouchEdges!="boolean")throw new Error(`ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof c.joinRangesThatTouchEdges}", equal to ${JSON.stringify(c.joinRangesThatTouchEdges,null,4)}`)}else c=ye({},a);let b=l.filter(t=>t).map(t=>[...t]).filter(t=>t[2]!==void 0||t[0]!==t[1]),n,P,u;if(n=c.progressFn?h(b,{progressFn:t=>{u=Math.floor(t/5),u!==P&&(P=u,c.progressFn(u))}}):h(b),!n)return null;let i=n.length-1;for(let t=i;t>0;t--)c.progressFn&&(u=Math.floor(78*(1-t/i))+21,u!==P&&u>P&&(P=u,c.progressFn(u))),(n[t][0]<=n[t-1][0]||!c.joinRangesThatTouchEdges&&n[t][0]<n[t-1][1]||c.joinRangesThatTouchEdges&&n[t][0]<=n[t-1][1])&&(n[t-1][0]=Math.min(n[t][0],n[t-1][0]),n[t-1][1]=Math.max(n[t][1],n[t-1][1]),n[t][2]!==void 0&&(n[t-1][0]>=n[t][0]||n[t-1][1]<=n[t][1])&&n[t-1][2]!==null&&(n[t][2]===null&&n[t-1][2]!==null?n[t-1][2]=null:n[t-1][2]!=null?+c.mergeType==2&&n[t-1][0]===n[t][0]?n[t-1][2]=n[t][2]:n[t-1][2]+=n[t][2]:n[t-1][2]=n[t][2]),n.splice(t,1),t=n.length);return n.length?n:null}function pe(l,r,o){let c,b=0,n=0;if(arguments.length===0)throw new Error("ranges-apply: [THROW_ID_01] inputs missing!");if(typeof l!="string")throw new TypeError(`ranges-apply: [THROW_ID_02] first input argument must be a string! Currently it's: ${typeof l}, equal to: ${JSON.stringify(l,null,4)}`);if(r&&!Array.isArray(r))throw new TypeError(`ranges-apply: [THROW_ID_03] second input argument must be an array (or null)! Currently it's: ${typeof r}, equal to: ${JSON.stringify(r,null,4)}`);if(o&&typeof o!="function")throw new TypeError(`ranges-apply: [THROW_ID_04] the third input argument must be a function (or falsey)! Currently it's: ${typeof o}, equal to: ${JSON.stringify(o,null,4)}`);if(!r||!r.filter(O=>O).length)return l;c=Array.isArray(r)&&Number.isInteger(r[0])&&Number.isInteger(r[1])?[Array.from(r)]:Array.from(r);let P=c.length,u=0;c.filter(O=>O).forEach((O,v)=>{if(o&&(b=Math.floor(u/P*10),b!==n&&(n=b,o(b))),!Array.isArray(O))throw new TypeError(`ranges-apply: [THROW_ID_05] ranges array, second input arg., has ${v}th element not an array: ${JSON.stringify(O,null,4)}, which is ${typeof O}`);if(!Number.isInteger(O[0])){if(!Number.isInteger(+O[0])||+O[0]<0)throw new TypeError(`ranges-apply: [THROW_ID_06] ranges array, second input arg. has ${v}th element, array ${JSON.stringify(O,null,0)}. Its first element is not an integer, string index, but ${typeof O[0]}, equal to: ${JSON.stringify(O[0],null,4)}.`);c[v][0]=+c[v][0]}if(!Number.isInteger(O[1])){if(!Number.isInteger(+O[1])||+O[1]<0)throw new TypeError(`ranges-apply: [THROW_ID_07] ranges array, second input arg. has ${v}th element, array ${JSON.stringify(O,null,0)}. Its second element is not an integer, string index, but ${typeof O[1]}, equal to: ${JSON.stringify(O[1],null,4)}.`);c[v][1]=+c[v][1]}u+=1});let i=g(c,{progressFn:O=>{o&&(b=10+Math.floor(O/10),b!==n&&(n=b,o(b)))}}),t=Array.isArray(i)?i.length:0;if(t>0){let O=l.slice(i[t-1][1]);l=i.reduce((v,M,q,Q)=>(o&&(b=20+Math.floor(q/t*80),b!==n&&(n=b,o(b))),v+l.slice(q===0?0:Q[q-1][1],Q[q][0])+(Q[q][2]||"")),""),l+=O}return l}function U(l,{from:r,to:o,value:c,convertEntities:b=!0,convertApostrophes:n=!0,offsetBy:P}){if(!Number.isInteger(r)||r<0)throw new Error(`string-apostrophes: [THROW_ID_01] options objects key "to", a starting string index, is wrong! It was given as ${r} (type ${typeof r})`);Number.isInteger(o)||(o=r+1);let u=[],i="\u2018",t="\u2019",O="\u201C",v="\u201D",M="\u2032",q="\u2033",Q=[".",",",";","!","?"];function Z(G){return typeof G=="string"&&G.charCodeAt(0)>=48&&G.charCodeAt(0)<=57}function te(G){return typeof G=="string"&&!!G.length&&G.toUpperCase()!==G.toLowerCase()}return c&&["'",i,t,M].includes(c)||o===r+1&&["'",i,t,M].includes(l[r])?l[r-1]&&l[o]&&Z(l[r-1])&&!te(l[o])?n&&l.slice(r,o)!==(b?"&prime;":M)&&c!==(b?"&prime;":M)?u.push([r,o,b?"&prime;":M]):n||l.slice(r,o)==="'"||c==="'"||u.push([r,o,"'"]):l[o]&&l[o+1]&&l[o]==="n"&&l.slice(r,o)===l.slice(o+1,o+1+(o-r))?n&&l.slice(r,o+2)!==(b?"&rsquo;n&rsquo;":`${t}n${t}`)&&c!==(b?"&rsquo;n&rsquo;":`${t}n${t}`)?(u.push([r,o+2,b?"&rsquo;n&rsquo;":`${t}n${t}`]),typeof P=="function"&&P(2)):n||l.slice(r,o+2)==="'n'"||c==="'n'"||(u.push([r,o+2,"'n'"]),typeof P=="function"&&P(2)):l[o]&&l[o].toLowerCase()==="t"&&(!l[o+1]||!l[o+1].trim()||l[o+1].toLowerCase()==="i")||l[o]&&l[o+2]&&l[o].toLowerCase()==="t"&&l[o+1].toLowerCase()==="w"&&(l[o+2].toLowerCase()==="a"||l[o+2].toLowerCase()==="e"||l[o+2].toLowerCase()==="i"||l[o+2].toLowerCase()==="o")||l[o]&&l[o+1]&&l[o].toLowerCase()==="e"&&l[o+1].toLowerCase()==="m"||l[o]&&l[o+4]&&l[o].toLowerCase()==="c"&&l[o+1].toLowerCase()==="a"&&l[o+2].toLowerCase()==="u"&&l[o+3].toLowerCase()==="s"&&l[o+4].toLowerCase()==="e"||l[o]&&Z(l[o])?n&&l.slice(r,o)!==(b?"&rsquo;":t)&&c!==(b?"&rsquo;":t)?u.push([r,o,b?"&rsquo;":t]):n||l.slice(r,o)==="'"||c==="'"||u.push([r,o,"'"]):l[r-1]&&l[o]&&Q.includes(l[r-1])?l[o].trim()?l[o]==='"'&&l[o+1]&&!l[o+1].trim()&&(n&&l.slice(r,o+1)!==(b?"&rsquo;&rdquo;":`${t}${v}`)&&c!==(b?"&rsquo;&rdquo;":`${t}${v}`)?(u.push([r,o+1,""+(b?"&rsquo;&rdquo;":`${t}${v}`)]),typeof P=="function"&&P(1)):n||l.slice(r,o+1)===`'"`||c===`'"`||(u.push([r,o+1,`'"`]),typeof P=="function"&&P(1))):n&&l.slice(r,o)!==(b?"&rsquo;":t)&&c!==(b?"&rsquo;":t)?u.push([r,o,b?"&rsquo;":t]):n||l.slice(r,o)==="'"||c==="'"||u.push([r,o,"'"]):r===0&&l.slice(o).trim()?n&&l.slice(r,o)!==(b?"&lsquo;":i)&&c!==(b?"&lsquo;":i)?u.push([r,o,b?"&lsquo;":i]):n||l.slice(r,o)==="'"||c==="'"||u.push([r,o,"'"]):!l[o]&&l.slice(0,r).trim()?n&&l.slice(r,o)!==(b?"&rsquo;":t)&&c!==(b?"&rsquo;":t)?u.push([r,o,b?"&rsquo;":t]):n||l.slice(r,o)==="'"||c==="'"||u.push([r,o,"'"]):l[r-1]&&l[o]&&(te(l[r-1])||Z(l[r-1]))&&(te(l[o])||Z(l[o]))?n?(l[o]&&l[r-5]&&l[r-5].toLowerCase()==="h"&&l[r-4].toLowerCase()==="a"&&l[r-3].toLowerCase()==="w"&&l[r-2].toLowerCase()==="a"&&l[r-1].toLowerCase()==="i"&&l[o].toLowerCase()==="i"||l[r-1]&&l[r-1].toLowerCase()==="o"&&l[o+2]&&l[o].toLowerCase()==="a"&&l[o+1].toLowerCase()==="h"&&l[o+2].toLowerCase()==="u")&&l.slice(r,o)!==(b?"&lsquo;":i)&&c!==(b?"&lsquo;":i)?u.push([r,o,b?"&lsquo;":i]):l.slice(r,o)!==(b?"&rsquo;":t)&&c!==(b?"&rsquo;":t)&&u.push([r,o,b?"&rsquo;":t]):l.slice(r,o)!=="'"&&c!=="'"&&u.push([r,o,"'"]):l[o]&&(te(l[o])||Z(l[o]))?n&&l.slice(r,o)!==(b?"&lsquo;":i)&&c!==(b?"&lsquo;":i)?u.push([r,o,b?"&lsquo;":i]):n||l.slice(r,o)==="'"||c==="'"||u.push([r,o,"'"]):te(l[r-1])||Z(l[r-1])?n&&l.slice(r,o)!==(b?"&rsquo;":t)&&c!==(b?"&rsquo;":t)?u.push([r,o,b?"&rsquo;":t]):n||l.slice(r,o)==="'"||c==="'"||u.push([r,o,"'"]):l[r-1]&&!l[r-1].trim()?n&&l.slice(r,o)!==(b?"&lsquo;":i)&&c!==(b?"&lsquo;":i)?u.push([r,o,b?"&lsquo;":i]):n||l.slice(r,o)==="'"||c==="'"||u.push([r,o,"'"]):l[o]&&!l[o].trim()&&(n&&l.slice(r,o)!==(b?"&rsquo;":t)&&c!==(b?"&rsquo;":t)?u.push([r,o,b?"&rsquo;":t]):n||l.slice(r,o)==="'"||c==="'"||u.push([r,o,"'"])):(['"',O,v,q].includes(c)||o===r+1&&['"',O,v,q].includes(l[r]))&&(l[r-1]&&Z(l[r-1])&&l[o]&&l[o]!=="'"&&l[o]!=='"'&&l[o]!==t&&l[o]!==v&&l[o]!==i&&l[o]!==O?n&&l.slice(r,o)!==(b?"&Prime;":q)&&c!==(b?"&Prime;":q)?u.push([r,o,b?"&Prime;":q]):n||l.slice(r,o)==='"'||c==='"'||u.push([r,o,'"']):l[r-1]&&l[o]&&Q.includes(l[r-1])?l[o].trim()?l[o]==="'"&&l[o+1]&&!l[o+1].trim()&&(n&&l.slice(r,o+1)!==(b?"&rdquo;&rsquo;":`${v}${t}`)&&c!==(b?"&rdquo;&rsquo;":`${v}${t}`)?(u.push([r,o+1,b?"&rdquo;&rsquo;":`${v}${t}`]),typeof P=="function"&&P(1)):n||l.slice(r,o+1)===`"'`||c===`"'`||(u.push([r,o+1,`"'`]),typeof P=="function"&&P(1))):n&&l.slice(r,o)!==(b?"&rdquo;":v)&&c!==(b?"&rdquo;":v)?u.push([r,o,b?"&rdquo;":v]):n||l.slice(r,o)==='"'||c==='"'||u.push([r,o,'"']):r===0&&l[o]&&l.slice(o).trim()?n&&l.slice(r,o)!==(b?"&ldquo;":O)&&c!==(b?"&ldquo;":O)?u.push([r,o,b?"&ldquo;":O]):n||l.slice(r,o)==='"'||c==='"'||u.push([r,o,'"']):!l[o]&&l.slice(0,r).trim()?n&&l.slice(r,o)!==(b?"&rdquo;":v)&&c!==(b?"&rdquo;":v)?u.push([r,o,b?"&rdquo;":v]):n||l.slice(r,o)==='"'||c==='"'||u.push([r,o,'"']):l[o]&&(te(l[o])||Z(l[o]))?n&&l.slice(r,o)!==(b?"&ldquo;":O)&&c!==(b?"&ldquo;":O)?u.push([r,o,b?"&ldquo;":O]):n||l.slice(r,o)==='"'||c==='"'||u.push([r,o,'"']):l[r-1]&&(te(l[r-1])||Z(l[r-1]))?n&&l.slice(r,o)!==(b?"&rdquo;":v)&&c!==(b?"&rdquo;":v)?u.push([r,o,b?"&rdquo;":v]):n||l.slice(r,o)==='"'||c==='"'||u.push([r,o,'"']):l[r-1]&&!l[r-1].trim()?n&&l.slice(r,o)!==(b?"&ldquo;":O)&&c!==(b?"&ldquo;":O)?u.push([r,o,b?"&ldquo;":O]):n||l.slice(r,o)==='"'||c==='"'||u.push([r,o,'"']):l[o]&&!l[o].trim()&&(n&&l.slice(r,o)!==(b?"&rdquo;":v)&&c!==(b?"&rdquo;":v)?u.push([r,o,b?"&rdquo;":v]):n||l.slice(r,o)==='"'||c==='"'||u.push([r,o,'"']))),u}e.convertAll=function(l,r){let o=[],c=ye({convertApostrophes:!0,convertEntities:!1},r);for(let b=0,n=l.length;b<n;b++){c.from=b,c.offsetBy=u=>{b+=u};let P=U(l,c);Array.isArray(P)&&P.length&&(o=o.concat(P))}return{result:pe(l,o),ranges:o}},e.convertOne=U,e.version="1.4.12",Object.defineProperty(e,"__esModule",{value:!0})})});var io={};no(io,{det:()=>uo,opts:()=>ka,version:()=>lo});var Er=Ur(Ea()),Nn=Ur(Xa()),Rn=Ur(rn()),Fn=Ur(an()),$a=Ur(on()),On=Ur(ln()),Ba=Ur(cn()),jn=Ur(dn()),Rt=Ur(gn()),Un=Ur(hn()),Na=Ur(yn()),_n=Ur(da());var An="7.0.12";var Vt=Ur(vn()),Ln=Ur(xn()),$n=Ur(Sn()),Tt=Ur(In()),zt=Ur(da()),pr=Ur(Ea());var Ia=Ur(da()),ka={fixBrokenEntities:!0,removeWidows:!0,convertEntities:!0,convertDashes:!0,convertApostrophes:!0,replaceLineBreaks:!0,removeLineBreaks:!1,useXHTML:!0,dontEncodeNonLatin:!0,addMissingSpaces:!0,convertDotsToEllipsis:!0,stripHtml:!0,eol:"lf",stripHtmlButIgnoreTags:["b","strong","i","em","br","sup"],stripHtmlAddNewLine:["li","/ul"],cb:null},ba="\u2018",_t="\u2019",ya="\u201C",Aa="\u201D",Ca=[".",",",";","!","?"],kn="\u2013",xt="\u2014",lt="\xA0",Ta="\u2026";var Cn=/. ./g,so=[[0,880],[887,890],[894,900],[906,908],[908,910],[929,931],[1319,1329],[1366,1369],[1375,1377],[1415,1417],[1418,1423],[1423,1425],[1479,1488],[1514,1520],[1524,1536],[1540,1542],[1563,1566],[1805,1807],[1866,1869],[1969,1984],[2042,2048],[2093,2096],[2110,2112],[2139,2142],[2142,2208],[2208,2210],[2220,2276],[2302,2304],[2423,2425],[2431,2433],[2435,2437],[2444,2447],[2448,2451],[2472,2474],[2480,2482],[2482,2486],[2489,2492],[2500,2503],[2504,2507],[2510,2519],[2519,2524],[2525,2527],[2531,2534],[2555,2561],[2563,2565],[2570,2575],[2576,2579],[2600,2602],[2608,2610],[2611,2613],[2614,2616],[2617,2620],[2620,2622],[2626,2631],[2632,2635],[2637,2641],[2641,2649],[2652,2654],[2654,2662],[2677,2689],[2691,2693],[2701,2703],[2705,2707],[2728,2730],[2736,2738],[2739,2741],[2745,2748],[2757,2759],[2761,2763],[2765,2768],[2768,2784],[2787,2790],[2801,2817],[2819,2821],[2828,2831],[2832,2835],[2856,2858],[2864,2866],[2867,2869],[2873,2876],[2884,2887],[2888,2891],[2893,2902],[2903,2908],[2909,2911],[2915,2918],[2935,2946],[2947,2949],[2954,2958],[2960,2962],[2965,2969],[2970,2972],[2972,2974],[2975,2979],[2980,2984],[2986,2990],[3001,3006],[3010,3014],[3016,3018],[3021,3024],[3024,3031],[3031,3046],[3066,3073],[3075,3077],[3084,3086],[3088,3090],[3112,3114],[3123,3125],[3129,3133],[3140,3142],[3144,3146],[3149,3157],[3158,3160],[3161,3168],[3171,3174],[3183,3192],[3199,3202],[3203,3205],[3212,3214],[3216,3218],[3240,3242],[3251,3253],[3257,3260],[3268,3270],[3272,3274],[3277,3285],[3286,3294],[3294,3296],[3299,3302],[3311,3313],[3314,3330],[3331,3333],[3340,3342],[3344,3346],[3386,3389],[3396,3398],[3400,3402],[3406,3415],[3415,3424],[3427,3430],[3445,3449],[3455,3458],[3459,3461],[3478,3482],[3505,3507],[3515,3517],[3517,3520],[3526,3530],[3530,3535],[3540,3542],[3542,3544],[3551,3570],[3572,3585],[3642,3647],[3675,3713],[3714,3716],[3716,3719],[3720,3722],[3722,3725],[3725,3732],[3735,3737],[3743,3745],[3747,3749],[3749,3751],[3751,3754],[3755,3757],[3769,3771],[3773,3776],[3780,3782],[3782,3784],[3789,3792],[3801,3804],[3807,3840],[3911,3913],[3948,3953],[3991,3993],[4028,4030],[4044,4046],[4058,4096],[4293,4295],[4295,4301],[4301,4304],[4680,4682],[4685,4688],[4694,4696],[4696,4698],[4701,4704],[4744,4746],[4749,4752],[4784,4786],[4789,4792],[4798,4800],[4800,4802],[4805,4808],[4822,4824],[4880,4882],[4885,4888],[4954,4957],[4988,4992],[5017,5024],[5108,5120],[5788,5792],[5872,5888],[5900,5902],[5908,5920],[5942,5952],[5971,5984],[5996,5998],[6e3,6002],[6003,6016],[6109,6112],[6121,6128],[6137,6144],[6158,6160],[6169,6176],[6263,6272],[6314,7936],[7957,7960],[7965,7968],[8005,8008],[8013,8016],[8023,8025],[8025,8027],[8027,8029],[8029,8031],[8061,8064],[8116,8118],[8132,8134],[8147,8150],[8155,8157],[8175,8178],[8180,8182],[8190,11904],[11929,11931],[12019,12032],[12245,12288],[12351,12353],[12438,12441],[12543,12549],[12589,12593],[12686,12688],[12730,12736],[12771,12784],[12830,12832],[13054,13056],[13312,19893],[19893,19904],[40869,40908],[40908,40960],[42124,42128],[42182,42192],[42539,42560],[42647,42655],[42743,42752],[42894,42896],[42899,42912],[42922,43e3],[43051,43056],[43065,43072],[43127,43136],[43204,43214],[43225,43232],[43259,43264],[43347,43359],[43388,43392],[43469,43471],[43481,43486],[43487,43520],[43574,43584],[43597,43600],[43609,43612],[43643,43648],[43714,43739],[43766,43777],[43782,43785],[43790,43793],[43798,43808],[43814,43816],[43822,43968],[44013,44016],[44025,44032],[55203,55216],[55238,55243],[55291,63744],[64109,64112],[64217,64256],[64262,64275],[64279,64285],[64310,64312],[64316,64318],[64318,64320],[64321,64323],[64324,64326],[64449,64467],[64831,64848],[64911,64914],[64967,65008],[65021,65136],[65140,65142],[65276,66560],[66717,66720],[66729,67584],[67589,67592],[67592,67594],[67637,67639],[67640,67644],[67644,67647],[67669,67671],[67679,67840],[67867,67871],[67897,67903],[67903,67968],[68023,68030],[68031,68096],[68099,68101],[68102,68108],[68115,68117],[68119,68121],[68147,68152],[68154,68159],[68167,68176],[68184,68192],[68223,68352],[68405,68409],[68437,68440],[68466,68472],[68479,68608],[68680,69216],[69246,69632],[69709,69714],[69743,69760],[69825,69840],[69864,69872],[69881,69888],[69940,69942],[69955,70016],[70088,70096],[70105,71296],[71351,71360],[71369,73728],[74606,74752],[74850,74864],[74867,77824],[78894,92160],[92728,93952],[94020,94032],[94078,94095],[94111,110592],[110593,131072],[131072,173782],[173782,173824],[173824,177972],[177972,177984],[177984,178205],[178205,194560]],Pa=["area","base","br","col","embed","hr","img","input","link","meta","param","source","track","wbr"];function Nt(e,y){return y?Array.from(e).map(h=>h.charCodeAt(0)<880||so.some(a=>h.charCodeAt(0)>a[0]&&h.charCodeAt(0)<a[1])?Ia.default.encode(h,{useNamedReferences:!0}):h).join(""):Ia.default.encode(e,{useNamedReferences:!0})}function $r(e){return typeof e=="string"&&e.charCodeAt(0)>=48&&e.charCodeAt(0)<=57||Number.isInteger(e)}function At(e){return typeof e=="string"&&e.length===1&&e.toUpperCase()!==e.toLowerCase()}function Tn(e){return e==='"'||e==="'"||e===ba||e===_t||e===ya||e===Aa}function Ht(e){return At(e)?e===e.toLowerCase()&&e!==e.toUpperCase():!1}function La(e){return At(e)?e===e.toUpperCase()&&e!==e.toLowerCase():!1}function Pn(e){return typeof e=="string"&&e.length&&e.endsWith("/")?e.slice(0,-1).trim():e}function Bn(e,y,h,a,g,pe,U,l,r,o){let c=e.length;if(""+36+39+35+`str[i] at ${a} = ${e[a].trim()?e.slice(a,g):JSON.stringify(e[a],null,0)}`+39+`[${90}m (${e.slice(a,g).split("").map(b=>`#${b.charCodeAt(0)}`).join("; ")}); i = ${a}; y = ${g}[${39}m`+36+39,""+`[${90}m${`state = ${JSON.stringify(l,null,4)}`}[${39}m`,/[\uD800-\uDFFF]/g.test(e[a])&&!(e.charCodeAt(a+1)>=56320&&e.charCodeAt(a+1)<=57343||e.charCodeAt(a-1)>=55296&&e.charCodeAt(a-1)<=56319))h.push(a,a+1),""+`[${32}mPUSH[${39}m`+a+(a+1);else if(g-a>1)r.convertEntities=!0,""+`[${32}mSET[${39}m`+r.convertEntities,r.dontEncodeNonLatin=r.dontEncodeNonLatin||Nt(e.slice(a,g),!0)!==Nt(e.slice(a,g),!1),""+`[${32}mSET[${39}m`+r.dontEncodeNonLatin,y.convertEntities&&h.push(a,g,Nt(e.slice(a,g),y.dontEncodeNonLatin));else{let b=e[a].charCodeAt(0);if(b<127){if(""+`[${90}mcharacter within ASCII[${39}m`,b<32)if(b<9)b===3?(""+`[${32}mPUSH[${39}m`+a+g+(y.removeLineBreaks?" ":"\\n"),h.push(a,g,y.removeLineBreaks?" ":y.replaceLineBreaks?`<br${y.useXHTML?"/":""}>
`:`
`),r.removeLineBreaks=!0,""+`[${32}mSET[${39}m`+r.removeLineBreaks,y.removeLineBreaks||(r.replaceLineBreaks=!0,""+`[${32}mSET[${39}m`+r.replaceLineBreaks,y.replaceLineBreaks&&(r.useXHTML=!0,""+`[${32}mSET[${39}m`+r.useXHTML))):(""+`[${32}mPUSH[${39}m`+a+g,h.push(a,g));else if(b===9)""+`[${32}mPUSH[${39}m`+a+g,h.push(a,g," ");else if(b===10){if(r.removeLineBreaks||(r.removeLineBreaks=!0,""+`[${32}mapplicableOpts.removeLineBreaks[${39}m`+r.removeLineBreaks),!y.removeLineBreaks&&(!U||Array.isArray(U)&&!U.some(n=>(0,pr.left)(e,a)===n))&&(y.replaceLineBreaks?(r.useXHTML=!0,r.replaceLineBreaks=!0,""+`[${32}mapplicableOpts.useXHTML[${39}m`+r.useXHTML+`[${32}mapplicableOpts.replaceLineBreaks[${39}m`+r.replaceLineBreaks):y.replaceLineBreaks||(r.replaceLineBreaks=!0,""+`[${32}mapplicableOpts.replaceLineBreaks[${39}m`+r.replaceLineBreaks)),y.removeLineBreaks||(r.eol=!0,""+`[${32}mapplicableOpts.eol[${39}m`+r.eol),y.removeLineBreaks){let n=" ";Ca.includes(e[(0,pr.right)(e,a)])&&(n=""),""+`[${32}mPUSH[${39}m`+a+g+JSON.stringify(n,null,0),h.push(a,g,n)}else if(y.replaceLineBreaks&&(!U||Array.isArray(U)&&!U.some(n=>(0,pr.left)(e,a)===n))){let n=a;e[a-1]===" "&&typeof(0,pr.leftStopAtNewLines)(e,a)=="number"&&(n=(0,pr.leftStopAtNewLines)(e,a)+1),h.push(n,a+(o==="\r"?1:0),`<br${y.useXHTML?"/":""}>${o===`\r
`?"\r":""}${o==="\r"?"\r":""}`),""+`[${32}mPUSH[${39}m`+n+(a+(o==="\r"?1:0))+`<br${y.useXHTML?"/":""}>${JSON.stringify(o===`\r
`?"\r":"",null,4)}${JSON.stringify(o==="\r"?"\r":"",null,4)}`}else{if(e[(0,pr.leftStopAtNewLines)(e,a)]&&e[(0,pr.leftStopAtNewLines)(e,a)].trim()){let P=(0,pr.leftStopAtNewLines)(e,a);typeof P=="number"&&P<a-1&&(""+`[${32}mPUSH[${39}m`+(P+1)+a,h.push(P+1,a,`${o===`\r
`?"\r":""}`))}o===`\r
`&&e[a-1]!=="\r"?(h.push(a,a,"\r"),""+`[${32}mPUSH[${39}m`+a+a):o==="\r"&&(h.push(a,a+1),""+`[${32}mPUSH[${39}m`+a+(a+1));let n=(0,pr.rightStopAtNewLines)(e,a);n&&e[n].trim()&&n>a+1&&(""+`[${32}mPUSH[${39}m`+(a+1)+n,h.push(a+1,n))}l.onUrlCurrently=!1,""+`[${33}mstate.onUrlCurrently[${39}m`}else if(b===11||b===12)r.removeLineBreaks=!0,""+`[${32}mSET[${39}m`+r.removeLineBreaks,h.push(a,g,y.removeLineBreaks?" ":`
`),""+`[${32}mPUSH[${39}m`+a+g+(y.removeLineBreaks?" ":"\\n");else if(b===13)if(r.removeLineBreaks||(r.removeLineBreaks=!0,""+`[${32}mapplicableOpts.removeLineBreaks[${39}m`+r.removeLineBreaks),!y.removeLineBreaks&&(!U||Array.isArray(U)&&!U.some(n=>(0,pr.left)(e,a)===n))&&(y.replaceLineBreaks&&!y.removeLineBreaks?(r.useXHTML=!0,r.replaceLineBreaks=!0,""+`[${32}mapplicableOpts.useXHTML[${39}m`+r.useXHTML+`[${32}mapplicableOpts.replaceLineBreaks[${39}m`+r.replaceLineBreaks):y.replaceLineBreaks||(r.replaceLineBreaks=!0,""+`[${32}mapplicableOpts.replaceLineBreaks[${39}m`+r.replaceLineBreaks)),y.removeLineBreaks||(r.eol=!0,""+`[${32}mapplicableOpts.eol[${39}m`+r.eol),y.removeLineBreaks){let n=" ";(Ca.includes(e[(0,pr.right)(e,a)])||[`
`,"\r"].includes(e[a+1]))&&(n=""),h.push(a,g,n),""+`[${32}mPUSH[${39}m`+a+g+JSON.stringify(n,null,0)}else if(y.replaceLineBreaks&&(!U||Array.isArray(U)&&!U.some(n=>(0,pr.left)(e,a)===n))){let n=a;e[a-1]===" "&&typeof(0,pr.leftStopAtNewLines)(e,a)=="number"&&(n=(0,pr.leftStopAtNewLines)(e,a)+1);let P=a,u="";e[a+1]!==`
`&&(o===`
`?u=`
`:o===`\r
`&&(h.push(a+1,a+1,`
`),""+`[${32}mPUSH[${39}m`+(a+1)+(a+1))),o===`
`?P=a+1:o==="\r"&&e[a+1]===`
`&&(h.push(a+1,a+2),""+`[${32}mPUSH[${39}m`+(a+1)+(a+2)),h.push(n,P,`<br${y.useXHTML?"/":""}>${u}`),""+`[${32}mPUSH[${39}m`+n+P+JSON.stringify(u,null,4),e[a+1]===`
`&&pe(1)}else{o===`
`?(h.push(a,a+1,e[a+1]===`
`?"":`
`),""+a+(a+1)+JSON.stringify(e[a+1]===`
`?"":`
`,null,0)):o==="\r"&&e[a+1]===`
`?(h.push(a+1,a+2),""+(a+1)+(a+2)):o===`\r
`&&e[a+1]!==`
`&&(h.push(a,a+1,`
`),""+a+(a+1));let n=(0,pr.leftStopAtNewLines)(e,a);if(typeof n=="number"&&e[n].trim()){let u=a;o===`
`&&(u=a+1),n<a-1&&(""+`[${32}mPUSH[${39}m`+(n+1)+u+JSON.stringify(`${e[a+1]===`
`?"":`
`}`,null,4),h.push(n+1,u,`${e[a+1]===`
`?"":`
`}`))}let P=(0,pr.rightStopAtNewLines)(e,a);P&&e[P].trim()&&e[a+1]!==`
`&&P>a+1&&(""+`[${32}mPUSH[${39}m`+(a+1)+P,h.push(a+1,P))}else b>13&&(h.push(a,g),""+`[${32}mPUSH[${39}m`+a+g);else if(b!==32){if(b===34){r.convertEntities=!0,""+`[${32}mSET[${39}m`+r.convertEntities,($r((0,pr.left)(e,a))||$r((0,pr.right)(e,a)))&&(r.convertApostrophes=!0,""+`[${32}mSET[${39}m`+r.convertApostrophes);let n=(0,Tt.convertOne)(e,{from:a,convertEntities:y.convertEntities,convertApostrophes:y.convertApostrophes,offsetBy:pe});""+`[${33}mtempRes[${39}m`+JSON.stringify(n,null,4),n&&n.length?h.push(n):y.convertEntities&&h.push(a,a+1,"&quot;")}else if(b===38)if(At(e[a+1])){let n=Object.keys(Ln.allNamedEntities).find(P=>e.startsWith(P,a+1)&&e[a+P.length+1]===";");if(""+`[${33}mtemp[${39}m`+JSON.stringify(n,null,4),r.convertEntities=!0,""+`[${32}mSET[${39}m`+r.convertEntities,n)if(""+`[${32}m${n}[${39}m`,n==="apos"){r.convertApostrophes=!0,""+`[${32}mSET[${39}m`+r.convertApostrophes;let P=(0,Tt.convertOne)(e,{from:a,to:a+n.length+2,value:"'",convertEntities:y.convertEntities,convertApostrophes:y.convertApostrophes,offsetBy:pe});Array.isArray(P)&&P.length?(h.push(P),""+`[${32}mPUSH[${39}m`+JSON.stringify(P,null,0),""+(n.length+2),pe(n.length+2)):(h.push([a,a+n.length+2,"'"]),""+`[${32}mPUSH[${39}m`+JSON.stringify([a,a+n.length+2,"'"],null,0),""+(n.length+2),pe(n.length+2))}else y.convertEntities&&Object.keys(Vt.notEmailFriendly).includes(e.slice(a+1,a+n.length+1))?(h.push(a,a+n.length+2,`&${Vt.notEmailFriendly[e.slice(a+1,a+n.length+1)]};`),""+`[${32}mPUSH[${39}m`+a+(a+n.length+2)+JSON.stringify(Vt.notEmailFriendly[e.slice(a+1,a+n.length+1)],null,4),pe(n.length+1),""+(n.length+1)):y.convertEntities?(pe(n.length+1),""+(n.length+1)):(""+JSON.stringify(e.slice(a,a+n.length+2),null,4)+zt.default.decode(`${e.slice(a,a+n.length+2)}`).charCodeAt(0),""+`[${32}mPUSH[${39}m`+a+(a+n.length+2)+JSON.stringify(zt.default.decode(`${e.slice(a,a+n.length+2)}`),null,4),h.push(a,a+n.length+2,zt.default.decode(`${e.slice(a,a+n.length+2)}`)),pe(n.length+1),""+(n.length+1));else y.convertEntities&&(h.push(a,a+1,"&amp;"),""+`[${32}mPUSH[${39}m`+a+(a+1))}else if(e[(0,pr.right)(e,a)]==="#"){for(let n=(0,pr.right)(e,a);n<c;n++)if(e[n].trim()&&!$r(e[n])&&e[n]!=="#"&&e[n]===";"){""+e.slice(a,n+1);let P=zt.default.encode(zt.default.decode(e.slice(a,n+1)),{useNamedReferences:!0});""+`[${33}mtempRes[${39}m`+JSON.stringify(P,null,4),P&&(h.push(a,n+1,P),""+`[${32}mPUSH[${39}m`+a+(n+1)+P),pe(n+1-a),""+(n+1-a)}}else r.convertEntities=!0,""+`[${32}mSET[${39}m`+r.convertEntities,y.convertEntities&&(h.push(a,a+1,"&amp;"),""+`[${32}mPUSH[${39}m`+a+(a+1));else if(b===39){let n=(0,Tt.convertOne)(e,{from:a,convertEntities:!0,convertApostrophes:!0});n&&n.length&&(r.convertApostrophes=!0,""+`[${32}mSET[${39}m`+r.convertApostrophes,y.convertApostrophes&&(r.convertEntities=!0,""+`[${32}mSET[${39}m`+r.convertEntities),h.push((0,Tt.convertOne)(e,{from:a,convertEntities:y.convertEntities,convertApostrophes:y.convertApostrophes,offsetBy:pe})))}else if(b===44||b===59){if(e[a-1]&&!e[a-1].trim()){let n=(0,pr.left)(e,a);typeof n=="number"&&n<a-1&&(h.push(n+1,a),""+`[${32}mPUSH[${39}m`+(n+1)+a)}b===44&&e[g]!==void 0&&!l.onUrlCurrently&&!$r(e[g])&&e[g].trim()&&e[g]!==" "&&e[g]!==`
`&&e[g]!=='"'&&e[g]!=="'"&&e[g]!==ba&&e[g]!==ya&&e[g]!==_t&&e[g]!==Aa&&(r.addMissingSpaces=!0,""+`[${32}mSET[${39}m`+r.addMissingSpaces,y.addMissingSpaces&&(h.push(g,g," "),""+`[${32}mPUSH[${39}m`+g+g)),b===59&&e[g]!==void 0&&!l.onUrlCurrently&&e[g].trim()&&e[g]!=="&"&&e[g]!=='"'&&e[g]!=="'"&&e[g]!==ba&&e[g]!==ya&&e[g]!==_t&&e[g]!==Aa&&(r.addMissingSpaces=!0,""+`[${32}mSET[${39}m`+r.addMissingSpaces,y.addMissingSpaces&&(h.push(g,g," "),""+`[${32}mPUSH[${39}m`+g+g))}else if(b===45)e[a-1]===" "&&e[g]===" "&&$r(e[(0,pr.left)(e,a)])&&$r(e[(0,pr.right)(e,g)])||((e[a-1]===lt||e[a-1]===" ")&&e[g]!=="$"&&e[g]!=="\xA3"&&e[g]!=="\u20AC"&&e[g]!=="\u20BD"&&e[g]!=="0"&&e[g]!=="1"&&e[g]!=="2"&&e[g]!=="3"&&e[g]!=="4"&&e[g]!=="5"&&e[g]!=="6"&&e[g]!=="7"&&e[g]!=="8"&&e[g]!=="9"&&e[g]!=="-"&&e[g]!==">"&&e[g]!==" "?(r.addMissingSpaces=!0,""+`[${32}mSET[${39}m`+r.addMissingSpaces,y.addMissingSpaces&&(h.push(g,g," "),""+`[${32}mPUSH[${39}m`+g+g)):e[a-1]&&e[g]&&($r(e[a-1])&&$r(e[g])||e[a-1].toLowerCase()==="a"&&e[g].toLowerCase()==="z")?(r.convertDashes=!0,""+`[${32}mSET[${39}m`+r.convertDashes,y.convertDashes&&(r.convertEntities=!0,""+`[${32}mSET[${39}m`+r.convertEntities,""+`[${32}mPUSH[${39}m`+a+g+(y.convertEntities?"&ndash;":"\u2013"),h.push(a,g,y.convertEntities?"&ndash;":"\u2013"))):e[a-1]&&e[g]&&(!e[a-1].trim()&&!e[g].trim()||Ht(e[a-1])&&e[g]==="'")?(r.convertDashes=!0,""+`[${32}mSET[${39}m`+r.convertDashes,y.convertDashes&&(r.convertEntities=!0,""+`[${32}mSET[${39}m`+r.convertEntities,""+`[${32}mPUSH[${39}m`+a+g+(y.convertEntities?"&mdash;":xt),h.push(a,g,y.convertEntities?"&mdash;":xt))):e[a-1]&&e[g]&&At(e[a-1])&&Tn(e[g])&&(r.convertDashes=!0,""+`[${32}mSET[${39}m`+r.convertDashes,y.convertDashes&&(r.convertEntities=!0,""+`[${32}mSET[${39}m`+r.convertEntities,""+`[${32}mPUSH[${39}m`+a+g+(y.convertEntities?"&mdash;":xt),h.push(a,g,y.convertEntities?"&mdash;":xt)))),e[a-2]&&e[a-2].trim()&&!e[a-1].trim()&&![`
`,"\r"].includes(e[a-1])&&(r.removeWidows=!0,""+`[${32}mSET[${39}m`+`[${33}mapplicableOpts.removeWidows[${39}m`+r.removeWidows,y.removeWidows&&(r.convertEntities=!0,""+`[${32}mSET[${39}m`+`[${33}mapplicableOpts.convertEntities[${39}m`+r.convertEntities,h.push(a-1,a,y.convertEntities?"&nbsp;":lt),""+`[${32}mPUSH[${39}m`+(a-1)+a+(y.convertEntities?"&nbsp;":lt)));else if(b===46){e[a-1]!=="."&&e[g]==="."&&e[g+1]==="."&&e[g+2]!=="."&&(r.convertDotsToEllipsis=!0,""+`[${32}mSET[${39}m`+r.convertDotsToEllipsis,y.convertDotsToEllipsis&&(r.convertEntities=!0,""+`[${32}mSET[${39}m`+r.convertEntities,""+`[${32}mPUSH[${39}m`+a+(g+2)+(y.convertEntities?"&hellip;":`${Ta}`),h.push(a,g+2,y.convertEntities?"&hellip;":`${Ta}`)));let n=e[g]?e[g].toLowerCase():"",P=e[g+1]?e[g+1].toLowerCase():"",u=e[g+2]?e[g+2].toLowerCase():"",i=e[g+3]?e[g+3].toLowerCase():"",t=n+P+u;if(n+P!=="js"&&t!=="jpg"&&t!=="png"&&t!=="gif"&&t!=="svg"&&t!=="htm"&&t!=="pdf"&&t!=="psd"&&t!=="tar"&&t!=="zip"&&t!=="rar"&&t!=="otf"&&t!=="ttf"&&t!=="eot"&&t!=="php"&&t!=="rss"&&t!=="asp"&&t!=="ppt"&&t!=="doc"&&t!=="txt"&&t!=="rtf"&&t!=="git"&&t+i!=="jpeg"&&t+i!=="html"&&t+i!=="woff"&&!(!At(e[a-2])&&e[a-1]==="p"&&e[g]==="s"&&e[g+1]==="t"&&!At(e[g+2]))&&(e[g]!==void 0&&(!l.onUrlCurrently&&La(e[g])||l.onUrlCurrently&&At(e[g])&&La(e[g])&&At(e[g+1])&&Ht(e[g+1]))&&e[g]!==" "&&e[g]!=="."&&e[g]!==`
`&&(r.addMissingSpaces=!0,""+`[${32}mSET[${39}m`+r.addMissingSpaces,y.addMissingSpaces&&(h.push(g,g," "),""+`[${32}mPUSH[${39}m`+g+g)),e[a-1]!==void 0&&e[a-1].trim()===""&&e[g]!=="."&&(e[a-2]===void 0||e[a-2]!=="."))){for(g=a-1;g--;)if(e[g].trim()!==""){h.push(g+1,a),""+`[${32}mPUSH[${39}m`+(g+1)+a;break}}}else if(b!==47){if(b===58)e[g-1]&&e[(0,pr.right)(e,g-1)]==="/"&&e[(0,pr.right)(e,(0,pr.right)(e,g-1))]==="/"&&(l.onUrlCurrently=!0,""+`[${32}mSET[${39}m`+`[${33}mstate.onUrlCurrently[${39}m`);else if(b===60)r.convertEntities=!0,""+`[${32}mSET[${39}m`+r.convertEntities,y.convertEntities&&(h.push(a,a+1,"&lt;"),""+`[${32}mPUSH[${39}m`+a+(a+1));else if(b===62)r.convertEntities=!0,""+`[${32}mSET[${39}m`+r.convertEntities,y.convertEntities&&(h.push(a,a+1,"&gt;"),""+`[${32}mPUSH[${39}m`+a+(a+1));else if(b===119)e[g+1]&&e[g].toLowerCase()==="w"&&e[g+1].toLowerCase()==="w"&&(l.onUrlCurrently=!0,""+`[${33}mstate.onUrlCurrently[${39}m`);else if(b===123){let n;if(e[g]==="{"?n="}}":e[g]==="%"&&(n="%}"),n){""+n;for(let P=a;P<c;P++)if(""+e[P],e[P]===n[0]&&e[P+1]===n[1]){""+(P+1-a),pe(P+1-a);break}}}}}}else if(""+`[${90}mcharacter outside ASCII[${39}m`+b,b>126&&b<160)b!==133?(h.push(a,g),""+`[${32}mPUSH[${39}m`+a+g):(r.removeLineBreaks=!0,""+`[${32}mSET[${39}m`+r.removeLineBreaks,h.push(a,g,y.removeLineBreaks?"":`
`),""+`[${32}mPUSH[${39}m`+a+g+(y.removeLineBreaks?"":"\\n"));else if(b===160)if(y.removeWidows)r.convertEntities=!0,""+`[${32}mSET[${39}m`+r.convertEntities,r.removeWidows=!0,""+`[${32}mSET[${39}m`+r.removeWidows,y.convertEntities&&(""+`[${32}mPUSH[${39}m`+a+g,h.push(a,g,"&nbsp;"));else{let n=a,P=g,u=" ",i=(0,pr.left)(e,a);""+`[${32}mSET[${39}m`+`[${33}mcharOnTheLeft[${39}m`+JSON.stringify(i,null,4);let t=(0,pr.right)(e,P-1);""+`[${32}mSET[${39}m`+`[${33}mcharOnTheRight[${39}m`+JSON.stringify(t,null,4),i===null||t===null?(u=y.convertEntities?"&nbsp;":lt,""+`[${32}mSET[${39}m`+`[${33}mcalculatedValue[${39}m`+JSON.stringify(u,null,4),r.convertEntities=!0,""+`[${32}mSET[${39}m`+r.convertEntities):(r.removeWidows=!0,""+`[${32}mSET[${39}m`+r.removeWidows),u?(h.push(n,P,u),""+`[${32}mPUSH[${39}m`+n+P+JSON.stringify(u,null,4)+u.charCodeAt(0)):(h.push(n,P),""+`[${32}mPUSH[${39}m`+n+P)}else if(b===173)h.push(a,g),""+`[${32}mPUSH[${39}m`+a+g;else if(b===8232||b===8233)r.removeLineBreaks=!0,""+`[${32}mSET[${39}m`+r.removeLineBreaks,h.push(a,g,y.removeLineBreaks?"":`
`),""+`[${32}mPUSH[${39}m`+a+g+(y.removeLineBreaks?"":"\\n");else if([5760,8191,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288].includes(b))if(!e[g])h.push(a,g),""+`[${32}mPUSH[${39}m`+a+g;else{let n=(0,$n.expander)({str:e,from:a,to:g,wipeAllWhitespaceOnLeft:!0,wipeAllWhitespaceOnRight:!0,addSingleSpaceToPreventAccidentalConcatenation:!0});""+JSON.stringify(n,null,0),h.push(...n)}else if(b===8206)h.push(a,g),""+`[${32}mPUSH[${39}m`+a+g;else if(b===8207)h.push(a,g),""+`[${32}mPUSH[${39}m`+a+g;else if(b===8211||b===65533&&$r(e[a-1])&&$r(e[g])){if(r.convertDashes=!0,""+`[${32}mSET[${39}m`+r.convertDashes,y.convertDashes?(r.convertEntities=!0,""+`[${32}mSET[${39}m`+r.convertEntities,y.convertEntities?e[a-1]&&!e[a-1].trim()&&e[a+1]&&!e[a+1].trim()&&!($r(e[a-2])&&$r(e[a+2]))?(h.push(a,g,"&mdash;"),""+`[${32}mPUSH[${39}m`+a+g):(h.push(a,g,"&ndash;"),""+`[${32}mPUSH[${39}m`+a+g):b===65533&&(e[a-1]&&!e[a-1].trim()&&e[a+1]&&!e[a+1].trim()?(h.push(a,g,xt),""+`[${32}mPUSH[${39}m`+a+g):(h.push(a,g,kn),""+`[${32}mPUSH[${39}m`+a+g))):(h.push(a,g,"-"),""+`[${32}mPUSH[${39}m`+a+g),e[a-1]&&!e[a-1].trim()&&e[g].trim())if(e[a-2]&&$r(e[a-2])&&$r(e[g]))h.push(a-1,a),""+`[${32}mPUSH[${39}m`+(a-1)+a;else{if(r.addMissingSpaces=!0,""+`[${32}mSET[${39}m`+r.addMissingSpaces,r.convertEntities=!0,""+`[${32}mSET[${39}m`+r.convertEntities,y.addMissingSpaces){let n=" ";Cn.test(e.slice(g))||(r.removeWidows=!0,""+`[${32}mSET[${39}m`+r.removeWidows,y.removeWidows&&(n=y.convertEntities?"&nbsp;":lt,""+`[${32}mSET[${39}m`+(y.convertEntities?n:"rawNbsp"))),h.push(g,g,n),""+`[${32}mPUSH[${39}m`+g+g+JSON.stringify(n,null,0)}e.slice(a-1,a)!==lt&&(r.removeWidows=!0,""+`[${32}mSET[${39}m`+r.removeWidows,y.removeWidows&&(h.push(a-1,a,y.convertEntities?"&nbsp;":lt),""+`[${32}mPUSH[${39}m`+(a-1)+a+JSON.stringify(y.convertEntities?"&nbsp;":lt,null,0)))}else e[a-2]&&e[a-1]&&e[g]&&e[g+1]&&$r(e[a-2])&&$r(e[g+1])&&!e[a-1].trim()&&!e[g].trim()&&(h.push(a-1,a),h.push(g,g+1),""+`[${32}mPUSH[${39}m`+(a-1)+a+g+(g+1));e[a-2]&&e[a+1]&&!e[a-1].trim()&&e[a-2].trim()&&!e[a+1].trim()&&!($r(e[a-2])&&$r(e[a+2]))&&(r.removeWidows=!0,y.removeWidows&&(h.push(a-1,a,y.convertEntities?"&nbsp;":lt),""+`[${32}mPUSH[${39}m`+(a-1)+a+JSON.stringify(y.convertEntities?"&nbsp;":lt,null,4)))}else if(b===8212||b===65533&&e[a-1]===" "&&e[g]===" ")r.convertDashes=!0,""+`[${32}mSET[${39}m`+r.convertDashes,e[a-1]===" "&&(0,pr.left)(e,a)!==null&&(r.removeWidows=!0,""+`[${32}mSET[${39}m`+r.removeWidows,y.removeWidows&&(r.convertEntities=!0,""+`[${32}mSET[${39}m`+r.convertEntities,typeof(0,pr.left)(e,a)=="number"&&(h.push((0,pr.left)(e,a)+1,a,y.convertEntities?"&nbsp;":lt),""+`[${32}mPUSH[${39}m`+((0,pr.left)(e,a)+1)+a+JSON.stringify(y.convertEntities?"&nbsp;":lt,null,4)+lt.charCodeAt(0)))),y.convertDashes?(r.convertEntities=!0,""+`[${32}mSET[${39}m`+r.convertEntities,e[a-1]&&!e[a-1].trim()&&e[g].trim()&&(r.addMissingSpaces=!0,""+`[${32}mSET[${39}m`+r.addMissingSpaces,y.addMissingSpaces&&(h.push(g,g," "),""+`[${32}mPUSH[${39}m`+g+g)),y.convertEntities?(h.push(a,g,"&mdash;"),""+`[${32}mPUSH[${39}m`+a+g):b===65533&&(h.push(a,g,xt),""+`[${32}mPUSH[${39}m`+a+g),""+`[${33}mrangesArr.current()[${39}m`+JSON.stringify(h.current(),null,4)):(h.push(a,g,"-"),""+`[${32}mPUSH[${39}m`+a+g);else if(b===8216){let n=(0,Tt.convertOne)(e,{from:a,to:g,convertEntities:!0,convertApostrophes:!0});n&&n.length&&(r.convertApostrophes=!0,""+`[${32}mSET[${39}m`+r.convertApostrophes,(0,Tt.convertOne)(e,{from:a,to:g,convertEntities:!0,convertApostrophes:!0})&&(y.convertApostrophes&&(r.convertEntities=!0,""+`[${32}mSET[${39}m`+r.convertEntities),h.push((0,Tt.convertOne)(e,{from:a,to:g,convertEntities:y.convertEntities,convertApostrophes:y.convertApostrophes,offsetBy:pe}))))}else if(b===8217)r.convertApostrophes=!0,""+`[${32}mSET[${39}m`+r.convertApostrophes,y.convertApostrophes?(r.convertEntities=!0,""+`[${32}mSET[${39}m`+r.convertEntities,y.convertEntities&&(h.push(a,g,"&rsquo;"),""+`[${32}mPUSH[${39}m`+a+g)):(h.push(a,g,"'"),""+`[${32}mPUSH[${39}m`+a+g);else if(b===8220)r.convertApostrophes=!0,""+`[${32}mSET[${39}m`+r.convertApostrophes,y.convertApostrophes?y.convertEntities&&(r.convertEntities=!0,""+`[${32}mSET[${39}m`+r.convertEntities,h.push(a,g,"&ldquo;"),""+`[${32}mPUSH[${39}m`+a+g):(r.convertEntities=!0,""+`[${32}mSET[${39}m`+r.convertEntities,h.push(a,g,y.convertEntities?"&quot;":'"'),""+`[${32}mPUSH[${39}m`+a+g+JSON.stringify(y.convertEntities?"&quot;":'"',null,0));else if(b===8221)r.convertApostrophes=!0,""+`[${32}mSET[${39}m`+r.convertApostrophes,y.convertApostrophes?y.convertEntities&&(r.convertEntities=!0,""+`[${32}mSET[${39}m`+r.convertEntities,h.push(a,g,"&rdquo;"),""+`[${32}mPUSH[${39}m`+a+g):(r.convertEntities=!0,""+`[${32}mSET[${39}m`+r.convertEntities,h.push(a,g,y.convertEntities?"&quot;":'"'),""+`[${32}mPUSH[${39}m`+a+g+JSON.stringify(y.convertEntities?"&quot;":'"',null,0));else if(b===8230)r.convertDotsToEllipsis=!0,""+`[${32}mSET[${39}m`+r.convertDotsToEllipsis,y.convertDotsToEllipsis?(r.convertEntities=!0,""+`[${32}mSET[${39}m`+r.convertEntities,y.convertEntities&&(h.push(a,g,"&hellip;"),""+`[${32}mPUSH[${39}m`+a+g)):(h.push(a,g,"..."),""+`[${32}mPUSH[${39}m`+a+g);else if(b===65279)h.push(a,g),""+`[${32}mPUSH[${39}m`+a+g;else{""+`[${90}melse clause leading to encode[${39}m`,!r.dontEncodeNonLatin&&Nt(e[a],!0)!==Nt(e[a],!1)&&(r.dontEncodeNonLatin=!0,""+`[${32}mSET[${39}m`+r.dontEncodeNonLatin);let n=Nt(e[a],y.dontEncodeNonLatin);""+`[${33}mconvertedCharVal[${39}m`+JSON.stringify(n,null,4),Object.keys(Vt.notEmailFriendly).includes(n.slice(1,n.length-1))&&(n=`&${Vt.notEmailFriendly[n.slice(1,n.length-1)]};`),""+`[${33}mconvertedCharVal[${39}m`+JSON.stringify(n,null,4),e[a]!==n&&(r.convertEntities=!0,""+`[${32}mSET[${39}m`+r.convertEntities,y.convertEntities&&(n==="&mldr;"?(""+`[${32}mPUSH[${39}m`+a+g,h.push(a,g,"&hellip;")):n!=="&apos;"&&(""+`[${32}mPUSH[${39}m`+a+g+n,h.push(a,g,n)),r.convertEntities=!0,""+`[${32}mSET[${39}m`+r.convertEntities))}l.onUrlCurrently&&!e[a].trim()&&(""+`[${33}mstate.onUrlCurrently[${39}m`,l.onUrlCurrently=!1)}""+`[${32}mfinally[${39}m`+JSON.stringify(h.current(),null,4)}var lo=An;function uo(e,y){if(typeof e!="string")throw new Error(`detergent(): [THROW_ID_01] the first input argument must be of a string type, not ${typeof e}`);if(y&&typeof y!="object")throw new Error(`detergent(): [THROW_ID_02] Options object must be a plain object, not ${typeof y}`);if(y&&y.cb&&typeof y.cb!="function")throw new Error(`detergent(): [THROW_ID_03] Options callback, opts.cb must be a function, not ${typeof y.cb} (value was given as:
${JSON.stringify(y.cb,null,0)})`);let h=ye(ye({},ka),y);["lf","crlf","cr"].includes(h.eol)||(h.eol="lf");let a={fixBrokenEntities:!1,removeWidows:!1,convertEntities:!1,convertDashes:!1,convertApostrophes:!1,replaceLineBreaks:!1,removeLineBreaks:!1,useXHTML:!1,dontEncodeNonLatin:!1,addMissingSpaces:!1,convertDotsToEllipsis:!1,stripHtml:!1,eol:!1},g=`
`;h.eol==="crlf"?g=`\r
`:h.eol==="cr"&&(g="\r");let pe=[],U=new Na.Ranges({limitToBeAddedWhitespace:!1}),l=new Na.Ranges;function r(){e=(0,Rt.rApply)(e,U.current()),U.wipe()}function o(i){return Number.isInteger(i)}let c={onUrlCurrently:!1};""+`[${32}mFINAL[${39}m`+`[${33}mopts[${39}m`+JSON.stringify(h,null,4),""+`[${90}m================= NEXT STEP. Initial =================[${39}m`,e=(0,On.trimSpaces)(e.replace((0,Un.default)(),"").replace(/\u200A/g," "),{cr:!0,lf:!0,tab:!0,space:!0,nbsp:!1}).res,""+JSON.stringify(e,null,0);let b=e,n;do n=b,b=_n.default.decode(b);while(b!==e&&n!==b);e!==b&&(e=b),""+JSON.stringify(e,null,0),e=(0,$a.collapse)(e,{trimLines:!0,removeEmptyLines:!0,limitConsecutiveEmptyLinesTo:1}).result,""+JSON.stringify(e,null,0);for(let i=0,t=e.length;i<t;i++)if(e[i].charCodeAt(0)===65533)if(e[i-1]&&e[i+1]&&(e[i-1].toLowerCase()==="n"&&e[i+1].toLowerCase()==="t"||At(e[i-1])&&e[i+1].toLowerCase()==="s")||e[i+2]&&((e[i+1].toLowerCase()==="r"||e[i+1].toLowerCase()==="v")&&e[i+2].toLowerCase()==="e"||e[i+1].toLowerCase()==="l"&&e[i+2].toLowerCase()==="l")&&(e[i-3]&&e[i-3].toLowerCase()==="y"&&e[i-2].toLowerCase()==="o"&&e[i-1].toLowerCase()==="u"||e[i-2]&&e[i-2].toLowerCase()==="w"&&e[i-1].toLowerCase()==="e"||e[i-4]&&e[i-4].toLowerCase()==="t"&&e[i-3].toLowerCase()==="h"&&e[i-2].toLowerCase()==="e"&&e[i-1].toLowerCase()==="y")||(e[i-1]&&e[i-1].toLowerCase()==="i"||e[i-2]&&e[i-2].toLowerCase()==="h"&&e[i-1].toLowerCase()==="e"||e[i-3]&&e[i-3].toLowerCase()==="s"&&e[i-2].toLowerCase()==="h"&&e[i-1].toLowerCase()==="e")&&e[i+2]&&e[i+1].toLowerCase()==="l"&&e[i+2].toLowerCase()==="l"||e[i-5]&&e[i+2]&&e[i-5].toLowerCase()==="m"&&e[i-4].toLowerCase()==="i"&&e[i-3].toLowerCase()==="g"&&e[i-2].toLowerCase()==="h"&&e[i-1].toLowerCase()==="t"&&e[i+1]==="v"&&e[i+2]==="e"||e[i-1]&&e[i-1].toLowerCase()==="s"&&(!e[i+1]||!At(e[i+1])&&!$r(e[i+1]))){let O=h.convertApostrophes?_t:"'";U.push(i,i+1,`${O}`),""+i+(i+1)+O,a.convertApostrophes=!0}else e[i-2]&&Ht(e[i-2])&&!e[i-1].trim()&&e[i+2]&&Ht(e[i+2])&&!e[i+1].trim()?(U.push(i,i+1,xt),""+i+(i+1)+xt):(U.push(i,i+1),""+i+(i+1));r(),""+`[${90}m================= NEXT STEP. fix broken HTML entity references =================[${39}m`;let P=(0,Nn.fixEnt)(e,{decode:!1});if(P&&P.length&&(a.fixBrokenEntities=!0,h.fixBrokenEntities&&(e=(0,Rt.rApply)(e,P),""+JSON.stringify(e,null,0))),typeof h.cb=="function")if(e.includes("<")||e.includes(">")){""+`[${90}m================= NEXT STEP. HTML tags, pt.1 =================[${39}m`;let i=(0,Ba.stripHtml)(e,{cb:({tag:O,rangesArr:v})=>(""+`[${33}mtag[${39}m`+JSON.stringify(O,null,4),v.push(O.lastOpeningBracketAt,O.lastClosingBracketAt+1)),skipHtmlDecoding:!0}).ranges,t=((0,jn.rInvert)(i,e.length)||[]).reduce((O,v)=>typeof h.cb=="function"&&e.slice(v[0],v[1])!==h.cb(e.slice(v[0],v[1]))?O.concat([[v[0],v[1],h.cb(e.slice(v[0],v[1]))]]):O,[]);""+`[${33}moutsideTagRanges[${39}m`+JSON.stringify(t,null,4),Array.isArray(t)&&t.length&&(""+e,e=(0,Rt.rApply)(e,t),""+e)}else""+e,e=h.cb(e),""+e;if(e.includes("<")||e.includes(">")){""+`[${90}m================= NEXT STEP. HTML tags, pt.2 =================[${39}m`;let i=({tag:t,deleteFrom:O,deleteTo:v,proposedReturn:M})=>{if(""+`[${33}mtag[${39}m`+JSON.stringify(t,null,4),o(t.lastOpeningBracketAt)&&o(t.lastClosingBracketAt)&&t.lastOpeningBracketAt<t.lastClosingBracketAt||t.slashPresent){if(a.stripHtml=!0,""+`[${32}mSET[${39}m`+a.stripHtml,l.push(t.lastOpeningBracketAt,t.lastClosingBracketAt?t.lastClosingBracketAt+1:e.length),""+`[${32}mPUSH[${39}m`+t.lastOpeningBracketAt+(t.lastClosingBracketAt?t.lastClosingBracketAt+1:e.length),h.stripHtml&&!h.stripHtmlButIgnoreTags.includes(t.name.toLowerCase()))Array.isArray(h.stripHtmlAddNewLine)&&h.stripHtmlAddNewLine.length&&h.stripHtmlAddNewLine.some(q=>q.startsWith("/")&&t.slashPresent&&t.slashPresent<t.nameEnds&&t.name.toLowerCase()===q.slice(1)||!q.startsWith("/")&&!(t.slashPresent&&t.slashPresent<t.nameEnds)&&t.name.toLowerCase()===Pn(q))?(a.removeLineBreaks=!0,""+`[${32}mSET[${39}m`+`[${33}mapplicableOpts.removeLineBreaks[${39}m`+a.removeLineBreaks,!h.removeLineBreaks&&typeof O=="number"&&typeof v=="number"?(a.replaceLineBreaks=!0,""+`[${32}mSET[${39}m`+`[${33}mapplicableOpts.replaceLineBreaks[${39}m`+a.replaceLineBreaks,h.replaceLineBreaks&&(a.useXHTML=!0,""+`[${32}mSET[${39}m`+`[${33}mapplicableOpts.useXHTML[${39}m`+a.useXHTML),U.push(O,v,`${h.replaceLineBreaks?`<br${h.useXHTML?"/":""}>`:""}
`),""+`[${32}mPUSH[${39}m`+JSON.stringify([O,v,`${h.replaceLineBreaks?`<br${h.useXHTML?"/":""}>`:""}
`],null,0),""+JSON.stringify(U.current(),null,4)):(U.push(M),""+`[${32}mPUSH[${39}m`+JSON.stringify(M,null,4))):(U.push(M),l.push(M),""+`[${32}mPUSH[${39}m`+`[${33}mfinalIndexesToDelete[${39}m`+`[${33}mskipArr[${39}m`+JSON.stringify(M,null,4));else{if(Pa.includes(t.name.toLowerCase())){if(a.useXHTML=!0,""+`[${32}mSET[${39}m`+a.useXHTML,e[(0,Er.left)(e,t.lastClosingBracketAt)]!=="/"&&t.lastClosingBracketAt&&h.useXHTML&&(""+`[${32}mPUSH[${39}m`+t.lastClosingBracketAt+t.lastClosingBracketAt,U.push(t.lastClosingBracketAt,t.lastClosingBracketAt,"/")),t.slashPresent&&o(t.lastOpeningBracketAt)&&t.nameStarts&&t.lastOpeningBracketAt<t.nameStarts-1&&e.slice(t.lastOpeningBracketAt+1,t.nameStarts).split("").every(q=>!q.trim()||q==="/")&&(""+`[${32}mPUSH[${39}m`+(t.lastOpeningBracketAt+1)+t.nameStarts,U.push(t.lastOpeningBracketAt+1,t.nameStarts)),""+JSON.stringify(U.current(),null,4),t.slashPresent&&e[(0,Er.left)(e,t.lastClosingBracketAt)]==="/"){if(e[(0,Er.left)(e,(0,Er.left)(e,t.lastClosingBracketAt))]==="/")a.useXHTML=!0,""+`[${32}mSET[${39}m`+a.useXHTML,(!h.useXHTML||typeof(0,Er.chompLeft)(e,t.lastClosingBracketAt,{mode:2},"/")=="number"&&e.slice((0,Er.chompLeft)(e,t.lastClosingBracketAt,{mode:2},"/"),t.lastClosingBracketAt)!=="/")&&(U.push((0,Er.chompLeft)(e,t.lastClosingBracketAt,{mode:2},"/"),t.lastClosingBracketAt,h.useXHTML?"/":void 0),""+`[${32}mPUSH[${39}m`+(0,Er.chompLeft)(e,t.lastClosingBracketAt,{mode:2},"/")+t.lastClosingBracketAt+(h.useXHTML?"/":void 0));else if(!h.useXHTML||typeof(0,Er.left)(e,t.slashPresent)!="number"||e.slice((0,Er.left)(e,t.slashPresent)+1,t.lastClosingBracketAt)!=="/"){let q=(0,Er.left)(e,t.slashPresent)+1,Q=t.lastClosingBracketAt,Z=h.useXHTML?"/":null;Z?(""+`[${32}mPUSH[${39}m`+q+Q+Z,U.push(q,Q,Z)):(""+`[${32}mPUSH[${39}m`+q+Q,U.push(q,Q))}}}else t.slashPresent&&e[(0,Er.left)(e,t.lastClosingBracketAt)]==="/"&&(U.push((0,Er.chompLeft)(e,t.lastClosingBracketAt,{mode:2},"/"),t.lastClosingBracketAt),U.push(t.lastOpeningBracketAt+1,t.lastOpeningBracketAt+1,"/"));""+JSON.stringify(U.current(),null,4),t.name.toLowerCase()!==t.name&&(""+`[${32}mPUSH[${39}m`+t.nameStarts+t.nameEnds+t.name.toLowerCase(),U.push(t.nameStarts,t.nameEnds,t.name.toLowerCase())),"/>".includes(e[(0,Er.right)(e,t.nameEnds-1)])&&((0,Er.right)(e,t.nameEnds-1)||0)>t.nameEnds&&(""+`[${32}mPUSH[${39}m`+t.nameEnds+(0,Er.right)(e,t.nameEnds-1),U.push(t.nameEnds,(0,Er.right)(e,t.nameEnds-1))),o(t.lastOpeningBracketAt)&&o(t.nameStarts)&&t.lastOpeningBracketAt+1<t.nameStarts&&(e.slice(t.lastOpeningBracketAt+1,t.nameStarts).trim().length?!Pa.includes(t.name.toLowerCase())&&e.slice(t.lastOpeningBracketAt+1,t.nameStarts).split("").every(q=>!q.trim()||q==="/")&&(U.push(t.lastOpeningBracketAt+1,t.nameStarts,"/"),""+`[${32}mPUSH[${39}m`+(t.lastOpeningBracketAt+1)+t.nameStarts):(""+`[${32}mPUSH[${39}m`+(t.lastOpeningBracketAt+1)+t.nameStarts,U.push(t.lastOpeningBracketAt+1,t.nameStarts)))}t.name.toLowerCase()==="br"&&t.lastClosingBracketAt&&(pe.push(t.lastClosingBracketAt),""+JSON.stringify(pe,null,0)),["ul","li"].includes(t.name.toLowerCase())&&!h.removeLineBreaks&&e[t.lastOpeningBracketAt-1]&&!e[t.lastOpeningBracketAt-1].trim()&&typeof t.lastOpeningBracketAt=="number"&&typeof(0,Er.leftStopAtNewLines)(e,t.lastOpeningBracketAt)=="number"&&(U.push((0,Er.leftStopAtNewLines)(e,t.lastOpeningBracketAt)+1,t.lastOpeningBracketAt),""+`[${32}mPUSH[${39}m`+((0,Er.leftStopAtNewLines)(e,t.lastOpeningBracketAt)+1)+t.lastOpeningBracketAt),e[t.lastClosingBracketAt-1]&&!e[t.lastClosingBracketAt-1].trim()&&typeof t.lastClosingBracketAt=="number"&&typeof(0,Er.left)(e,t.lastClosingBracketAt)=="number"&&(U.push((0,Er.left)(e,t.lastClosingBracketAt)+1,t.lastClosingBracketAt),""+`[${32}mPUSH[${39}m`+((0,Er.left)(e,t.lastClosingBracketAt)+1)+t.lastClosingBracketAt)}""+`[${90}m========================================
ENDING finalIndexesToDelete[]:
[${39}m`,""+`[${90}m${JSON.stringify(U.current(),null,4)}[${39}m`};""+`[${90}m========================================[${39}m`,(0,Ba.stripHtml)(e,{cb:i,trimOnlySpaces:!0,ignoreTags:h.stripHtml?h.stripHtmlButIgnoreTags:[],skipHtmlDecoding:!0})}""+(e.includes("<")||e.includes(">")?"":"no tags found"),""+`[${33}mrangesArr[${39}m`+JSON.stringify(U.current(),null,0)+`[${33}mskipArr[${39}m`+JSON.stringify(l.current(),null,0),""+`[${90}m================= NEXT STEP. Process outside tags =================[${39}m`,(0,Fn.rProcessOutside)(e,l.current(),(i,t,O)=>Bn(e,h,U,i,t,O,pe,c,a,g),!0),""+36+39+35+36+39,""+`[${33}mstr[${39}m`+JSON.stringify(e,null,0)+`[${33}mrangesArr.current()[${39}m`+JSON.stringify(U.current(),null,4),""+`[${33}mapplicableOpts[${39}m`+JSON.stringify(a,null,4),""+`[${90}m================= NEXT STEP. apply+wipe =================[${39}m`,""+`[${33}mstr[${39}m`+JSON.stringify(e,null,4),r(),""+`[${33}mstr[${39}m`+JSON.stringify(e,null,4),e=e.replace(/ (<br[/]?>)/g,"$1"),e=e.replace(/(\r\n|\r|\n){3,}/g,`${g}${g}`),""+`[${33}mstr[${39}m`+JSON.stringify(e,null,4),""+`[${33}mfinalIndexesToDelete.current()[${39}m`+JSON.stringify(U.current(),null,4),""+`[${90}m================= NEXT STEP. widows =================[${39}m`,""+`[${33}mskipArr.current()[${39}m`+JSON.stringify(l.current(),null,4);let u=(0,Rn.removeWidows)(e,{ignore:"all",convertEntities:h.convertEntities,targetLanguage:"html",UKPostcodes:!0,hyphens:h.convertDashes,tagRanges:l.current()});return""+`[${33}mwidowFixes[${39}m`+JSON.stringify(u,null,4),u&&u.ranges&&u.ranges.length&&(!a.removeWidows&&u.whatWasDone.removeWidows&&(a.removeWidows=!0,""+`[${32}mSET[${39}m`+`[${33}mapplicableOpts.removeWidows[${39}m`,h.removeWidows&&(a.convertEntities=!0,""+`[${32}mSET[${39}m`+`[${33}mapplicableOpts.convertEntities[${39}m`)),!a.convertEntities&&u.whatWasDone.convertEntities&&(a.convertEntities=!0,""+`[${32}mSET[${39}m`+`[${33}mapplicableOpts.convertEntities[${39}m`),h.removeWidows&&(e=u.res,""+JSON.stringify(e,null,0))),""+`[${90}m================= NEXT STEP. linebreaks =================[${39}m`,""+`[${33}mbrClosingBracketIndexesArr[${39}m`+JSON.stringify(pe,null,4),e!==e.replace(/\r\n|\r|\n/gm," ")&&(a.removeLineBreaks=!0,h.removeLineBreaks&&(e=e.replace(/\r\n|\r|\n/gm," "))),""+`[${90}m================= NEXT STEP. collapse =================[${39}m`,""+JSON.stringify(e,null,0),e=(0,$a.collapse)(e,{trimLines:!0}).result,""+JSON.stringify(e,null,0),""+`[${90}m================= NEXT STEP. final =================[${39}m`,(0,Rt.rApply)(e,U.current()).split("").forEach((i,t)=>{""+t+`[${33}mkey[${39}m`+JSON.stringify(i,null,4)+`[${35}m${i.charCodeAt(0)}[${39}m`}),""+JSON.stringify({res:(0,Rt.rApply)(e,U.current()),applicableOpts:a},null,4),{res:(0,Rt.rApply)(e,U.current()),applicableOpts:a}}return io;})();
/*! https://mths.be/he v1.2.0 by @mathias | MIT license */
