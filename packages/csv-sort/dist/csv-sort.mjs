/**
 * csv-sort
 * Sorts double-entry bookkeeping CSV coming from internet banking
 * Version: 5.0.11
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://codsen.com/os/csv-sort/
 */

import t from"lodash.pull";import{splitEasy as e}from"csv-split-easy";import r from"currency.js";function l(t){return!!t.trim()&&Number(t)==Number(t)}const n=["د.إ","؋","L","֏","ƒ","Kz","$","ƒ","₼","KM","৳","лв",".د.ب","FBu","$b","R$","฿","Nu.","P","p.","BZ$","FC","CHF","¥","₡","₱","Kč","Fdj","kr","RD$","دج","kr","Nfk","Br","Ξ","€","₾","₵","GH₵","D","FG","Q","L","kn","G","Ft","Rp","₪","₹","ع.د","﷼","kr","J$","JD","¥","KSh","лв","៛","CF","₩","₩","KD","лв","₭","₨","M","Ł","Lt","Ls","LD","MAD","lei","Ar","ден","K","₮","MOP$","UM","₨","Rf","MK","RM","MT","₦","C$","kr","₨","﷼","B/.","S/.","K","₱","₨","zł","Gs","﷼","￥","lei","Дин.","₽","R₣","﷼","₨","ج.س.","kr","£","Le","S","Db","E","฿","SM","T","د.ت","T$","₤","₺","TT$","NT$","TSh","₴","USh","$U","лв","Bs","₫","VT","WS$","FCFA","Ƀ","CFA","₣","﷼","R","Z$"];function s(t){if("string"!=typeof t)throw new Error("csv-sort/util/findType(): input must be string! Currently it's: "+typeof t);return l(t)||n.some((e=>l(t.replace(e,"").replace(/[,.]/g,""))))?"numeric":t.trim()?"text":"empty"}function o(l){let n=null,o=null;if("string"!=typeof l)throw new TypeError(`csv-sort/csvSort(): [THROW_ID_01] The input is of a wrong type! We accept either string of array of arrays. We got instead: ${typeof l}, equal to:\n${JSON.stringify(l,null,4)}`);if(!l.trim())return{res:[[""]],msgContent:n,msgType:o};let i=e(l),u=[],h=!1,c=!0;const f=[];let a=null;for(let t=i.length-1;t>=0;t--)if(u.length){0===t&&(h=i[t].every((t=>"text"===s(t)||"empty"===s(t)))),h||u.length===i[t].length||(c=!1);let e=null;for(let r=0,l=i[t].length;r<l;r++)if(null===e&&"empty"===s(i[t][r].trim())&&(e=r),null!==e&&"empty"!==s(i[t][r].trim())&&(e=null),s(i[t][r].trim())!==u[r]&&!h){const e=s(i[t][r].trim());if(Array.isArray(u[r]))u[r].includes(e)||u[r].push(s(i[t][r].trim()));else if(u[r]!==e){const t=u[r];u[r]=[],u[r].push(t),u[r].push(e)}}null!==a&&null!==e&&e>a&&(!h||h&&0!==t)&&(a=e)}else if(1!==i[t].length||""!==i[t][0])for(let e=0,r=i[t].length;e<r;e++)u.push(s(i[t][e].trim())),null===a&&"empty"===s(i[t][e].trim())&&(a=e),null!==a&&"empty"!==s(i[t][e].trim())&&(a=null);a||(a=u.length);let m=0;for(let t=0,e=u.length;t<e&&"empty"===u[t];t++)m=t;0!==m&&(i=i.map((t=>t.slice(m+1,a))),u=u.slice(m+1,a));const p=[];let g;u.forEach(((t,e)=>{"numeric"===t&&p.push(e)}));const y=h?1:0;if(1===p.length)g=p[0];else{if(0===p.length)throw new Error('csv-sort/csvSort(): [THROW_ID_03] Your CSV file does not contain numeric-only columns and computer was not able to detect the "Balance" column!');{let e=Array.from(p);const r=[];for(let t=0,l=e.length;t<l;t++){const l=e[t];let n,s,o=!0,u=!0;for(let t=y,e=i.length;t<e&&(o&&(null==n?n=i[t][l]:n===i[t][l]?(r.push(l),o=!1):n=i[t][l]),u&&(null==s?s=i[t][l]:i[t][l]!==s&&(u=!1)),o);t++);u&&f.push(l)}if(e=t(e,...r),1===e.length)g=e[0];else if(0===e.length)throw new Error('csv-sort/csvSort(): [THROW_ID_04] The computer can\'t find the "Balance" column! It saw some numeric-only columns, but they all seem to have certain rows with the same values as rows right below/above them!')}}if(!g)throw new Error("csv-sort/csvSort(): [THROW_ID_05] Sadly computer couldn't find its way in this CSV and had to stop working on it.");const d=t(Array.from(u.reduce(((t,e,r)=>(("string"==typeof e&&"numeric"===e||Array.isArray(e)&&e.includes("numeric"))&&t.push(r),t)),[])),g,...f),w=[];w.push(i[i.length-1].slice(0,a));const T=[],b=h?1:0;for(let t=i.length-2;t>=b;t--)for(let t=i.length-2;t>=b;t--)if(!T.includes(t)){let e=!1;for(let l=0,n=d.length;l<n;l++){let n=null;""!==i[t][d[l]]&&(n=r(i[t][d[l]]));let s=null;""!==i[t][g]&&(s=r(i[t][g]));let o=null;""!==w[0][g]&&(o=r(w[0][g]).format());let u=null;""!==w[w.length-1][d[l]]&&(u=r(w[w.length-1][d[l]]).format());let h=null;if(""!==w[w.length-1][g]&&(h=r(w[w.length-1][g])),n&&s.add(n).format()===o){w.unshift(i[t].slice(0,a)),T.push(t),e=!0;break}if(n&&s.subtract(n).format()===o){w.unshift(i[t].slice(0,a)),T.push(t),e=!0;break}if(u&&h.add(u).format()===s.format()){w.push(i[t].slice(0,a)),T.push(t),e=!0;break}if(u&&h.subtract(u).format()===s.format()){w.push(i[t].slice(0,a)),T.push(t),e=!0;break}}if(e){e=!1;break}}return h&&(c&&i[0].length>u.length&&(i[0].length=u.length),w.unshift(i[0].slice(0,a))),i.length-(h?2:1)!==T.length&&(n="Not all rows were recognised!",o="alert"),{res:w,msgContent:n,msgType:o}}export{o as sort};
