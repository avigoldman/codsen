{"_quickTake.js":{"title":"Quick Take","content":"import &#x7B; strict as assert &#x7D; from \"assert\";\nimport &#x7B; isAttrClosing &#x7D; from \"is-html-attribute-closing\";\n\nconst str = `<a href=\"zzz\" target=\"_blank\" style=\"color: black;\">`;\n\n// <a href=\"zzz\" target=\"_blank\" ...\n//                      ^\n//                  index 21\n\n// <a href=\"zzz\" target=\"_blank\" ...\n//                             ^\n//                         index 28\n\nassert.equal(\n  isAttrClosing(\n    str, // reference string\n    21, // known opening (or in absence of a quote, a start of a value)\n    28 // we ask, is this a closing on the attribute?\n  ),\n  true // the answer\n);"},"broken-1.js":{"title":"Broken #1","content":"import &#x7B; strict as assert &#x7D; from \"assert\";\nimport &#x7B; isAttrClosing &#x7D; from \"is-html-attribute-closing\";\n\nassert.equal(\n  isAttrClosing(\n    `<a href=\"z' click here</a>`,\n    //       ^ ^\n    //       | \\\n    //       |  \\_________________________________\n    //       |                                   |\n    8, // known opening                          |\n    10 // is this an attribute closing at index 10?\n  ),\n  true\n);\n// => yes, indeed a closing of an attribute (not counting\n// the code is broken)"},"broken-2.js":{"title":"Broken #2","content":"import &#x7B; strict as assert &#x7D; from \"assert\";\nimport &#x7B; isAttrClosing &#x7D; from \"is-html-attribute-closing\";\n\nassert.equal(\n  isAttrClosing(\n    `<a b = = = \"c\" d = = = 'e'>`,\n    //          ^ ^\n    //          | |\n    //          | L_______________________________\n    //          |                                |\n    11, // known opening                         |\n    13 // is this an attribute closing at index 13?\n  ),\n  true\n);\n// => true - indeed a closing of an attribute (not counting\n// the code is broken)"},"broken-3.js":{"title":"Broken #3","content":"import &#x7B; strict as assert &#x7D; from \"assert\";\nimport &#x7B; isAttrClosing &#x7D; from \"is-html-attribute-closing\";\n\n// Correct code:\n// <img class=\"so-called\" alt=\"!\" border='10'/>\n\n// Broken code:\nconst str = `<img class=\"so-called \"alt !' border 10'/>`;\n//                      ^\n//                known opening at idx 11\n\nassert.equal(isAttrClosing(str, 11, 22), true);\n// => true - indeed a closing of an attribute\n\nassert.equal(isAttrClosing(str, 11, 28), false);\n// => not a closing of an attribute\n\nassert.equal(isAttrClosing(str, 11, 39), false);\n// => not a closing of an attribute"}}