/**
 * json-variables
 * Resolves custom-marked, cross-referenced paths in parsed JSON
 * Version: 10.0.10
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://codsen.com/os/json-variables/
 */

!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).jsonVariables={})}(this,(function(t){"use strict";var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function r(t){var e={exports:{}};return t(e,e.exports),e.exports}var n=r((function(t,r){var n="__lodash_hash_undefined__",i=9007199254740991,a="[object Arguments]",o="[object Boolean]",s="[object Date]",l="[object Function]",u="[object GeneratorFunction]",f="[object Map]",h="[object Number]",c="[object Object]",g="[object Promise]",p="[object RegExp]",d="[object Set]",y="[object String]",m="[object Symbol]",w="[object WeakMap]",b="[object ArrayBuffer]",_="[object DataView]",v="[object Float32Array]",T="[object Float64Array]",A="[object Int8Array]",O="[object Int16Array]",W="[object Int32Array]",$="[object Uint8Array]",I="[object Uint8ClampedArray]",j="[object Uint16Array]",E="[object Uint32Array]",S=/\w*$/,N=/^\[object .+?Constructor\]$/,R=/^(?:0|[1-9]\d*)$/,H={};H[a]=H["[object Array]"]=H[b]=H[_]=H[o]=H[s]=H[v]=H[T]=H[A]=H[O]=H[W]=H[f]=H[h]=H[c]=H[p]=H[d]=H[y]=H[m]=H[$]=H[I]=H[j]=H[E]=!0,H["[object Error]"]=H[l]=H[w]=!1;var D="object"==typeof self&&self&&self.Object===Object&&self,M="object"==typeof e&&e&&e.Object===Object&&e||D||Function("return this")(),x=r&&!r.nodeType&&r,C=x&&t&&!t.nodeType&&t,B=C&&C.exports===x;function k(t,e){return t.set(e[0],e[1]),t}function F(t,e){return t.add(e),t}function J(t,e,r,n){var i=-1,a=t?t.length:0;for(n&&a&&(r=t[++i]);++i<a;)r=e(r,t[i],i,t);return r}function P(t){var e=!1;if(null!=t&&"function"!=typeof t.toString)try{e=!!(t+"")}catch(t){}return e}function V(t){var e=-1,r=Array(t.size);return t.forEach((function(t,n){r[++e]=[n,t]})),r}function q(t,e){return function(r){return t(e(r))}}function L(t){var e=-1,r=Array(t.size);return t.forEach((function(t){r[++e]=t})),r}var U,z=Array.prototype,G=Function.prototype,K=Object.prototype,Q=M["__core-js_shared__"],X=(U=/[^.]+$/.exec(Q&&Q.keys&&Q.keys.IE_PROTO||""))?"Symbol(src)_1."+U:"",Y=G.toString,Z=K.hasOwnProperty,tt=K.toString,et=RegExp("^"+Y.call(Z).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),rt=B?M.Buffer:void 0,nt=M.Symbol,it=M.Uint8Array,at=q(Object.getPrototypeOf,Object),ot=Object.create,st=K.propertyIsEnumerable,lt=z.splice,ut=Object.getOwnPropertySymbols,ft=rt?rt.isBuffer:void 0,ht=q(Object.keys,Object),ct=Ct(M,"DataView"),gt=Ct(M,"Map"),pt=Ct(M,"Promise"),dt=Ct(M,"Set"),yt=Ct(M,"WeakMap"),mt=Ct(Object,"create"),wt=Pt(ct),bt=Pt(gt),_t=Pt(pt),vt=Pt(dt),Tt=Pt(yt),At=nt?nt.prototype:void 0,Ot=At?At.valueOf:void 0;function Wt(t){var e=-1,r=t?t.length:0;for(this.clear();++e<r;){var n=t[e];this.set(n[0],n[1])}}function $t(t){var e=-1,r=t?t.length:0;for(this.clear();++e<r;){var n=t[e];this.set(n[0],n[1])}}function It(t){var e=-1,r=t?t.length:0;for(this.clear();++e<r;){var n=t[e];this.set(n[0],n[1])}}function jt(t){this.__data__=new $t(t)}function Et(t,e){var r=qt(t)||function(t){return function(t){return function(t){return!!t&&"object"==typeof t}(t)&&Lt(t)}(t)&&Z.call(t,"callee")&&(!st.call(t,"callee")||tt.call(t)==a)}(t)?function(t,e){for(var r=-1,n=Array(t);++r<t;)n[r]=e(r);return n}(t.length,String):[],n=r.length,i=!!n;for(var o in t)!e&&!Z.call(t,o)||i&&("length"==o||Ft(o,n))||r.push(o);return r}function St(t,e,r){var n=t[e];Z.call(t,e)&&Vt(n,r)&&(void 0!==r||e in t)||(t[e]=r)}function Nt(t,e){for(var r=t.length;r--;)if(Vt(t[r][0],e))return r;return-1}function Rt(t,e,r,n,i,g,w){var N;if(n&&(N=g?n(t,i,g,w):n(t)),void 0!==N)return N;if(!Gt(t))return t;var R=qt(t);if(R){if(N=function(t){var e=t.length,r=t.constructor(e);e&&"string"==typeof t[0]&&Z.call(t,"index")&&(r.index=t.index,r.input=t.input);return r}(t),!e)return function(t,e){var r=-1,n=t.length;e||(e=Array(n));for(;++r<n;)e[r]=t[r];return e}(t,N)}else{var D=kt(t),M=D==l||D==u;if(Ut(t))return function(t,e){if(e)return t.slice();var r=new t.constructor(t.length);return t.copy(r),r}(t,e);if(D==c||D==a||M&&!g){if(P(t))return g?t:{};if(N=function(t){return"function"!=typeof t.constructor||Jt(t)?{}:(e=at(t),Gt(e)?ot(e):{});var e}(M?{}:t),!e)return function(t,e){return Mt(t,Bt(t),e)}(t,function(t,e){return t&&Mt(e,Kt(e),t)}(N,t))}else{if(!H[D])return g?t:{};N=function(t,e,r,n){var i=t.constructor;switch(e){case b:return Dt(t);case o:case s:return new i(+t);case _:return function(t,e){var r=e?Dt(t.buffer):t.buffer;return new t.constructor(r,t.byteOffset,t.byteLength)}(t,n);case v:case T:case A:case O:case W:case $:case I:case j:case E:return function(t,e){var r=e?Dt(t.buffer):t.buffer;return new t.constructor(r,t.byteOffset,t.length)}(t,n);case f:return function(t,e,r){return J(e?r(V(t),!0):V(t),k,new t.constructor)}(t,n,r);case h:case y:return new i(t);case p:return function(t){var e=new t.constructor(t.source,S.exec(t));return e.lastIndex=t.lastIndex,e}(t);case d:return function(t,e,r){return J(e?r(L(t),!0):L(t),F,new t.constructor)}(t,n,r);case m:return a=t,Ot?Object(Ot.call(a)):{}}var a}(t,D,Rt,e)}}w||(w=new jt);var x=w.get(t);if(x)return x;if(w.set(t,N),!R)var C=r?function(t){return function(t,e,r){var n=e(t);return qt(t)?n:function(t,e){for(var r=-1,n=e.length,i=t.length;++r<n;)t[i+r]=e[r];return t}(n,r(t))}(t,Kt,Bt)}(t):Kt(t);return function(t,e){for(var r=-1,n=t?t.length:0;++r<n&&!1!==e(t[r],r,t););}(C||t,(function(i,a){C&&(i=t[a=i]),St(N,a,Rt(i,e,r,n,a,t,w))})),N}function Ht(t){return!(!Gt(t)||(e=t,X&&X in e))&&(zt(t)||P(t)?et:N).test(Pt(t));var e}function Dt(t){var e=new t.constructor(t.byteLength);return new it(e).set(new it(t)),e}function Mt(t,e,r,n){r||(r={});for(var i=-1,a=e.length;++i<a;){var o=e[i],s=n?n(r[o],t[o],o,r,t):void 0;St(r,o,void 0===s?t[o]:s)}return r}function xt(t,e){var r,n,i=t.__data__;return("string"==(n=typeof(r=e))||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==r:null===r)?i["string"==typeof e?"string":"hash"]:i.map}function Ct(t,e){var r=function(t,e){return null==t?void 0:t[e]}(t,e);return Ht(r)?r:void 0}Wt.prototype.clear=function(){this.__data__=mt?mt(null):{}},Wt.prototype.delete=function(t){return this.has(t)&&delete this.__data__[t]},Wt.prototype.get=function(t){var e=this.__data__;if(mt){var r=e[t];return r===n?void 0:r}return Z.call(e,t)?e[t]:void 0},Wt.prototype.has=function(t){var e=this.__data__;return mt?void 0!==e[t]:Z.call(e,t)},Wt.prototype.set=function(t,e){return this.__data__[t]=mt&&void 0===e?n:e,this},$t.prototype.clear=function(){this.__data__=[]},$t.prototype.delete=function(t){var e=this.__data__,r=Nt(e,t);return!(r<0)&&(r==e.length-1?e.pop():lt.call(e,r,1),!0)},$t.prototype.get=function(t){var e=this.__data__,r=Nt(e,t);return r<0?void 0:e[r][1]},$t.prototype.has=function(t){return Nt(this.__data__,t)>-1},$t.prototype.set=function(t,e){var r=this.__data__,n=Nt(r,t);return n<0?r.push([t,e]):r[n][1]=e,this},It.prototype.clear=function(){this.__data__={hash:new Wt,map:new(gt||$t),string:new Wt}},It.prototype.delete=function(t){return xt(this,t).delete(t)},It.prototype.get=function(t){return xt(this,t).get(t)},It.prototype.has=function(t){return xt(this,t).has(t)},It.prototype.set=function(t,e){return xt(this,t).set(t,e),this},jt.prototype.clear=function(){this.__data__=new $t},jt.prototype.delete=function(t){return this.__data__.delete(t)},jt.prototype.get=function(t){return this.__data__.get(t)},jt.prototype.has=function(t){return this.__data__.has(t)},jt.prototype.set=function(t,e){var r=this.__data__;if(r instanceof $t){var n=r.__data__;if(!gt||n.length<199)return n.push([t,e]),this;r=this.__data__=new It(n)}return r.set(t,e),this};var Bt=ut?q(ut,Object):function(){return[]},kt=function(t){return tt.call(t)};function Ft(t,e){return!!(e=null==e?i:e)&&("number"==typeof t||R.test(t))&&t>-1&&t%1==0&&t<e}function Jt(t){var e=t&&t.constructor;return t===("function"==typeof e&&e.prototype||K)}function Pt(t){if(null!=t){try{return Y.call(t)}catch(t){}try{return t+""}catch(t){}}return""}function Vt(t,e){return t===e||t!=t&&e!=e}(ct&&kt(new ct(new ArrayBuffer(1)))!=_||gt&&kt(new gt)!=f||pt&&kt(pt.resolve())!=g||dt&&kt(new dt)!=d||yt&&kt(new yt)!=w)&&(kt=function(t){var e=tt.call(t),r=e==c?t.constructor:void 0,n=r?Pt(r):void 0;if(n)switch(n){case wt:return _;case bt:return f;case _t:return g;case vt:return d;case Tt:return w}return e});var qt=Array.isArray;function Lt(t){return null!=t&&function(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=i}(t.length)&&!zt(t)}var Ut=ft||function(){return!1};function zt(t){var e=Gt(t)?tt.call(t):"";return e==l||e==u}function Gt(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}function Kt(t){return Lt(t)?Et(t):function(t){if(!Jt(t))return ht(t);var e=[];for(var r in Object(t))Z.call(t,r)&&"constructor"!=r&&e.push(r);return e}(t)}t.exports=function(t){return Rt(t,!0,!0)}}));var i,a,o=Object.prototype,s=Function.prototype.toString,l=o.hasOwnProperty,u=s.call(Object),f=o.toString,h=(i=Object.getPrototypeOf,a=Object,function(t){return i(a(t))});var c=function(t){if(!function(t){return!!t&&"object"==typeof t}(t)||"[object Object]"!=f.call(t)||function(t){var e=!1;if(null!=t&&"function"!=typeof t.toString)try{e=!!(t+"")}catch(t){}return e}(t))return!1;var e=h(t);if(null===e)return!0;var r=l.call(e,"constructor")&&e.constructor;return"function"==typeof r&&r instanceof r&&s.call(r)==u};function g(t){if(t.includes(".")){const e=t.lastIndexOf(".");if(!t.slice(0,e).includes("."))return t.slice(0,e);for(let r=e-1;r--;)if("."===t[r])return t.slice(r+1,e)}return null}function p(t,e){return function t(e,r,i,a){const o=n(e);let s;const l={depth:-1,path:"",...i};if(l.depth+=1,Array.isArray(o))for(let e=0,i=o.length;e<i&&!a.now;e++){const i=l.path?`${l.path}.${e}`:`${e}`;void 0!==o[e]?(l.parent=n(o),l.parentType="array",l.parentKey=g(i),s=t(r(o[e],void 0,{...l,path:i},a),r,{...l,path:i},a),Number.isNaN(s)&&e<o.length?(o.splice(e,1),e-=1):o[e]=s):o.splice(e,1)}else if(c(o))for(const e in o){if(a.now&&null!=e)break;const i=l.path?`${l.path}.${e}`:e;0===l.depth&&null!=e&&(l.topmostKey=e),l.parent=n(o),l.parentType="object",l.parentKey=g(i),s=t(r(e,o[e],{...l,path:i},a),r,{...l,path:i},a),Number.isNaN(s)?delete o[e]:o[e]=s}return o}(t,e,{},{now:!1})}const d=new Map;function y(t,e){if(!Array.isArray(t))switch(typeof t){case"string":t=[t];break;case"undefined":t=[];break;default:throw new TypeError(`Expected '${e}' to be a string or an array, but got a type of '${typeof t}'`)}return t.filter((t=>{if("string"!=typeof t){if(void 0===t)return!1;throw new TypeError(`Expected '${e}' to be an array of strings, but found a type of '${typeof t}' in the array`)}return!0}))}function m(t,e){e={caseSensitive:!1,...e};const r=t+JSON.stringify(e);if(d.has(r))return d.get(r);const n="!"===t[0];n&&(t=t.slice(1)),t=(t=>{if("string"!=typeof t)throw new TypeError("Expected a string");return t.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")})(t).replace(/\\\*/g,"[\\s\\S]*");const i=new RegExp(`^${t}$`,e.caseSensitive?"":"i");return i.negated=n,d.set(r,i),i}var w=(t,e,r)=>{if(t=y(t,"inputs"),0===(e=y(e,"patterns")).length)return[];const n="!"===e[0][0];e=e.map((t=>m(t,r)));const i=[];for(const r of t){let t=n;for(const n of e)n.test(r)&&(t=!n.negated);t&&i.push(r)}return i};w.isMatch=(t,e,r)=>(t=y(t,"inputs"),0!==(e=y(e,"patterns")).length&&t.some((t=>e.every((e=>{const n=m(e,r),i=n.test(t);return n.negated?!i:i})))));var b=r((function(t){t.exports=function(){var t=Object.prototype.toString;function e(t,e){return null!=t&&Object.prototype.hasOwnProperty.call(t,e)}function r(t){if(!t)return!0;if(a(t)&&0===t.length)return!0;if("string"!=typeof t){for(var r in t)if(e(t,r))return!1;return!0}return!1}function n(e){return t.call(e)}function i(t){return"object"==typeof t&&"[object Object]"===n(t)}var a=Array.isArray||function(e){return"[object Array]"===t.call(e)};function o(t){return"boolean"==typeof t||"[object Boolean]"===n(t)}function s(t){var e=parseInt(t);return e.toString()===t?e:t}function l(t){var n,l=function(t){return Object.keys(l).reduce((function(e,r){return"create"===r||"function"==typeof l[r]&&(e[r]=l[r].bind(l,t)),e}),{})};function u(t,e){if(n(t,e))return t[e]}function f(e,r,n,i){if("number"==typeof r&&(r=[r]),!r||0===r.length)return e;if("string"==typeof r)return f(e,r.split(".").map(s),n,i);var a=r[0],o=u(e,a);if(t.includeInheritedProps&&("__proto__"===a||"constructor"===a&&"function"==typeof o))throw new Error("For security reasons, object's magic properties cannot be set");return 1===r.length?(void 0!==o&&i||(e[a]=n),o):(void 0===o&&(e[a]="number"==typeof r[1]?[]:{}),f(e[a],r.slice(1),n,i))}return n=(t=t||{}).includeInheritedProps?function(){return!0}:function(t,r){return"number"==typeof r&&Array.isArray(t)||e(t,r)},l.has=function(r,n){if("number"==typeof n?n=[n]:"string"==typeof n&&(n=n.split(".")),!n||0===n.length)return!!r;for(var i=0;i<n.length;i++){var o=s(n[i]);if(!("number"==typeof o&&a(r)&&o<r.length||(t.includeInheritedProps?o in Object(r):e(r,o))))return!1;r=r[o]}return!0},l.ensureExists=function(t,e,r){return f(t,e,r,!0)},l.set=function(t,e,r,n){return f(t,e,r,n)},l.insert=function(t,e,r,n){var i=l.get(t,e);n=~~n,a(i)||l.set(t,e,i=[]),i.splice(n,0,r)},l.empty=function(t,e){var s,u;if(!r(e)&&null!=t&&(s=l.get(t,e))){if("string"==typeof s)return l.set(t,e,"");if(o(s))return l.set(t,e,!1);if("number"==typeof s)return l.set(t,e,0);if(a(s))s.length=0;else{if(!i(s))return l.set(t,e,null);for(u in s)n(s,u)&&delete s[u]}}},l.push=function(t,e){var r=l.get(t,e);a(r)||l.set(t,e,r=[]),r.push.apply(r,Array.prototype.slice.call(arguments,2))},l.coalesce=function(t,e,r){for(var n,i=0,a=e.length;i<a;i++)if(void 0!==(n=l.get(t,e[i])))return n;return r},l.get=function(t,e,r){if("number"==typeof e&&(e=[e]),!e||0===e.length)return t;if(null==t)return r;if("string"==typeof e)return l.get(t,e.split("."),r);var n=s(e[0]),i=u(t,n);return void 0===i?r:1===e.length?i:l.get(t[n],e.slice(1),r)},l.del=function(t,e){if("number"==typeof e&&(e=[e]),null==t)return t;if(r(e))return t;if("string"==typeof e)return l.del(t,e.split("."));var i=s(e[0]);return n(t,i)?1!==e.length?l.del(t[i],e.slice(1)):(a(t)?t.splice(i,1):delete t[i],t):t},l}var u=l();return u.create=l,u.withInheritedProps=l({includeInheritedProps:!0}),u}()}));function _(t){return"string"==typeof t?t.length?[t]:[]:t}function v(t){return t&&"object"==typeof t&&!Array.isArray(t)}function T(t){return"string"==typeof t}const A={cb:void 0,i:!1,trimBeforeMatching:!1,trimCharsBeforeMatching:[],maxMismatches:0,firstMustMatch:!1,lastMustMatch:!1,hungry:!1},O=t=>t+1;function W(t,e,r,n,i=!1,a=O){const o="function"==typeof r?r():r;if(+e<0&&i&&"EOL"===o)return o;const s={...A,...n};if(e>=t.length&&!i)return!1;let l=i?1:r.length,u=0,f=!1,h=!1,c=!1,g=s.maxMismatches,p=e,d=!1,y=!1,m=!1;function w(){return 1===u&&g<s.maxMismatches-1}for(;t[p];){const e=a(p);if(s.trimBeforeMatching&&""===t[p].trim()){if(!t[e]&&i&&"EOL"===r)return!0;p=a(p);continue}if(s&&!s.i&&s.trimCharsBeforeMatching&&s.trimCharsBeforeMatching.includes(t[p])||s&&s.i&&s.trimCharsBeforeMatching&&s.trimCharsBeforeMatching.map((t=>t.toLowerCase())).includes(t[p].toLowerCase())){if(i&&"EOL"===r&&!t[e])return!0;p=a(p);continue}const n=e>p?r[r.length-l]:r[l-1];if(!s.i&&t[p]===n||s.i&&t[p].toLowerCase()===n.toLowerCase()){if(d||(d=!0),c||(c=!0),l===r.length){if(y=!0,g!==s.maxMismatches)return!1}else 1===l&&(m=!0);if(l-=1,u++,w())return!1;if(!l)return(u!==r.length||g===s.maxMismatches||!f)&&p}else{if(f||u||(f=!0),!(s.maxMismatches&&g&&p))return!(0!==p||1!==l||s.lastMustMatch||!c)&&0;g-=1;for(let n=0;n<=g;n++){const i=e>p?r[r.length-l+1+n]:r[l-2-n],o=t[a(p)];if(i&&(!s.i&&t[p]===i||s.i&&t[p].toLowerCase()===i.toLowerCase())&&(!s.firstMustMatch||l!==r.length)){if(u++,w())return!1;l-=2,d=!0;break}if(o&&i&&(!s.i&&o===i||s.i&&o.toLowerCase()===i.toLowerCase())&&(!s.firstMustMatch||l!==r.length)){if(!u&&!s.hungry)return!1;l-=1,d=!0;break}if(void 0===i&&g>=0&&d&&(!s.firstMustMatch||y)&&(!s.lastMustMatch||m))return p}d||(h=p)}if(!1!==h&&h!==p&&(h=!1),l<1)return p;p=a(p)}return l>0?!(!i||"EOL"!==o)||!!(s&&s.maxMismatches>=l&&c)&&(h||0):void 0}function $(t,e,r,n,i){if(v(i)&&Object.prototype.hasOwnProperty.call(i,"trimBeforeMatching")&&"boolean"!=typeof i.trimBeforeMatching)throw new Error(`string-match-left-right/${t}(): [THROW_ID_09] opts.trimBeforeMatching should be boolean!${Array.isArray(i.trimBeforeMatching)?" Did you mean to use opts.trimCharsBeforeMatching?":""}`);const a={...A,...i};if("string"==typeof a.trimCharsBeforeMatching&&(a.trimCharsBeforeMatching=_(a.trimCharsBeforeMatching)),a.trimCharsBeforeMatching=a.trimCharsBeforeMatching.map((t=>T(t)?t:String(t))),!T(e))return!1;if(!e.length)return!1;if(!Number.isInteger(r)||r<0)throw new Error(`string-match-left-right/${t}(): [THROW_ID_03] the second argument should be a natural number. Currently it's of a type: ${typeof r}, equal to:\n${JSON.stringify(r,null,4)}`);let o,s;if(T(n))o=[n];else if(Array.isArray(n))o=n;else if(n){if("function"!=typeof n)throw new Error(`string-match-left-right/${t}(): [THROW_ID_05] the third argument, whatToMatch, is neither string nor array of strings! It's ${typeof n}, equal to:\n${JSON.stringify(n,null,4)}`);o=[],o.push(n)}else o=n;if(i&&!v(i))throw new Error(`string-match-left-right/${t}(): [THROW_ID_06] the fourth argument, options object, should be a plain object. Currently it's of a type "${typeof i}", and equal to:\n${JSON.stringify(i,null,4)}`);let l=0,u="";if(a&&a.trimCharsBeforeMatching&&a.trimCharsBeforeMatching.some(((t,e)=>t.length>1&&(l=e,u=t,!0))))throw new Error(`string-match-left-right/${t}(): [THROW_ID_07] the fourth argument, options object contains trimCharsBeforeMatching. It was meant to list the single characters but one of the entries at index ${l} is longer than 1 character, ${u.length} (equals to ${u}). Please split it into separate characters and put into array as separate elements.`);if(!o||!Array.isArray(o)||Array.isArray(o)&&!o.length||Array.isArray(o)&&1===o.length&&T(o[0])&&!o[0].trim()){if("function"==typeof a.cb){let n,i=r;if("matchLeftIncl"!==t&&"matchRight"!==t||(i+=1),"L"===t[5])for(let t=i;t--;){const r=e[t];if((!a.trimBeforeMatching||a.trimBeforeMatching&&void 0!==r&&r.trim())&&(!a.trimCharsBeforeMatching||!a.trimCharsBeforeMatching.length||void 0!==r&&!a.trimCharsBeforeMatching.includes(r))){n=t;break}}else if(t.startsWith("matchRight"))for(let t=i;t<e.length;t++){const r=e[t];if((!a.trimBeforeMatching||a.trimBeforeMatching&&r.trim())&&(!a.trimCharsBeforeMatching||!a.trimCharsBeforeMatching.length||!a.trimCharsBeforeMatching.includes(r))){n=t;break}}if(void 0===n)return!1;const o=e[n],s=n+1;let l="";return s&&s>0&&(l=e.slice(0,s)),"L"===t[5]?a.cb(o,l,n):(n&&n>0&&(l=e.slice(n)),a.cb(o,l,n))}let n="";throw i||(n=" More so, the whole options object, the fourth input argument, is missing!"),new Error(`string-match-left-right/${t}(): [THROW_ID_08] the third argument, "whatToMatch", was given as an empty string. This means, you intend to match purely by a callback. The callback was not set though, the opts key "cb" is not set!${n}`)}for(let n=0,i=o.length;n<i;n++){s="function"==typeof o[n];const i=o[n];let l,u,f="",h=r;"matchRight"===t?h+=1:"matchLeft"===t&&(h-=1);const c=W(e,h,i,a,s,(e=>"L"===t[5]?e-1:e+1));if(c&&s&&"function"==typeof i&&"EOL"===i())return!(!i()||a.cb&&!a.cb(l,f,u))&&i();if(Number.isInteger(c)&&(u=t.startsWith("matchLeft")?c-1:c+1,f="L"===t[5]?e.slice(0,c):e.slice(u)),u<0&&(u=void 0),e[u]&&(l=e[u]),Number.isInteger(c)&&(!a.cb||a.cb(l,f,u)))return i}return!1}function I(t,e,r,n){return $("matchLeftIncl",t,e,r,n)}function j(t,e,r,n){return $("matchRightIncl",t,e,r,n)}function E(t){return"string"==typeof t}const S={fromIndex:0,throwWhenSomethingWrongIsDetected:!0,allowWholeValueToBeOnlyHeadsOrTails:!0,source:"string-find-heads-tails",matchHeadsAndTailsStrictlyInPairsByTheirOrder:!1,relaxedAPI:!1};function N(t,e,r,n){if(n&&(!(i=n)||"object"!=typeof i||Array.isArray(i)))throw new TypeError(`string-find-heads-tails: [THROW_ID_01] the fourth input argument, an Optional Options Object, must be a plain object! Currently it's equal to: ${n} (type: ${typeof n})`);var i;const a={...S,...n};if("string"==typeof a.fromIndex&&/^\d*$/.test(a.fromIndex))a.fromIndex=Number(a.fromIndex);else if(!Number.isInteger(a.fromIndex)||a.fromIndex<0)throw new TypeError(`${a.source} [THROW_ID_18] the fourth input argument must be a natural number or zero! Currently it's: ${a.fromIndex}`);if(!E(t)||0===t.length){if(a.relaxedAPI)return[];throw new TypeError(`string-find-heads-tails: [THROW_ID_02] the first input argument, input string, must be a non-zero-length string! Currently it's: ${typeof t}, equal to: ${t}`)}let o,s;if("string"!=typeof e&&!Array.isArray(e)){if(a.relaxedAPI)return[];throw new TypeError(`string-find-heads-tails: [THROW_ID_03] the second input argument, heads, must be either a string or an array of strings! Currently it's: ${typeof e}, equal to:\n${JSON.stringify(e,null,4)}`)}if("string"==typeof e){if(0===e.length){if(a.relaxedAPI)return[];throw new TypeError("string-find-heads-tails: [THROW_ID_04] the second input argument, heads, must be a non-empty string! Currently it's empty.")}e=_(e)}else if(Array.isArray(e)){if(0===e.length){if(a.relaxedAPI)return[];throw new TypeError("string-find-heads-tails: [THROW_ID_05] the second input argument, heads, must be a non-empty array and contain at least one string! Currently it's empty.")}if(e.every(((t,e)=>(o=t,s=e,E(t))))){if(!e.every(((t,e)=>(s=e,E(t)&&t.length>0&&""!==t.trim())))){if(!a.relaxedAPI)throw new TypeError(`string-find-heads-tails: [THROW_ID_07] the second input argument, heads, should not contain empty strings! For example, there's one detected at index ${s} of heads array:\n${JSON.stringify(e,null,4)}.`);if(0===(e=e.filter((t=>E(t)&&t.length>0))).length)return[]}}else{if(!a.relaxedAPI)throw new TypeError(`string-find-heads-tails: [THROW_ID_06] the second input argument, heads, contains non-string elements! For example, element at ${s}th index is ${typeof o}, equal to:\n${JSON.stringify(o,null,4)}. Whole heads array looks like:\n${JSON.stringify(e,null,4)}`);if(0===(e=e.filter((t=>E(t)&&t.length>0))).length)return[]}}if(!E(r)&&!Array.isArray(r)){if(a.relaxedAPI)return[];throw new TypeError(`string-find-heads-tails: [THROW_ID_08] the third input argument, tails, must be either a string or an array of strings! Currently it's: ${typeof r}, equal to:\n${JSON.stringify(r,null,4)}`)}if(E(r)){if(0===r.length){if(a.relaxedAPI)return[];throw new TypeError("string-find-heads-tails: [THROW_ID_09] the third input argument, tails, must be a non-empty string! Currently it's empty.")}r=_(r)}else if(Array.isArray(r)){if(0===r.length){if(a.relaxedAPI)return[];throw new TypeError("string-find-heads-tails: [THROW_ID_10] the third input argument, tails, must be a non-empty array and contain at least one string! Currently it's empty.")}if(r.every(((t,e)=>(o=t,s=e,E(t))))){if(!r.every(((t,e)=>(s=e,E(t)&&t.length>0&&""!==t.trim())))){if(!a.relaxedAPI)throw new TypeError(`string-find-heads-tails: [THROW_ID_12] the third input argument, tails, should not contain empty strings! For example, there's one detected at index ${s}. Whole tails array is equal to:\n${JSON.stringify(r,null,4)}`);if(0===(r=r.filter((t=>E(t)&&t.length>0))).length)return[]}}else{if(!a.relaxedAPI)throw new TypeError(`string-find-heads-tails: [THROW_ID_11] the third input argument, tails, contains non-string elements! For example, element at ${s}th index is ${typeof o}, equal to:\n${JSON.stringify(o,null,4)}. Whole tails array is equal to:\n${JSON.stringify(r,null,4)}`);if(0===(r=r.filter((t=>E(t)&&t.length>0))).length)return[]}}const l=a.source===S.source;if(a.throwWhenSomethingWrongIsDetected&&!a.allowWholeValueToBeOnlyHeadsOrTails){if(_(e).includes(t))throw new Error(`${a.source}${l?": [THROW_ID_16]":""} the whole input string can't be equal to ${E(e)?"":"one of "}heads (${t})!`);if(_(r).includes(t))throw new Error(`${a.source}${l?": [THROW_ID_17]":""} the whole input string can't be equal to ${E(r)?"":"one of "}tails (${t})!`)}const u=e.concat(r).map((t=>t.charAt(0))).reduce(((t,e)=>e.charCodeAt(0)>t[1]?[t[0],e.charCodeAt(0)]:e.charCodeAt(0)<t[0]?[e.charCodeAt(0),t[1]]:t),[e[0].charCodeAt(0),e[0].charCodeAt(0)]),f=[];let h,c=!1,g={},p="";for(let n=a.fromIndex,i=t.length;n<i;n++){const o=t[n].charCodeAt(0);if(o<=u[1]&&o>=u[0]){const o=j(t,n,e);if(o&&a.matchHeadsAndTailsStrictlyInPairsByTheirOrder)for(let t=e.length;t--;)if(e[t]===o){h=t;break}if("string"==typeof o){if(!c){g={},g.headsStartAt=n,g.headsEndAt=n+o.length,c=!0,n+=o.length-1,p&&(p="");continue}if(a.throwWhenSomethingWrongIsDetected)throw new TypeError(`${a.source}${l?": [THROW_ID_19]":""} When processing "${t}", we found heads (${t.slice(n,n+o.length)}) starting at character with index number "${n}" and there was another set of heads before it! Generally speaking, there should be "heads-tails-heads-tails", not "heads-heads-tails"!\nWe're talking about the area of the code:\n\n\n--------------------------------------starts\n${t.slice(Math.max(n-200,0),n)}\n      [33m-------\x3e[39m [31m${t.slice(n,n+o.length)}[39m [33m<-------[39m\n${t.slice(n+o.length,Math.min(i,n+200))}\n--------------------------------------ends\n\n\nTo turn off this error being thrown, set opts.throwWhenSomethingWrongIsDetected to Boolean false.`)}const s=j(t,n,r);if(c&&s&&a.matchHeadsAndTailsStrictlyInPairsByTheirOrder&&void 0!==h&&void 0!==r[h]&&r[h]!==s){let n;for(let t=r.length;t--;)if(r[t]===s){n=t;break}throw new TypeError(`${a.source}${l?": [THROW_ID_20]":""} When processing "${t}", we had "opts.matchHeadsAndTailsStrictlyInPairsByTheirOrder" on. We found heads (${e[h]}) but the tails the followed it were not of the same index, ${h} (${r[h]}) but ${n} (${s}).`)}if("string"==typeof s){if(c){g.tailsStartAt=n,g.tailsEndAt=n+s.length,f.push(g),g={},c=!1,n+=s.length-1;continue}a.throwWhenSomethingWrongIsDetected&&(p=`${a.source}${l?": [THROW_ID_21]":""} When processing "${t}", we found tails (${t.slice(n,n+s.length)}) starting at character with index number "${n}" but there were no heads preceding it. That's very naughty!`)}}if(a.throwWhenSomethingWrongIsDetected&&n===i-1){if(0!==Object.keys(g).length)throw new TypeError(`${a.source}${l?": [THROW_ID_22]":""} When processing "${t}", we reached the end of the string and yet didn't find any tails (${JSON.stringify(r,null,4)}) to match the last detected heads (${t.slice(g.headsStartAt,g.headsEndAt)})!`);if(p)throw new Error(p)}}return f}function R(t,e,r){let i;void 0!==r&&(i=Array.isArray(r)?n(r):[n(r)]);const a=[],o=p(t,((t,r,n)=>{const o=void 0!==r?r:t;if(void 0!==r&&w.isMatch(t,e,{caseSensitive:!0}))if(void 0===i)a.push({val:r,path:n.path});else if(i.length)return i.shift();return o}));return void 0===i?a:o}function H(t,e=1){function r(t){return Array.from(t).reverse().join("")}function n(t,e,r){const n=r?"\n":"\r",i=r?"\r":"\n";if(!t)return t;let a=0,o="";for(let r=0,s=t.length;r<s;r++)(t[r]===n||t[r]===i&&t[r-1]!==n)&&a++,"\r\n".includes(t[r])||" "===t[r]?" "===t[r]?o+=t[r]:t[r]===n?a<=e&&(o+=t[r],t[r+1]===i&&(o+=t[r+1],r++)):t[r]===i&&(!t[r-1]||t[r-1]!==n)&&a<=e&&(o+=t[r]):t[r+1]||a||(o+=" ");return o}if("string"==typeof t&&t.length){let i=1;"number"==typeof+e&&Number.isInteger(+e)&&+e>=0&&(i=+e);let a="",o="";if(t.trim()){if(!t[0].trim())for(let e=0,r=t.length;e<r;e++)if(t[e].trim()){a=t.slice(0,e);break}}else a=t;if(t.trim()&&(""===t.slice(-1).trim()||" "===t.slice(-1)))for(let e=t.length;e--;)if(t[e].trim()){o=t.slice(e+1);break}return`${n(a,i,!1)}${t.trim()}${r(n(r(o),i,!0))}`}return t}const D={strictlyTwoElementsInRangeArrays:!1,progressFn:null};function M(t,e){if(!Array.isArray(t)||!t.length)return t;const r={...D,...e};let n,i;if(r.strictlyTwoElementsInRangeArrays&&!t.filter((t=>t)).every(((t,e)=>2===t.length||(n=e,i=t.length,!1))))throw new TypeError(`ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ${n}th range (${JSON.stringify(t[n],null,4)}) has not two but ${i} elements!`);if(!t.filter((t=>t)).every(((t,e)=>!(!Number.isInteger(t[0])||t[0]<0||!Number.isInteger(t[1])||t[1]<0)||(n=e,!1))))throw new TypeError(`ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ${n}th range (${JSON.stringify(t[n],null,4)}) does not consist of only natural numbers!`);const a=t.filter((t=>t)).length**2;let o=0;return Array.from(t).filter((t=>t)).sort(((t,e)=>(r.progressFn&&(o+=1,r.progressFn(Math.floor(100*o/a))),t[0]===e[0]?t[1]<e[1]?-1:t[1]>e[1]?1:0:t[0]<e[0]?-1:1)))}const x={mergeType:1,progressFn:null,joinRangesThatTouchEdges:!0};function C(t,e){function r(t){return t&&"object"==typeof t&&!Array.isArray(t)}if(!Array.isArray(t)||!t.length)return null;let n;if(e){if(!r(e))throw new Error(`emlint: [THROW_ID_03] the second input argument must be a plain object. It was given as:\n${JSON.stringify(e,null,4)} (type ${typeof e})`);if(n={...x,...e},n.progressFn&&r(n.progressFn)&&!Object.keys(n.progressFn).length)n.progressFn=null;else if(n.progressFn&&"function"!=typeof n.progressFn)throw new Error(`ranges-merge: [THROW_ID_01] opts.progressFn must be a function! It was given of a type: "${typeof n.progressFn}", equal to ${JSON.stringify(n.progressFn,null,4)}`);if(n.mergeType&&1!=+n.mergeType&&2!=+n.mergeType)throw new Error(`ranges-merge: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof n.mergeType}", equal to ${JSON.stringify(n.mergeType,null,4)}`);if("boolean"!=typeof n.joinRangesThatTouchEdges)throw new Error(`ranges-merge: [THROW_ID_04] opts.joinRangesThatTouchEdges was customised to a wrong thing! It was given of a type: "${typeof n.joinRangesThatTouchEdges}", equal to ${JSON.stringify(n.joinRangesThatTouchEdges,null,4)}`)}else n={...x};const i=t.filter((t=>t)).map((t=>[...t])).filter((t=>void 0!==t[2]||t[0]!==t[1]));let a,o,s;if(a=n.progressFn?M(i,{progressFn:t=>{s=Math.floor(t/5),s!==o&&(o=s,n.progressFn(s))}}):M(i),!a)return null;const l=a.length-1;for(let t=l;t>0;t--)n.progressFn&&(s=Math.floor(78*(1-t/l))+21,s!==o&&s>o&&(o=s,n.progressFn(s))),(a[t][0]<=a[t-1][0]||!n.joinRangesThatTouchEdges&&a[t][0]<a[t-1][1]||n.joinRangesThatTouchEdges&&a[t][0]<=a[t-1][1])&&(a[t-1][0]=Math.min(a[t][0],a[t-1][0]),a[t-1][1]=Math.max(a[t][1],a[t-1][1]),void 0!==a[t][2]&&(a[t-1][0]>=a[t][0]||a[t-1][1]<=a[t][1])&&null!==a[t-1][2]&&(null===a[t][2]&&null!==a[t-1][2]?a[t-1][2]=null:null!=a[t-1][2]?2==+n.mergeType&&a[t-1][0]===a[t][0]?a[t-1][2]=a[t][2]:a[t-1][2]+=a[t][2]:a[t-1][2]=a[t][2]),a.splice(t,1),t=a.length);return a.length?a:null}function B(t){return null!=t}function k(t){return Number.isInteger(t)&&t>=0}function F(t){return"string"==typeof t}const J={limitToBeAddedWhitespace:!1,limitLinebreaksCount:1,mergeType:1};class P{constructor(t){const e={...J,...t};if(e.mergeType&&1!==e.mergeType&&2!==e.mergeType)if(F(e.mergeType)&&"1"===e.mergeType.trim())e.mergeType=1;else{if(!F(e.mergeType)||"2"!==e.mergeType.trim())throw new Error(`ranges-push: [THROW_ID_02] opts.mergeType was customised to a wrong thing! It was given of a type: "${typeof e.mergeType}", equal to ${JSON.stringify(e.mergeType,null,4)}`);e.mergeType=2}this.opts=e,this.ranges=[]}add(t,e,r){if(null==t&&null==e)return;if(B(t)&&!B(e)){if(Array.isArray(t)){if(t.length){if(t.some((t=>Array.isArray(t))))return void t.forEach((t=>{Array.isArray(t)&&this.add(...t)}));t.length&&k(+t[0])&&k(+t[1])&&this.add(...t)}return}throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_12] the first input argument, "from" is set (${JSON.stringify(t,null,0)}) but second-one, "to" is not (${JSON.stringify(e,null,0)})`)}if(!B(t)&&B(e))throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_13] the second input argument, "to" is set (${JSON.stringify(e,null,0)}) but first-one, "from" is not (${JSON.stringify(t,null,0)})`);const n=+t,i=+e;if(k(r)&&(r=String(r)),!k(n)||!k(i))throw k(n)&&n>=0?new TypeError(`ranges-push/Ranges/add(): [THROW_ID_10] "to" value, the second input argument, must be a natural number or zero! Currently it's of a type "${typeof i}" equal to: ${JSON.stringify(i,null,4)}`):new TypeError(`ranges-push/Ranges/add(): [THROW_ID_09] "from" value, the first input argument, must be a natural number or zero! Currently it's of a type "${typeof n}" equal to: ${JSON.stringify(n,null,4)}`);if(B(r)&&!F(r)&&!k(r))throw new TypeError(`ranges-push/Ranges/add(): [THROW_ID_08] The third argument, the value to add, was given not as string but ${typeof r}, equal to:\n${JSON.stringify(r,null,4)}`);if(B(this.ranges)&&Array.isArray(this.last())&&n===this.last()[1]){if(this.last()[1]=i,this.last(),null!==this.last()[2]&&B(r)){let t=!(this.last()[2]&&this.last()[2].length>0)||this.opts&&this.opts.mergeType&&1!==this.opts.mergeType?r:this.last()[2]+r;this.opts.limitToBeAddedWhitespace&&(t=H(t,this.opts.limitLinebreaksCount)),F(t)&&!t.length||(this.last()[2]=t)}}else{this.ranges||(this.ranges=[]);const t=void 0===r||F(r)&&!r.length?[n,i]:[n,i,r&&this.opts.limitToBeAddedWhitespace?H(r,this.opts.limitLinebreaksCount):r];this.ranges.push(t)}}push(t,e,r){this.add(t,e,r)}current(){return Array.isArray(this.ranges)&&this.ranges.length?(this.ranges=C(this.ranges,{mergeType:this.opts.mergeType}),this.ranges&&this.opts.limitToBeAddedWhitespace?this.ranges.map((t=>B(t[2])?[t[0],t[1],H(t[2],this.opts.limitLinebreaksCount)]:t)):this.ranges):null}wipe(){this.ranges=[]}replace(t){if(Array.isArray(t)&&t.length){if(!Array.isArray(t[0])||!k(t[0][0]))throw new Error(`ranges-push/Ranges/replace(): [THROW_ID_11] Single range was given but we expected array of arrays! The first element, ${JSON.stringify(t[0],null,4)} should be an array and its first element should be an integer, a string index.`);this.ranges=Array.from(t)}else this.ranges=[]}last(){return Array.isArray(this.ranges)&&this.ranges.length?this.ranges[this.ranges.length-1]:null}}function V(t,e,r){let n,i=0,a=0;if(0===arguments.length)throw new Error("ranges-apply: [THROW_ID_01] inputs missing!");if("string"!=typeof t)throw new TypeError(`ranges-apply: [THROW_ID_02] first input argument must be a string! Currently it's: ${typeof t}, equal to: ${JSON.stringify(t,null,4)}`);if(e&&!Array.isArray(e))throw new TypeError(`ranges-apply: [THROW_ID_03] second input argument must be an array (or null)! Currently it's: ${typeof e}, equal to: ${JSON.stringify(e,null,4)}`);if(r&&"function"!=typeof r)throw new TypeError(`ranges-apply: [THROW_ID_04] the third input argument must be a function (or falsey)! Currently it's: ${typeof r}, equal to: ${JSON.stringify(r,null,4)}`);if(!e||!e.filter((t=>t)).length)return t;n=Array.isArray(e)&&Number.isInteger(e[0])&&Number.isInteger(e[1])?[Array.from(e)]:Array.from(e);const o=n.length;let s=0;n.filter((t=>t)).forEach(((t,e)=>{if(r&&(i=Math.floor(s/o*10),i!==a&&(a=i,r(i))),!Array.isArray(t))throw new TypeError(`ranges-apply: [THROW_ID_05] ranges array, second input arg., has ${e}th element not an array: ${JSON.stringify(t,null,4)}, which is ${typeof t}`);if(!Number.isInteger(t[0])){if(!Number.isInteger(+t[0])||+t[0]<0)throw new TypeError(`ranges-apply: [THROW_ID_06] ranges array, second input arg. has ${e}th element, array ${JSON.stringify(t,null,0)}. Its first element is not an integer, string index, but ${typeof t[0]}, equal to: ${JSON.stringify(t[0],null,4)}.`);n[e][0]=+n[e][0]}if(!Number.isInteger(t[1])){if(!Number.isInteger(+t[1])||+t[1]<0)throw new TypeError(`ranges-apply: [THROW_ID_07] ranges array, second input arg. has ${e}th element, array ${JSON.stringify(t,null,0)}. Its second element is not an integer, string index, but ${typeof t[1]}, equal to: ${JSON.stringify(t[1],null,4)}.`);n[e][1]=+n[e][1]}s+=1}));const l=C(n,{progressFn:t=>{r&&(i=10+Math.floor(t/10),i!==a&&(a=i,r(i)))}}),u=Array.isArray(l)?l.length:0;if(u>0){const e=t.slice(l[u-1][1]);t=l.reduce(((e,n,o,s)=>{r&&(i=20+Math.floor(o/u*80),i!==a&&(a=i,r(i)));return e+t.slice(0===o?0:s[o-1][1],s[o][0])+(s[o][2]||"")}),""),t+=e}return t}const q={classicTrim:!1,cr:!1,lf:!1,tab:!1,space:!0,nbsp:!1};function L(t,e){if("string"!=typeof t)throw new Error(`string-trim-spaces-only: [THROW_ID_01] input must be string! It was given as ${typeof t}, equal to:\n${JSON.stringify(t,null,4)}`);const r={...q,...e};function n(t){return r.classicTrim&&!t.trim()||!r.classicTrim&&(r.space&&" "===t||r.cr&&"\r"===t||r.lf&&"\n"===t||r.tab&&"\t"===t||r.nbsp&&" "===t)}let i,a;if(t.length){if(n(t[0]))for(let e=0,r=t.length;e<r;e++){if(!n(t[e])){i=e;break}if(e===t.length-1)return{res:"",ranges:[[0,t.length]]}}if(n(t[t.length-1]))for(let e=t.length;e--;)if(!n(t[e])){a=e+1;break}return i?a?{res:t.slice(i,a),ranges:[[0,i],[a,t.length]]}:{res:t.slice(i),ranges:[[0,i]]}:a?{res:t.slice(0,a),ranges:[[a,t.length]]}:{res:t,ranges:[]}}return{res:"",ranges:[]}}const U=Object.prototype.hasOwnProperty,z={heads:"%%_",tails:"_%%",headsNoWrap:"%%-",tailsNoWrap:"-%%",lookForDataContainers:!0,dataContainerIdentifierTails:"_data",wrapHeadsWith:"",wrapTailsWith:"",dontWrapVars:[],preventDoubleWrapping:!0,wrapGlobalFlipSwitch:!0,noSingleMarkers:!1,resolveToBoolIfAnyValuesContainBool:!0,resolveToFalseIfAnyValuesContainBool:!0,throwWhenNonStringInsertedInString:!1,allowUnresolved:!1};function G(t){return"string"==typeof t}function K(t){return"boolean"==typeof t}function Q(t){return null===t}function X(t){return t&&"object"==typeof t&&!Array.isArray(t)}function Y(t){return null!=t}function Z(t){return G(t)?t.trim():t}function tt(t){if("string"==typeof t&&t.length>0&&-1!==t.indexOf("."))for(let e=0,r=t.length;e<r;e++)if("."===t[e])return t.slice(e+1);return t}function et(t){if("string"==typeof t&&t.length>0&&-1!==t.indexOf("."))for(let e=t.length;e--;)if("."===t[e])return t.slice(0,e);return t}function rt(t){if("string"==typeof t&&t.length>0&&-1!==t.indexOf("."))for(let e=t.length;e--;)if("."===t[e])return t.slice(e+1);return t}function nt(t,e){return!("string"!=typeof t||!t.trim())&&!!(t.includes(e.heads)||t.includes(e.tails)||G(e.headsNoWrap)&&e.headsNoWrap.length>0&&t.includes(e.headsNoWrap)||G(e.tailsNoWrap)&&e.tailsNoWrap.length>0&&t.includes(e.tailsNoWrap))}function it(t,e,r=!1,n,i,a){if(e.wrapHeadsWith||(e.wrapHeadsWith=""),e.wrapTailsWith||(e.wrapTailsWith=""),G(t)&&!r&&e.wrapGlobalFlipSwitch&&!e.dontWrapVars.some((t=>w.isMatch(a,t)))&&(!e.preventDoubleWrapping||e.preventDoubleWrapping&&G(t)&&!t.includes(e.wrapHeadsWith)&&!t.includes(e.wrapTailsWith)))return e.wrapHeadsWith+t+e.wrapTailsWith;if(r){if(!G(t))return t;const r=function(t,e){const r=Object.prototype.hasOwnProperty;if(void 0===t)throw new Error("string-remove-duplicate-heads-tails: [THROW_ID_01] The input is missing!");if("string"!=typeof t)return t;if(e&&!c(e))throw new Error(`string-remove-duplicate-heads-tails: [THROW_ID_03] The given options are not a plain object but ${typeof e}!`);const n={...e};if(n&&r.call(n,"heads")){if(!_(n.heads).every((t=>"string"==typeof t||Array.isArray(t))))throw new Error("string-remove-duplicate-heads-tails: [THROW_ID_04] The opts.heads contains elements which are not string-type!");"string"==typeof n.heads&&(n.heads=_(n.heads))}if(n&&r.call(n,"tails")){if(!_(n.tails).every((t=>"string"==typeof t||Array.isArray(t))))throw new Error("string-remove-duplicate-heads-tails: [THROW_ID_05] The opts.tails contains elements which are not string-type!");"string"==typeof n.tails&&(n.tails=_(n.tails))}const i=L(t).res;if(0===i.length)return t;t=i;const a={heads:["{{"],tails:["}}"],...n};a.heads=a.heads.map((t=>t.trim())),a.tails=a.tails.map((t=>t.trim()));let o=!1,s=!1;const l=new P({limitToBeAddedWhitespace:!0}),u=new P({limitToBeAddedWhitespace:!0});let f=!0,h=!0,g="";function p(t,e){let r;return j(t,0,e.heads,{trimBeforeMatching:!0,cb:(t,e,n)=>(r=n,!0)})&&j(t,r,e.tails,{trimBeforeMatching:!0,cb:(t,e,n)=>(r=n,!0)})?t.slice(r):t}for(;t!==p(t,a);)t=L(p(t,a)).res;function d(t,e){let r;return I(t,t.length-1,e.tails,{trimBeforeMatching:!0,cb:(t,e,n)=>(r=n,!0)})&&r&&I(t,r,e.heads,{trimBeforeMatching:!0,cb:(t,e,n)=>(r=n,!0)})?t.slice(0,r+1):t}for(;t!==d(t,a);)t=L(d(t,a)).res;if(!(a.heads.length&&j(t,0,a.heads,{trimBeforeMatching:!0})&&a.tails.length&&I(t,t.length-1,a.tails,{trimBeforeMatching:!0})))return L(t).res;for(let e=0,r=t.length;e<r;e++)if(""===t[e].trim());else{let r;if(j(t,e,a.heads,{trimBeforeMatching:!0,cb:(t,e,n)=>(r=n,!0)})&&r){let n;h=!0,f&&(f=!0),j(t,r,a.tails,{trimBeforeMatching:!0,cb:(t,e,r)=>(n=r,!0)})&&l.push(e,n),u.current()&&o&&"tails"!==g&&l.push(u.current()),o||u.current()&&(l.push(u.current()),u.wipe()),u.push(e,r),g="heads",e=r-1;continue}if(j(t,e,a.tails,{trimBeforeMatching:!0,cb:(e,n,i)=>(r=Number.isInteger(i)?i:t.length,!0)})&&r){h=!0,f?("heads"===g&&u.wipe(),f=!1):u.push(e,r),g="tails",e=r-1;continue}f&&(f=!0),h&&!o?(o=!0,h=!1):h&&!s?(s=!0,f=!0,h=!1,"heads"===g&&u.wipe()):h&&s&&u.wipe()}return u.current()&&l.push(u.current()),l.current()?V(t,l.current()).trim():t.trim()}(t,{heads:e.wrapHeadsWith,tails:e.wrapTailsWith});return G(r)?function(t,e,r){let n,i;return"string"==typeof t&&t.length>0&&j(t,0,e,{trimBeforeMatching:!0,cb:(t,e,r)=>(n=r,!0)})&&I(t,t.length-1,r,{trimBeforeMatching:!0,cb:(t,e,r)=>(i=r+1,!0)})?t.slice(n,i):t}(r,e.wrapHeadsWith,e.wrapTailsWith):r}return t}function at(t,e,r,n){let i;if(-1!==r.indexOf(".")){let a=r,o=!0;if(n.lookForDataContainers&&"string"==typeof n.dataContainerIdentifierTails&&n.dataContainerIdentifierTails.length>0&&!a.endsWith(n.dataContainerIdentifierTails)){const r=b.get(t,a+n.dataContainerIdentifierTails);X(r)&&b.get(r,e)&&(i=b.get(r,e),o=!1)}for(;o&&-1!==a.indexOf(".");){if(a=et(a),rt(a)===e)throw new Error(`json-variables/findValues(): [THROW_ID_20] While trying to resolve: "${e}" at path "${r}", we encountered a closed loop. The parent key "${rt(a)}" is called the same as the variable "${e}" we're looking for.`);if(n.lookForDataContainers&&"string"==typeof n.dataContainerIdentifierTails&&n.dataContainerIdentifierTails.length>0&&!a.endsWith(n.dataContainerIdentifierTails)){const r=b.get(t,a+n.dataContainerIdentifierTails);X(r)&&b.get(r,e)&&(i=b.get(r,e),o=!1)}if(void 0===i){const r=b.get(t,a);X(r)&&b.get(r,e)&&(i=b.get(r,e),o=!1)}}}if(void 0===i){const r=b.get(t,e);void 0!==r&&(i=r)}if(void 0===i)if(-1===e.indexOf(".")){const n=R(t,e);if(n.length>0)for(let t=0,a=n.length;t<a;t++){if(G(n[t].val)||K(n[t].val)||Q(n[t].val)){i=n[t].val;break}if("number"==typeof n[t].val){i=String(n[t].val);break}if(Array.isArray(n[t].val)){i=n[t].val.join("");break}throw new Error(`json-variables/findValues(): [THROW_ID_21] While trying to resolve: "${e}" at path "${r}", we actually found the key named ${e}, but it was not equal to a string but to:\n${JSON.stringify(n[t],null,4)}\nWe can't resolve a string with that! It should be a string.`)}}else{const r=R(t,function(t){if("string"==typeof t&&t.length>0&&-1!==t.indexOf("."))for(let e=0,r=t.length;e<r;e++)if("."===t[e])return t.slice(0,e);return t}(e));if(r.length>0)for(let t=0,n=r.length;t<n;t++){const n=b.get(r[t].val,tt(e));n&&G(n)&&(i=n)}}return i}function ot(t,e,r,n,i=[]){if(i.includes(r)){let t="";if(i.length>1){const e=" →\n";t=i.reduce(((t,n,i)=>t+(0===i?"":e)+(n===r?"💥 ":"  ")+n)," Here's the path we travelled up until we hit the recursion:\n\n"),t+=`${e}💥 ${r}`}throw new Error(`json-variables/resolveString(): [THROW_ID_19] While trying to resolve: "${e}" at path "${r}", we encountered a closed loop, the key is referencing itself."${t}`)}const a={},o=Array.from(i);o.push(r);const s=new P;function l(i,l,u){for(let f=0,h=i.length;f<h;f++){const h=i[f],c=e.slice(h.headsEndAt,h.tailsStartAt);if(0===c.length)s.push(h.headsStartAt,h.tailsEndAt);else if(U.call(a,c)&&G(a[c]))s.push(h.headsStartAt,h.tailsEndAt,a[c]);else{let i=at(t,c.trim(),r,n);if(void 0===i)if(!0===n.allowUnresolved)i="";else{if("string"!=typeof n.allowUnresolved)throw new Error(`json-variables/processHeadsAndTails(): [THROW_ID_18] We couldn't find the value to resolve the variable ${e.slice(h.headsEndAt,h.tailsStartAt)}. We're at path: "${r}".`);i=n.allowUnresolved}if(!u&&n.throwWhenNonStringInsertedInString&&!G(i))throw new Error(`json-variables/processHeadsAndTails(): [THROW_ID_23] While resolving the variable ${e.slice(h.headsEndAt,h.tailsStartAt)} at path ${r}, it resolved into a non-string value, ${JSON.stringify(i,null,4)}. This is happening because options setting "throwWhenNonStringInsertedInString" is active (set to "true").`);if(K(i)){if(n.resolveToBoolIfAnyValuesContainBool)return s.wipe(),!n.resolveToFalseIfAnyValuesContainBool&&i;i=""}else{if(Q(i)&&u)return s.wipe(),i;i=Array.isArray(i)?String(i.join("")):Q(i)?"":String(i)}const f=r.includes(".")?`${et(r)}.${c}`:c;if(nt(i,n)){const e=it(ot(t,i,f,n,o),n,l,0,0,c.trim());G(e)&&s.push(h.headsStartAt,h.tailsEndAt,e)}else{a[c]=i;const t=it(i,n,l,0,0,c.trim());G(t)&&s.push(h.headsStartAt,h.tailsEndAt,t)}}}}let u;try{u=N(e,n.heads,n.tails,{source:"",throwWhenSomethingWrongIsDetected:!1})}catch(t){throw new Error(`json-variables/resolveString(): [THROW_ID_17] While trying to resolve string: "${e}" at path ${r}, something wrong with heads and tails was detected! Here's the internal error message:\n${t}`)}let f=!1;1===u.length&&""===V(e,[[u[0].headsStartAt,u[0].tailsEndAt]]).trim()&&(f=!0);const h=l(u,!1,f);if(K(h))return h;if(Q(h))return h;try{u=N(e,n.headsNoWrap,n.tailsNoWrap,{source:"",throwWhenSomethingWrongIsDetected:!1})}catch(t){throw new Error(`json-variables/resolveString(): [THROW_ID_22] While trying to resolve string: "${e}" at path ${r}, something wrong with no-wrap heads and no-wrap tails was detected! Here's the internal error message:\n${t}`)}1===u.length&&""===V(e,[[u[0].headsStartAt,u[0].tailsEndAt]]).trim()&&(f=!0);const c=l(u,!0,f);return K(c)||Q(c)?c:s&&s.current()?V(e,s.current()):e}t.defaults=z,t.jVar=function(t,e){if(!arguments.length)throw new Error("json-variables/jVar(): [THROW_ID_01] Alas! Inputs are missing!");if(!X(t))throw new TypeError("json-variables/jVar(): [THROW_ID_02] Alas! The input must be a plain object! Currently it's: "+(Array.isArray(t)?"array":typeof t));if(e&&!X(e))throw new TypeError("json-variables/jVar(): [THROW_ID_03] Alas! An Optional Options Object must be a plain object! Currently it's: "+(Array.isArray(e)?"array":typeof e));const r={...z,...e};let n,i,a;if(r.dontWrapVars?Array.isArray(r.dontWrapVars)||(r.dontWrapVars=_(r.dontWrapVars)):r.dontWrapVars=[],r.dontWrapVars.length>0&&!r.dontWrapVars.every(((t,e)=>!!G(t)||(n=t,i=e,!1))))throw new Error(`json-variables/jVar(): [THROW_ID_05] Alas! All variable names set in opts.dontWrapVars should be of a string type. Computer detected a value "${n}" at index ${i}, which is not string but ${Array.isArray(n)?"array":typeof n}!`);if(""===r.heads)throw new Error("json-variables/jVar(): [THROW_ID_06] Alas! opts.heads are empty!");if(""===r.tails)throw new Error("json-variables/jVar(): [THROW_ID_07] Alas! opts.tails are empty!");if(r.lookForDataContainers&&""===r.dataContainerIdentifierTails)throw new Error("json-variables/jVar(): [THROW_ID_08] Alas! opts.dataContainerIdentifierTails is empty!");if(r.heads===r.tails)throw new Error("json-variables/jVar(): [THROW_ID_09] Alas! opts.heads and opts.tails can't be equal!");if(r.heads===r.headsNoWrap)throw new Error("json-variables/jVar(): [THROW_ID_10] Alas! opts.heads and opts.headsNoWrap can't be equal!");if(r.tails===r.tailsNoWrap)throw new Error("json-variables/jVar(): [THROW_ID_11] Alas! opts.tails and opts.tailsNoWrap can't be equal!");if(""===r.headsNoWrap)throw new Error("json-variables/jVar(): [THROW_ID_12] Alas! opts.headsNoWrap is an empty string!");if(""===r.tailsNoWrap)throw new Error("json-variables/jVar(): [THROW_ID_13] Alas! opts.tailsNoWrap is an empty string!");if(r.headsNoWrap===r.tailsNoWrap)throw new Error("json-variables/jVar(): [THROW_ID_14] Alas! opts.headsNoWrap and opts.tailsNoWrap can't be equal!");return p(t,((e,n,i)=>{if(Y(n)&&nt(e,r))throw new Error(`json-variables/jVar(): [THROW_ID_15] Alas! Object keys can't contain variables!\nPlease check the following key: ${e}`);if(a=void 0!==n?n:e,""===a)return a;if(0!==r.heads.length&&Z(a)===Z(r.heads)||0!==r.tails.length&&Z(a)===Z(r.tails)||0!==r.headsNoWrap.length&&Z(a)===Z(r.headsNoWrap)||0!==r.tailsNoWrap.length&&Z(a)===Z(r.tailsNoWrap)){if(!r.noSingleMarkers)return a;throw new Error(`json-variables/jVar(): [THROW_ID_16] Alas! While processing the input, we stumbled upon ${Z(a)} which is equal to ${Z(a)===Z(r.heads)?"heads":""}${Z(a)===Z(r.tails)?"tails":""}${G(r.headsNoWrap)&&Z(a)===Z(r.headsNoWrap)?"headsNoWrap":""}${G(r.tailsNoWrap)&&Z(a)===Z(r.tailsNoWrap)?"tailsNoWrap":""}. If you wouldn't have set opts.noSingleMarkers to "true" this error would not happen and computer would have left the current element (${Z(a)}) alone`)}return G(a)&&nt(a,r)?ot(t,a,i.path,r):a}))},t.version="10.0.10",Object.defineProperty(t,"__esModule",{value:!0})}));
